{"version":3,"file":"index.js","sources":["../../../../../../adapters/node/index.ts"],"sourcesContent":["import {\n  setAbstractFetchFunc,\n  setAbstractConvertRequestFunc,\n  setAbstractConvertIncomingResponseFunc,\n  setAbstractConvertResponseFunc,\n  setAbstractConvertHeadersFunc,\n  setAbstractRuntimeString,\n} from '../../runtime';\n\nimport {\n  nodeConvertRequest,\n  nodeConvertIncomingResponse,\n  nodeConvertAndSendResponse,\n  nodeConvertAndSetHeaders,\n  nodeRuntimeString,\n} from './adapter';\n\n// For the purposes of this package, fetch correctly implements everything we need\nsetAbstractFetchFunc(globalThis.fetch);\nsetAbstractConvertRequestFunc(nodeConvertRequest);\nsetAbstractConvertIncomingResponseFunc(nodeConvertIncomingResponse);\nsetAbstractConvertResponseFunc(nodeConvertAndSendResponse);\nsetAbstractConvertHeadersFunc(nodeConvertAndSetHeaders);\nsetAbstractRuntimeString(nodeRuntimeString);\n\n// Export a marker to prevent tree-shaking\nexport const nodeAdapterInitialized = true;\n"],"names":["setAbstractFetchFunc","setAbstractConvertRequestFunc","nodeConvertRequest","setAbstractConvertIncomingResponseFunc","nodeConvertIncomingResponse","setAbstractConvertResponseFunc","nodeConvertAndSendResponse","setAbstractConvertHeadersFunc","nodeConvertAndSetHeaders","setAbstractRuntimeString","nodeRuntimeString"],"mappings":";;;;;;AAiBA;AACAA,0BAAoB,CAAC,UAAU,CAAC,KAAK,CAAC;AACtCC,mCAA6B,CAACC,0BAAkB,CAAC;AACjDC,4CAAsC,CAACC,mCAA2B,CAAC;AACnEC,oCAA8B,CAACC,kCAA0B,CAAC;AAC1DC,mCAA6B,CAACC,gCAAwB,CAAC;AACvDC,sCAAwB,CAACC,yBAAiB,CAAC;AAE3C;AACO,MAAM,sBAAsB,GAAG;;;;"}