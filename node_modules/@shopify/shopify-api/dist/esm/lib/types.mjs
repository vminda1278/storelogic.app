var LogSeverity;
(function (LogSeverity) {
    LogSeverity[LogSeverity["Error"] = 0] = "Error";
    LogSeverity[LogSeverity["Warning"] = 1] = "Warning";
    LogSeverity[LogSeverity["Info"] = 2] = "Info";
    LogSeverity[LogSeverity["Debug"] = 3] = "Debug";
})(LogSeverity || (LogSeverity = {}));
var ApiVersion;
(function (ApiVersion) {
    ApiVersion["October22"] = "2022-10";
    ApiVersion["January23"] = "2023-01";
    ApiVersion["April23"] = "2023-04";
    ApiVersion["July23"] = "2023-07";
    ApiVersion["October23"] = "2023-10";
    ApiVersion["January24"] = "2024-01";
    ApiVersion["April24"] = "2024-04";
    ApiVersion["July24"] = "2024-07";
    ApiVersion["October24"] = "2024-10";
    ApiVersion["January25"] = "2025-01";
    ApiVersion["April25"] = "2025-04";
    ApiVersion["July25"] = "2025-07";
    ApiVersion["October25"] = "2025-10";
    ApiVersion["January26"] = "2026-01";
    ApiVersion["Unstable"] = "unstable";
})(ApiVersion || (ApiVersion = {}));
const LIBRARY_NAME = 'Shopify API Library';
/* eslint-disable @shopify/typescript/prefer-pascal-case-enums */
var ShopifyHeader;
(function (ShopifyHeader) {
    ShopifyHeader["AccessToken"] = "X-Shopify-Access-Token";
    ShopifyHeader["ApiVersion"] = "X-Shopify-API-Version";
    ShopifyHeader["Domain"] = "X-Shopify-Shop-Domain";
    ShopifyHeader["Hmac"] = "X-Shopify-Hmac-Sha256";
    ShopifyHeader["Topic"] = "X-Shopify-Topic";
    ShopifyHeader["SubTopic"] = "X-Shopify-Sub-Topic";
    ShopifyHeader["WebhookId"] = "X-Shopify-Webhook-Id";
    ShopifyHeader["StorefrontPrivateToken"] = "Shopify-Storefront-Private-Token";
    ShopifyHeader["StorefrontSDKVariant"] = "X-SDK-Variant";
    ShopifyHeader["StorefrontSDKVersion"] = "X-SDK-Version";
})(ShopifyHeader || (ShopifyHeader = {}));
/* eslint-enable @shopify/typescript/prefer-pascal-case-enums */
var ClientType;
(function (ClientType) {
    ClientType["Rest"] = "rest";
    ClientType["Graphql"] = "graphql";
})(ClientType || (ClientType = {}));
const privacyTopics = [
    'CUSTOMERS_DATA_REQUEST',
    'CUSTOMERS_REDACT',
    'SHOP_REDACT',
];
var BillingInterval;
(function (BillingInterval) {
    BillingInterval["OneTime"] = "ONE_TIME";
    BillingInterval["Every30Days"] = "EVERY_30_DAYS";
    BillingInterval["Annual"] = "ANNUAL";
    BillingInterval["Usage"] = "USAGE";
})(BillingInterval || (BillingInterval = {}));
var BillingReplacementBehavior;
(function (BillingReplacementBehavior) {
    BillingReplacementBehavior["ApplyImmediately"] = "APPLY_IMMEDIATELY";
    BillingReplacementBehavior["ApplyOnNextBillingCycle"] = "APPLY_ON_NEXT_BILLING_CYCLE";
    BillingReplacementBehavior["Standard"] = "STANDARD";
})(BillingReplacementBehavior || (BillingReplacementBehavior = {}));
var StatusCode;
(function (StatusCode) {
    StatusCode[StatusCode["Continue"] = 100] = "Continue";
    StatusCode[StatusCode["SwitchingProtocols"] = 101] = "SwitchingProtocols";
    StatusCode[StatusCode["Ok"] = 200] = "Ok";
    StatusCode[StatusCode["Created"] = 201] = "Created";
    StatusCode[StatusCode["Accepted"] = 202] = "Accepted";
    StatusCode[StatusCode["NonAuthoritativeInformation"] = 203] = "NonAuthoritativeInformation";
    StatusCode[StatusCode["NoContent"] = 204] = "NoContent";
    StatusCode[StatusCode["ResetContent"] = 205] = "ResetContent";
    StatusCode[StatusCode["PartialContent"] = 206] = "PartialContent";
    StatusCode[StatusCode["MultipleChoices"] = 300] = "MultipleChoices";
    StatusCode[StatusCode["MovedPermanently"] = 301] = "MovedPermanently";
    StatusCode[StatusCode["Found"] = 302] = "Found";
    StatusCode[StatusCode["SeeOther"] = 303] = "SeeOther";
    StatusCode[StatusCode["NotModified"] = 304] = "NotModified";
    StatusCode[StatusCode["UseProxy"] = 305] = "UseProxy";
    StatusCode[StatusCode["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    StatusCode[StatusCode["BadRequest"] = 400] = "BadRequest";
    StatusCode[StatusCode["Unauthorized"] = 401] = "Unauthorized";
    StatusCode[StatusCode["PaymentRequired"] = 402] = "PaymentRequired";
    StatusCode[StatusCode["Forbidden"] = 403] = "Forbidden";
    StatusCode[StatusCode["NotFound"] = 404] = "NotFound";
    StatusCode[StatusCode["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    StatusCode[StatusCode["NotAcceptable"] = 406] = "NotAcceptable";
    StatusCode[StatusCode["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    StatusCode[StatusCode["RequestTimeout"] = 408] = "RequestTimeout";
    StatusCode[StatusCode["Conflict"] = 409] = "Conflict";
    StatusCode[StatusCode["Gone"] = 410] = "Gone";
    StatusCode[StatusCode["LengthRequired"] = 411] = "LengthRequired";
    StatusCode[StatusCode["PreconditionFailed"] = 412] = "PreconditionFailed";
    StatusCode[StatusCode["RequestEntityTooLarge"] = 413] = "RequestEntityTooLarge";
    StatusCode[StatusCode["RequestUriTooLong"] = 414] = "RequestUriTooLong";
    StatusCode[StatusCode["UnsupportedMediaType"] = 415] = "UnsupportedMediaType";
    StatusCode[StatusCode["RequestedRangeNotSatisfiable"] = 416] = "RequestedRangeNotSatisfiable";
    StatusCode[StatusCode["ExpectationFailed"] = 417] = "ExpectationFailed";
    StatusCode[StatusCode["ImATeapot"] = 418] = "ImATeapot";
    StatusCode[StatusCode["UnprocessableEntity"] = 422] = "UnprocessableEntity";
    StatusCode[StatusCode["TooManyRequests"] = 429] = "TooManyRequests";
    StatusCode[StatusCode["InternalServerError"] = 500] = "InternalServerError";
    StatusCode[StatusCode["NotImplemented"] = 501] = "NotImplemented";
    StatusCode[StatusCode["BadGateway"] = 502] = "BadGateway";
    StatusCode[StatusCode["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    StatusCode[StatusCode["GatewayTimeout"] = 504] = "GatewayTimeout";
    StatusCode[StatusCode["HttpVersionNotSupported"] = 505] = "HttpVersionNotSupported";
})(StatusCode || (StatusCode = {}));
var Method;
(function (Method) {
    Method["Get"] = "GET";
    Method["Post"] = "POST";
    Method["Put"] = "PUT";
    Method["Patch"] = "PATCH";
    Method["Delete"] = "DELETE";
    Method["Head"] = "HEAD";
    Method["Options"] = "OPTIONS";
    Method["Connect"] = "CONNECT";
})(Method || (Method = {}));

export { ApiVersion, BillingInterval, BillingReplacementBehavior, ClientType, LIBRARY_NAME, LogSeverity, Method, ShopifyHeader, StatusCode, privacyTopics };
//# sourceMappingURL=types.mjs.map
