'use strict';

var shopifyApi = require('@shopify/shopify-api');
require('../../../types.js');
require('react-router');
var handleClientError = require('../helpers/handle-client-error.js');

const createMerchantCustomAuthStrategy = (params) => {
    const { api, logger } = params;
    async function authenticate(_request, sessionContext) {
        const { shop } = sessionContext;
        logger.debug('Building session from configured access token for merchant custom app', { shop });
        const session = api.session.customAppSession(shop);
        return session;
    }
    function handleClientError$1(request) {
        return handleClientError.handleClientErrorFactory({
            request,
            onError: async ({ error }) => {
                if (error.response.code === 401) {
                    logger.info('Request failed with 401. Review your API credentials or generate new tokens. https://shopify.dev/docs/apps/build/authentication-authorization/access-token-types/generate-app-access-tokens-admin#rotating-api-credentials-for-admin-created-apps ');
                    throw new shopifyApi.ShopifyError('Unauthorized: Access token has been revoked.');
                }
            },
        });
    }
    return {
        authenticate,
        handleClientError: handleClientError$1,
    };
};

exports.createMerchantCustomAuthStrategy = createMerchantCustomAuthStrategy;
//# sourceMappingURL=merchant-custom-app.js.map
