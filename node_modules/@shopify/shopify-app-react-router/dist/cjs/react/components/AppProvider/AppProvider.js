'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var reactRouter = require('react-router');

/**
 * Sets up your app to look like the admin
 *
 * Adds Polaris Web components to the route.
 * If embedded is true and apiKey is provided, then the App Bridge script will be added to the page.
 *
 * {@link https://shopify.dev/docs/apps/admin/embedded-app-home}
 * {@link https://shopify.dev/docs/api/app-home/using-polaris-components}
 * {@link https://shopify.dev/tools/app-bridge}
 *
 * @example
 * <caption>Set up AppProvider for an embedded route</caption>
 * <description>Wrap your route in the `AppProvider` component and pass in your API key.</description>
 * ```ts
 * // /app/routes/**\/*.ts
 * import {useLoaderData} from 'react-router';
 * import {authenticate} from '~/shopify.server';
 * import {AppProvider} from '@shopify/shopify-app-react-router/react';
 *
 * export async function loader({ request }) {
 *   await authenticate.admin(request);
 *
 *   return { apiKey: process.env.SHOPIFY_API_KEY };
 * }
 *
 * export default function App() {
 *   const { apiKey } = useLoaderData();
 *
 *   return (
 *     <AppProvider embedded apiKey={apiKey}>
 *       <Outlet />
 *     </AppProvider>
 *   );
 * }
 * ```
 *
 * @example
 * <caption>Set up AppProvider for a non-embedded route</caption>
 * <description>Add Polaris web components to the route, without adding the App Bridge script.</description>
 * ```ts
 * // /app/routes/**\/*.ts
 * import {AppProvider} from '@shopify/shopify-app-react-router/react';
 *
 * export default function App() {
 *   return (
 *     <AppProvider embedded={false}>
 *       <Outlet />
 *     </AppProvider>
 *   );
 * }
 * ```
 */
function AppProvider(props) {
    return (jsxRuntime.jsxs(jsxRuntime.Fragment, { children: [props.embedded && jsxRuntime.jsx(AppBridge, { apiKey: props.apiKey }), jsxRuntime.jsx("script", { src: "https://cdn.shopify.com/shopifycloud/polaris.js" }), props.children] }));
}
function AppBridge({ apiKey }) {
    const navigate = reactRouter.useNavigate();
    react.useEffect(() => {
        const handleNavigate = (event) => {
            const href = event.target?.getAttribute('href');
            if (href) {
                navigate(href);
            }
        };
        document.addEventListener('shopify:navigate', handleNavigate);
        return () => {
            document.removeEventListener('shopify:navigate', handleNavigate);
        };
    }, [navigate]);
    return (jsxRuntime.jsx("script", { src: "https://cdn.shopify.com/shopifycloud/app-bridge.js", "data-api-key": apiKey }));
}

exports.AppProvider = AppProvider;
//# sourceMappingURL=AppProvider.js.map
