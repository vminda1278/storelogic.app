{"version":3,"file":"respond-to-invalid-session-token.mjs","sources":["../../../../../../src/server/authenticate/helpers/respond-to-invalid-session-token.ts"],"sourcesContent":["import {redirectToBouncePage} from '../admin/helpers/redirect-to-bounce-page';\nimport {RETRY_INVALID_SESSION_HEADER} from '../const';\nimport {BasicParams} from '../../types';\n\ninterface RespondToInvalidSessionTokenParams {\n  params: BasicParams;\n  request: Request;\n  retryRequest?: boolean;\n}\n\nexport function respondToInvalidSessionToken({\n  params,\n  request,\n  retryRequest = false,\n}: RespondToInvalidSessionTokenParams) {\n  const {api, logger, config} = params;\n\n  const isDocumentRequest = !request.headers.get('authorization');\n  if (isDocumentRequest) {\n    return redirectToBouncePage({api, logger, config}, new URL(request.url));\n  }\n\n  throw new Response(undefined, {\n    status: 401,\n    statusText: 'Unauthorized',\n    headers: retryRequest ? RETRY_INVALID_SESSION_HEADER : {},\n  });\n}\n"],"names":[],"mappings":";;;AAUM,SAAU,4BAA4B,CAAC,EAC3C,MAAM,EACN,OAAO,EACP,YAAY,GAAG,KAAK,GACe,EAAA;IACnC,MAAM,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAC,GAAG,MAAM;IAEpC,MAAM,iBAAiB,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;IAC/D,IAAI,iBAAiB,EAAE;AACrB,QAAA,OAAO,oBAAoB,CAAC,EAAc,MAAM,EAAC,EAAE,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1E;AAEA,IAAA,MAAM,IAAI,QAAQ,CAAC,SAAS,EAAE;AAC5B,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,UAAU,EAAE,cAAc;QAC1B,OAAO,EAAE,YAAY,GAAG,4BAA4B,GAAG,EAAE;AAC1D,KAAA,CAAC;AACJ;;;;"}