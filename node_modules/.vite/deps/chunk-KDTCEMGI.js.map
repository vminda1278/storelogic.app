{
  "version": 3,
  "sources": ["../../lib/types.ts", "../../lib/auth/scopes/index.ts", "../../lib/session/session.ts", "../../lib/utils/types.ts", "../../lib/webhooks/types.ts", "../../compare-versions/src/utils.ts", "../../compare-versions/src/compareVersions.ts", "../../compare-versions/src/compare.ts", "../../lib/version.ts", "../../lib/logger/log.ts", "../../lib/logger/index.ts", "../../rest/load-rest-resources.ts", "../../future/flags.ts", "../../lib/config.ts", "../../@shopify/graphql-client/src/graphql-client/constants.ts", "../../@shopify/graphql-client/src/graphql-client/utilities.ts", "../../@shopify/graphql-client/src/graphql-client/http-fetch.ts", "../../@shopify/graphql-client/src/graphql-client/graphql-client.ts", "../../@shopify/graphql-client/src/api-client-utilities/validations.ts", "../../@shopify/graphql-client/src/api-client-utilities/api-versions.ts", "../../@shopify/graphql-client/src/api-client-utilities/utilities.ts", "../../@shopify/admin-api-client/src/constants.ts", "../../@shopify/admin-api-client/src/validations.ts", "../../@shopify/admin-api-client/src/graphql/client.ts", "../../@shopify/admin-api-client/src/rest/types.ts", "../../@shopify/admin-api-client/src/rest/client.ts", "../../lib/clients/common.ts", "../../lib/clients/admin/graphql/client.ts", "../../lossless-json/src/utils.ts", "../../lossless-json/src/LosslessNumber.ts", "../../lossless-json/src/numberParsers.ts", "../../lossless-json/src/revive.ts", "../../lossless-json/src/parse.ts", "../../lib/clients/admin/rest/client.ts", "../../@shopify/storefront-api-client/src/constants.ts", "../../@shopify/storefront-api-client/src/validations.ts", "../../@shopify/storefront-api-client/src/storefront-api-client.ts", "../../lib/clients/storefront/client.ts", "../../lib/clients/graphql_proxy/graphql_proxy.ts", "../../lib/clients/index.ts", "../../lib/utils/processed-query.ts", "../../lib/auth/oauth/safe-compare.ts", "../../lib/utils/hmac-validator.ts", "../../lib/auth/decode-host.ts", "../../lib/utils/shop-admin-url-helper.ts", "../../lib/utils/shop-validator.ts", "../../lib/clients/types.ts", "../../lib/utils/fetch-request.ts", "../../lib/auth/oauth/types.ts", "../../lib/auth/oauth/nonce.ts", "../../jose/dist/browser/runtime/webcrypto.js", "../../jose/dist/browser/lib/buffer_utils.js", "../../jose/dist/browser/runtime/base64url.js", "../../jose/dist/browser/util/errors.js", "../../jose/dist/browser/runtime/random.js", "../../jose/dist/browser/lib/crypto_key.js", "../../jose/dist/browser/lib/invalid_key_input.js", "../../jose/dist/browser/runtime/is_key_like.js", "../../jose/dist/browser/lib/is_disjoint.js", "../../jose/dist/browser/lib/is_object.js", "../../jose/dist/browser/runtime/check_key_length.js", "../../jose/dist/browser/lib/is_jwk.js", "../../jose/dist/browser/runtime/jwk_to_key.js", "../../jose/dist/browser/runtime/normalize_key.js", "../../jose/dist/browser/key/import.js", "../../jose/dist/browser/lib/check_key_type.js", "../../jose/dist/browser/lib/validate_crit.js", "../../jose/dist/browser/lib/validate_algorithms.js", "../../jose/dist/browser/lib/private_symbols.js", "../../jose/dist/browser/runtime/subtle_dsa.js", "../../jose/dist/browser/runtime/get_sign_verify_key.js", "../../jose/dist/browser/runtime/verify.js", "../../jose/dist/browser/jws/flattened/verify.js", "../../jose/dist/browser/jws/compact/verify.js", "../../jose/dist/browser/lib/epoch.js", "../../jose/dist/browser/lib/secs.js", "../../jose/dist/browser/lib/jwt_claims_set.js", "../../jose/dist/browser/jwt/verify.js", "../../jose/dist/browser/jwks/remote.js", "../../jose/dist/browser/util/base64url.js", "../../lib/utils/get-hmac-key.ts", "../../lib/session/decode-session-token.ts", "../../lib/session/session-utils.ts", "../../lib/auth/oauth/create-session.ts", "../../lib/auth/oauth/oauth.ts", "../../lib/auth/get-embedded-app-url.ts", "../../lib/auth/oauth/token-exchange.ts", "../../lib/auth/oauth/client-credentials.ts", "../../lib/auth/index.ts", "../../lib/session/index.ts", "../../lib/utils/version-compatible.ts", "../../lib/utils/index.ts", "../../lib/webhooks/registry.ts", "../../lib/webhooks/query-template.ts", "../../lib/webhooks/register.ts", "../../lib/webhooks/validate.ts", "../../lib/webhooks/process.ts", "../../lib/webhooks/index.ts", "../../lib/billing/types.ts", "../../lib/billing/utils.ts", "../../lib/billing/check.ts", "../../lib/billing/request.ts", "../../lib/billing/cancel.ts", "../../lib/billing/subscriptions.ts", "../../lib/billing/create-usage-record.ts", "../../lib/billing/update-usage-subscription-capped-amount.ts", "../../lib/billing/index.ts", "../../lib/flow/validate.ts", "../../lib/flow/index.ts", "../../lib/fulfillment-service/validate.ts", "../../lib/fulfillment-service/index.ts", "../../lib/index.ts"],
  "sourcesContent": ["export enum LogSeverity {\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\nexport enum ApiVersion {\n  October22 = '2022-10',\n  January23 = '2023-01',\n  April23 = '2023-04',\n  July23 = '2023-07',\n  October23 = '2023-10',\n  January24 = '2024-01',\n  April24 = '2024-04',\n  July24 = '2024-07',\n  October24 = '2024-10',\n  January25 = '2025-01',\n  April25 = '2025-04',\n  July25 = '2025-07',\n  October25 = '2025-10',\n  January26 = '2026-01',\n  Unstable = 'unstable',\n}\n\nexport const LIBRARY_NAME = 'Shopify API Library';\n\n/* eslint-disable @shopify/typescript/prefer-pascal-case-enums */\nexport enum ShopifyHeader {\n  AccessToken = 'X-Shopify-Access-Token',\n  ApiVersion = 'X-Shopify-API-Version',\n  Domain = 'X-Shopify-Shop-Domain',\n  Hmac = 'X-Shopify-Hmac-Sha256',\n  Topic = 'X-Shopify-Topic',\n  SubTopic = 'X-Shopify-Sub-Topic',\n  WebhookId = 'X-Shopify-Webhook-Id',\n  StorefrontPrivateToken = 'Shopify-Storefront-Private-Token',\n  StorefrontSDKVariant = 'X-SDK-Variant',\n  StorefrontSDKVersion = 'X-SDK-Version',\n}\n/* eslint-enable @shopify/typescript/prefer-pascal-case-enums */\n\nexport enum ClientType {\n  Rest = 'rest',\n  Graphql = 'graphql',\n}\n\nexport const privacyTopics: string[] = [\n  'CUSTOMERS_DATA_REQUEST',\n  'CUSTOMERS_REDACT',\n  'SHOP_REDACT',\n];\n\nexport enum BillingInterval {\n  OneTime = 'ONE_TIME',\n  Every30Days = 'EVERY_30_DAYS',\n  Annual = 'ANNUAL',\n  Usage = 'USAGE',\n}\n\nexport type RecurringBillingIntervals = Exclude<\n  BillingInterval,\n  BillingInterval.OneTime\n>;\n\nexport enum BillingReplacementBehavior {\n  ApplyImmediately = 'APPLY_IMMEDIATELY',\n  ApplyOnNextBillingCycle = 'APPLY_ON_NEXT_BILLING_CYCLE',\n  Standard = 'STANDARD',\n}\n\nexport enum StatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  Ok = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  MultipleChoices = 300,\n  MovedPermanently = 301,\n  Found = 302,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  TemporaryRedirect = 307,\n  BadRequest = 400,\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  RequestEntityTooLarge = 413,\n  RequestUriTooLong = 414,\n  UnsupportedMediaType = 415,\n  RequestedRangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  ImATeapot = 418,\n  UnprocessableEntity = 422,\n  TooManyRequests = 429,\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HttpVersionNotSupported = 505,\n}\n\nexport enum Method {\n  Get = 'GET',\n  Post = 'POST',\n  Put = 'PUT',\n  Patch = 'PATCH',\n  Delete = 'DELETE',\n  Head = 'HEAD',\n  Options = 'OPTIONS',\n  Connect = 'CONNECT',\n}\n", "/**\n * A class that represents a set of access token scopes.\n */\nclass AuthScopes {\n  public static SCOPE_DELIMITER = ',';\n\n  private compressedScopes: Set<string>;\n  private expandedScopes: Set<string>;\n  private originalScopes: Set<string>;\n\n  constructor(scopes: string | string[] | AuthScopes | undefined) {\n    let scopesArray: string[] = [];\n    if (typeof scopes === 'string') {\n      scopesArray = scopes.split(\n        new RegExp(`${AuthScopes.SCOPE_DELIMITER}\\\\s*`),\n      );\n    } else if (Array.isArray(scopes)) {\n      scopesArray = scopes;\n    } else if (scopes) {\n      scopesArray = Array.from(scopes.expandedScopes);\n    }\n\n    scopesArray = scopesArray\n      .map((scope) => scope.trim())\n      .filter((scope) => scope.length);\n\n    const impliedScopes = this.getImpliedScopes(scopesArray);\n\n    const scopeSet = new Set(scopesArray);\n    const impliedSet = new Set(impliedScopes);\n\n    this.compressedScopes = new Set(\n      [...scopeSet].filter((x) => !impliedSet.has(x)),\n    );\n    this.expandedScopes = new Set([...scopeSet, ...impliedSet]);\n    this.originalScopes = scopeSet;\n  }\n\n  /**\n   * Checks whether the current set of scopes includes the given one.\n   */\n  public has(scope: string | string[] | AuthScopes | undefined) {\n    let other: AuthScopes;\n\n    if (scope instanceof AuthScopes) {\n      other = scope;\n    } else {\n      other = new AuthScopes(scope);\n    }\n\n    return (\n      other.toArray().filter((x) => !this.expandedScopes.has(x)).length === 0\n    );\n  }\n\n  /**\n   * Checks whether the current set of scopes equals the given one.\n   */\n  public equals(otherScopes: string | string[] | AuthScopes | undefined) {\n    let other: AuthScopes;\n\n    if (otherScopes instanceof AuthScopes) {\n      other = otherScopes;\n    } else {\n      other = new AuthScopes(otherScopes);\n    }\n\n    return (\n      this.compressedScopes.size === other.compressedScopes.size &&\n      this.toArray().filter((x) => !other.has(x)).length === 0\n    );\n  }\n\n  /**\n   * Returns a comma-separated string with the current set of scopes.\n   */\n  public toString() {\n    return this.toArray().join(AuthScopes.SCOPE_DELIMITER);\n  }\n\n  /**\n   * Returns an array with the current set of scopes.\n   */\n  public toArray(returnOriginalScopes = false) {\n    return returnOriginalScopes\n      ? [...this.originalScopes]\n      : [...this.compressedScopes];\n  }\n\n  private getImpliedScopes(scopesArray: string[]): string[] {\n    return scopesArray.reduce((array: string[], current: string) => {\n      const matches = current.match(/^(unauthenticated_)?write_(.*)$/);\n      if (matches) {\n        array.push(`${matches[1] ? matches[1] : ''}read_${matches[2]}`);\n      }\n\n      return array;\n    }, []);\n  }\n}\n\nexport {AuthScopes};\n", "/* eslint-disable no-fallthrough */\nimport {InvalidSession} from '../error';\nimport {OnlineAccessInfo} from '../auth/oauth/types';\nimport {AuthScopes} from '../auth/scopes';\n\nimport {SessionParams} from './types';\n\nconst propertiesToSave = [\n  'id',\n  'shop',\n  'state',\n  'isOnline',\n  'scope',\n  'accessToken',\n  'expires',\n  'onlineAccessInfo',\n];\n\n/**\n * Stores App information from logged in merchants so they can make authenticated requests to the Admin API.\n */\nexport class Session {\n  public static fromPropertyArray(\n    entries: [string, string | number | boolean][],\n    returnUserData = false,\n  ): Session {\n    if (!Array.isArray(entries)) {\n      throw new InvalidSession(\n        'The parameter is not an array: a Session cannot be created from this object.',\n      );\n    }\n\n    const obj = Object.fromEntries(\n      entries\n        .filter(([_key, value]) => value !== null && value !== undefined)\n        // Sanitize keys\n        .map(([key, value]) => {\n          switch (key.toLowerCase()) {\n            case 'isonline':\n              return ['isOnline', value];\n            case 'accesstoken':\n              return ['accessToken', value];\n            case 'onlineaccessinfo':\n              return ['onlineAccessInfo', value];\n            case 'userid':\n              return ['userId', value];\n            case 'firstname':\n              return ['firstName', value];\n            case 'lastname':\n              return ['lastName', value];\n            case 'accountowner':\n              return ['accountOwner', value];\n            case 'emailverified':\n              return ['emailVerified', value];\n            default:\n              return [key.toLowerCase(), value];\n          }\n        }),\n    );\n\n    const sessionData = {} as SessionParams;\n    const onlineAccessInfo = {\n      associated_user: {},\n    } as OnlineAccessInfo;\n    Object.entries(obj).forEach(([key, value]) => {\n      switch (key) {\n        case 'isOnline':\n          if (typeof value === 'string') {\n            sessionData[key] = value.toString().toLowerCase() === 'true';\n          } else if (typeof value === 'number') {\n            sessionData[key] = Boolean(value);\n          } else {\n            sessionData[key] = value;\n          }\n          break;\n        case 'scope':\n          sessionData[key] = value.toString();\n          break;\n        case 'expires':\n          sessionData[key] = value ? new Date(Number(value)) : undefined;\n          break;\n        case 'onlineAccessInfo':\n          onlineAccessInfo.associated_user.id = Number(value);\n          break;\n        case 'userId':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.id = Number(value);\n            break;\n          }\n        case 'firstName':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.first_name = String(value);\n            break;\n          }\n        case 'lastName':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.last_name = String(value);\n            break;\n          }\n        case 'email':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.email = String(value);\n            break;\n          }\n        case 'accountOwner':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.account_owner = Boolean(value);\n            break;\n          }\n        case 'locale':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.locale = String(value);\n            break;\n          }\n        case 'collaborator':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.collaborator = Boolean(value);\n            break;\n          }\n        case 'emailVerified':\n          if (returnUserData) {\n            onlineAccessInfo.associated_user.email_verified = Boolean(value);\n            break;\n          }\n        // Return any user keys as passed in\n        default:\n          sessionData[key] = value;\n      }\n    });\n    if (sessionData.isOnline) {\n      sessionData.onlineAccessInfo = onlineAccessInfo;\n    }\n    const session = new Session(sessionData);\n    return session;\n  }\n\n  /**\n   * The unique identifier for the session.\n   */\n  readonly id: string;\n  /**\n   * The Shopify shop domain, such as `example.myshopify.com`.\n   */\n  public shop: string;\n  /**\n   * The state of the session. Used for the OAuth authentication code flow.\n   */\n  public state: string;\n  /**\n   * Whether the access token in the session is online or offline.\n   */\n  public isOnline: boolean;\n  /**\n   * The desired scopes for the access token, at the time the session was created.\n   */\n  public scope?: string;\n  /**\n   * The date the access token expires.\n   */\n  public expires?: Date;\n  /**\n   * The access token for the session.\n   */\n  public accessToken?: string;\n  /**\n   * Information on the user for the session. Only present for online sessions.\n   */\n  public onlineAccessInfo?: OnlineAccessInfo;\n\n  constructor(params: SessionParams) {\n    Object.assign(this, params);\n  }\n\n  /**\n   * Whether the session is active. Active sessions have an access token that is not expired, and has has the given\n   * scopes if scopes is equal to a truthy value.\n   */\n  public isActive(\n    scopes: AuthScopes | string | string[] | undefined,\n    withinMillisecondsOfExpiry = 500,\n  ): boolean {\n    const hasAccessToken = Boolean(this.accessToken);\n    const isTokenNotExpired = !this.isExpired(withinMillisecondsOfExpiry);\n    const isScopeChanged = this.isScopeChanged(scopes);\n    return !isScopeChanged && hasAccessToken && isTokenNotExpired;\n  }\n\n  /**\n   * Whether the access token includes the given scopes if they are provided.\n   */\n  public isScopeChanged(\n    scopes: AuthScopes | string | string[] | undefined,\n  ): boolean {\n    if (typeof scopes === 'undefined') {\n      return false;\n    }\n\n    return !this.isScopeIncluded(scopes);\n  }\n\n  /**\n   * Whether the access token includes the given scopes.\n   */\n  public isScopeIncluded(scopes: AuthScopes | string | string[]): boolean {\n    const requiredScopes =\n      scopes instanceof AuthScopes ? scopes : new AuthScopes(scopes);\n    const sessionScopes = new AuthScopes(this.scope);\n\n    return sessionScopes.has(requiredScopes);\n  }\n\n  /**\n   * Whether the access token is expired.\n   */\n  public isExpired(withinMillisecondsOfExpiry = 0): boolean {\n    return Boolean(\n      this.expires &&\n        this.expires.getTime() - withinMillisecondsOfExpiry < Date.now(),\n    );\n  }\n\n  /**\n   * Converts an object with data into a Session.\n   */\n  public toObject(): SessionParams {\n    const object: SessionParams = {\n      id: this.id,\n      shop: this.shop,\n      state: this.state,\n      isOnline: this.isOnline,\n    };\n\n    if (this.scope) {\n      object.scope = this.scope;\n    }\n    if (this.expires) {\n      object.expires = this.expires;\n    }\n    if (this.accessToken) {\n      object.accessToken = this.accessToken;\n    }\n    if (this.onlineAccessInfo) {\n      object.onlineAccessInfo = this.onlineAccessInfo;\n    }\n    return object;\n  }\n\n  /**\n   * Checks whether the given session is equal to this session.\n   */\n  public equals(other: Session | undefined): boolean {\n    if (!other) return false;\n\n    const mandatoryPropsMatch =\n      this.id === other.id &&\n      this.shop === other.shop &&\n      this.state === other.state &&\n      this.isOnline === other.isOnline;\n\n    if (!mandatoryPropsMatch) return false;\n\n    const copyA = this.toPropertyArray(true);\n    copyA.sort(([k1], [k2]) => (k1 < k2 ? -1 : 1));\n\n    const copyB = other.toPropertyArray(true);\n    copyB.sort(([k1], [k2]) => (k1 < k2 ? -1 : 1));\n\n    return JSON.stringify(copyA) === JSON.stringify(copyB);\n  }\n\n  /**\n   * Converts the session into an array of key-value pairs.\n   */\n  public toPropertyArray(\n    returnUserData = false,\n  ): [string, string | number | boolean][] {\n    return (\n      Object.entries(this)\n        .filter(\n          ([key, value]) =>\n            propertiesToSave.includes(key) &&\n            value !== undefined &&\n            value !== null,\n        )\n        // Prepare values for db storage\n        .flatMap(([key, value]): [string, string | number | boolean][] => {\n          switch (key) {\n            case 'expires':\n              return [[key, value ? value.getTime() : undefined]];\n            case 'onlineAccessInfo':\n              // eslint-disable-next-line no-negated-condition\n              if (!returnUserData) {\n                return [[key, value.associated_user.id]];\n              } else {\n                return [\n                  ['userId', value?.associated_user?.id],\n                  ['firstName', value?.associated_user?.first_name],\n                  ['lastName', value?.associated_user?.last_name],\n                  ['email', value?.associated_user?.email],\n                  ['locale', value?.associated_user?.locale],\n                  ['emailVerified', value?.associated_user?.email_verified],\n                  ['accountOwner', value?.associated_user?.account_owner],\n                  ['collaborator', value?.associated_user?.collaborator],\n                ];\n              }\n            default:\n              return [[key, value]];\n          }\n        })\n        // Filter out tuples with undefined values\n        .filter(([_key, value]) => value !== undefined)\n    );\n  }\n}\n", "import {AdapterArgs} from '../../runtime/types';\n\nexport enum HmacValidationType {\n  Flow = 'flow',\n  Webhook = 'webhook',\n  FulfillmentService = 'fulfillment_service',\n}\n\nexport interface ValidateParams extends AdapterArgs {\n  /**\n   * The raw body of the request.\n   */\n  rawBody: string;\n}\n\nexport const ValidationErrorReason = {\n  MissingBody: 'missing_body',\n  InvalidHmac: 'invalid_hmac',\n  MissingHmac: 'missing_hmac',\n} as const;\n\nexport type ValidationErrorReasonType =\n  (typeof ValidationErrorReason)[keyof typeof ValidationErrorReason];\n\nexport interface ValidationInvalid {\n  /**\n   * Whether the request is a valid Flow request from Shopify.\n   */\n  valid: false;\n  /**\n   * The reason why the request is not valid.\n   */\n  reason: ValidationErrorReasonType;\n}\n\nexport interface ValidationValid {\n  /**\n   * Whether the request is a valid request from Shopify.\n   */\n  valid: true;\n}\n", "import {ValidationErrorReason, ValidationInvalid} from '../utils/types';\nimport {AdapterArgs} from '../../runtime/types';\nimport {Session} from '../session/session';\n\nexport enum DeliveryMethod {\n  Http = 'http',\n  EventBridge = 'eventbridge',\n  PubSub = 'pubsub',\n}\n\nexport type WebhookHandlerFunction = (\n  topic: string,\n  shop_domain: string,\n  body: string,\n  webhookId: string,\n  apiVersion?: string,\n  subTopic?: string,\n  context?: any,\n) => Promise<void>;\n\ninterface BaseWebhookHandler {\n  id?: string;\n  includeFields?: string[];\n  metafieldNamespaces?: string[];\n  subTopic?: string;\n  context?: any;\n}\n\nexport interface HttpWebhookHandler extends BaseWebhookHandler {\n  deliveryMethod: DeliveryMethod.Http;\n  callbackUrl: string;\n}\n\nexport interface HttpWebhookHandlerWithCallback extends HttpWebhookHandler {\n  callback: WebhookHandlerFunction;\n}\n\nexport interface EventBridgeWebhookHandler extends BaseWebhookHandler {\n  deliveryMethod: DeliveryMethod.EventBridge;\n  arn: string;\n}\n\nexport interface PubSubWebhookHandler extends BaseWebhookHandler {\n  deliveryMethod: DeliveryMethod.PubSub;\n  pubSubProject: string;\n  pubSubTopic: string;\n}\n\nexport type WebhookHandler =\n  | HttpWebhookHandler\n  | HttpWebhookHandlerWithCallback\n  | EventBridgeWebhookHandler\n  | PubSubWebhookHandler;\n\n// See https://shopify.dev/docs/api/admin-graphql/latest/enums/webhooksubscriptiontopic for available topics\nexport type WebhookRegistry<Handler extends WebhookHandler = WebhookHandler> =\n  Record<string, Handler[]>;\n\n// eslint-disable-next-line no-warning-comments\n// TODO Rethink the wording for this enum - the operations we're doing are actually \"subscribing\" and \"unsubscribing\"\n// Consider changing the values when releasing v12.0.0 when it can be safely deprecated\nexport enum WebhookOperation {\n  Create = 'create',\n  Update = 'update',\n  Delete = 'delete',\n}\n\nexport interface RegisterParams {\n  session: Session;\n}\n\nexport interface RegisterResult {\n  success: boolean;\n  deliveryMethod: DeliveryMethod;\n  result: unknown;\n  operation: WebhookOperation;\n}\n\nexport type RegisterReturn = Record<string, RegisterResult[]>;\n\ninterface WebhookHttpEndpoint {\n  __typename: 'WebhookHttpEndpoint';\n  callbackUrl: string;\n}\ninterface WebhookEventBridgeEndpoint {\n  __typename: 'WebhookEventBridgeEndpoint';\n  arn: string;\n}\ninterface WebhookPubSubEndpoint {\n  __typename: 'WebhookPubSubEndpoint';\n  pubSubProject: string;\n  pubSubTopic: string;\n}\n\ntype WebhookEndpoint =\n  | WebhookHttpEndpoint\n  | WebhookEventBridgeEndpoint\n  | WebhookPubSubEndpoint;\n\nexport interface WebhookCheckResponseNode<\n  T = {\n    endpoint: WebhookEndpoint;\n  },\n> {\n  node: {\n    id: string;\n    topic: string;\n    includeFields: string[];\n    metafieldNamespaces: string[];\n  } & T;\n}\n\nexport interface WebhookCheckResponse<T = WebhookCheckResponseNode> {\n  webhookSubscriptions: {\n    edges: T[];\n    pageInfo: {\n      endCursor: string;\n      hasNextPage: boolean;\n    };\n  };\n}\n\nexport type AddHandlersParams = Record<\n  string,\n  WebhookHandler | WebhookHandler[]\n>;\n\nexport interface WebhookProcessParams extends AdapterArgs {\n  rawBody: string;\n  context?: any;\n}\n\nexport interface WebhookValidateParams extends WebhookProcessParams {}\n\nexport const WebhookValidationErrorReason = {\n  ...ValidationErrorReason,\n  MissingHeaders: 'missing_headers',\n} as const;\n\nexport type WebhookValidationErrorReasonType =\n  (typeof WebhookValidationErrorReason)[keyof typeof WebhookValidationErrorReason];\n\nexport interface WebhookFields {\n  webhookId: string;\n  apiVersion: string;\n  domain: string;\n  hmac: string;\n  topic: string;\n  subTopic?: string;\n}\n\nexport interface WebhookValidationInvalid\n  extends Omit<ValidationInvalid, 'reason'> {\n  valid: false;\n  reason: WebhookValidationErrorReasonType;\n}\n\nexport interface WebhookValidationMissingHeaders\n  extends WebhookValidationInvalid {\n  reason: typeof WebhookValidationErrorReason.MissingHeaders;\n  missingHeaders: string[];\n}\n\nexport interface WebhookValidationValid extends WebhookFields {\n  valid: true;\n}\n\nexport type WebhookValidation =\n  | WebhookValidationValid\n  | WebhookValidationInvalid\n  | WebhookValidationMissingHeaders;\n", "/**\n * Allowed arithmetic operators\n */\nexport type CompareOperator = '>' | '>=' | '=' | '<' | '<=' | '!=';\n\nexport const semver =\n  /^[v^~<>=]*?(\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+))?(?:-([\\da-z\\-]+(?:\\.[\\da-z\\-]+)*))?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\nexport const validateAndParse = (version: string) => {\n  if (typeof version !== 'string') {\n    throw new TypeError('Invalid argument expected string');\n  }\n  const match = version.match(semver);\n  if (!match) {\n    throw new Error(\n      `Invalid argument not valid semver ('${version}' received)`\n    );\n  }\n  match.shift();\n  return match;\n};\n\nconst isWildcard = (s: string) => s === '*' || s === 'x' || s === 'X';\n\nconst tryParse = (v: string) => {\n  const n = parseInt(v, 10);\n  return isNaN(n) ? v : n;\n};\n\nconst forceType = (a: string | number, b: string | number) =>\n  typeof a !== typeof b ? [String(a), String(b)] : [a, b];\n\nconst compareStrings = (a: string, b: string) => {\n  if (isWildcard(a) || isWildcard(b)) return 0;\n  const [ap, bp] = forceType(tryParse(a), tryParse(b));\n  if (ap > bp) return 1;\n  if (ap < bp) return -1;\n  return 0;\n};\n\nexport const compareSegments = (\n  a: string | string[] | RegExpMatchArray,\n  b: string | string[] | RegExpMatchArray\n) => {\n  for (let i = 0; i < Math.max(a.length, b.length); i++) {\n    const r = compareStrings(a[i] || '0', b[i] || '0');\n    if (r !== 0) return r;\n  }\n  return 0;\n};\n", "import { compareSegments, validateAndParse } from './utils.js';\n\n/**\n * Compare [semver](https://semver.org/) version strings to find greater, equal or lesser.\n * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.\n * @param v1 - First version to compare\n * @param v2 - Second version to compare\n * @returns Numeric value compatible with the [Array.sort(fn) interface](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters).\n */\nexport const compareVersions = (v1: string, v2: string) => {\n  // validate input and split into segments\n  const n1 = validateAndParse(v1);\n  const n2 = validateAndParse(v2);\n\n  // pop off the patch\n  const p1 = n1.pop();\n  const p2 = n2.pop();\n\n  // validate numbers\n  const r = compareSegments(n1, n2);\n  if (r !== 0) return r;\n\n  // validate pre-release\n  if (p1 && p2) {\n    return compareSegments(p1.split('.'), p2.split('.'));\n  } else if (p1 || p2) {\n    return p1 ? -1 : 1;\n  }\n\n  return 0;\n};\n", "import { compareVersions } from './compareVersions.js';\nimport { CompareOperator } from './utils.js';\n\n/**\n * Compare [semver](https://semver.org/) version strings using the specified operator.\n *\n * @param v1 First version to compare\n * @param v2 Second version to compare\n * @param operator Allowed arithmetic operator to use\n * @returns `true` if the comparison between the firstVersion and the secondVersion satisfies the operator, `false` otherwise.\n *\n * @example\n * ```\n * compare('10.1.8', '10.0.4', '>'); // return true\n * compare('10.0.1', '10.0.1', '='); // return true\n * compare('10.1.1', '10.2.2', '<'); // return true\n * compare('10.1.1', '10.2.2', '<='); // return true\n * compare('10.1.1', '10.2.2', '>='); // return false\n * ```\n */\nexport const compare = (v1: string, v2: string, operator: CompareOperator) => {\n  // validate input operator\n  assertValidOperator(operator);\n\n  // since result of compareVersions can only be -1 or 0 or 1\n  // a simple map can be used to replace switch\n  const res = compareVersions(v1, v2);\n\n  return operatorResMap[operator].includes(res);\n};\n\nconst operatorResMap = {\n  '>': [1],\n  '>=': [0, 1],\n  '=': [0],\n  '<=': [-1, 0],\n  '<': [-1],\n  '!=': [-1, 1],\n};\n\nconst allowedOperators = Object.keys(operatorResMap);\n\nconst assertValidOperator = (op: string) => {\n  if (typeof op !== 'string') {\n    throw new TypeError(\n      `Invalid operator type, expected string but got ${typeof op}`\n    );\n  }\n  if (allowedOperators.indexOf(op) === -1) {\n    throw new Error(\n      `Invalid operator, expected one of ${allowedOperators.join('|')}`\n    );\n  }\n};\n", "export const SHOPIFY_API_LIBRARY_VERSION = '12.1.0';\n", "import {LogSeverity} from '../types';\nimport {ConfigInterface} from '../base-types';\n\nimport {LogContext} from './types';\n\nexport type LoggerFunction = (\n  severity: LogSeverity,\n  message: string,\n  context?: Record<string, any>,\n) => void;\n\nexport function log(config: ConfigInterface): LoggerFunction {\n  return function (\n    severity: LogSeverity,\n    message: string,\n    context: LogContext = {},\n  ): void {\n    if (severity > config.logger.level) {\n      return;\n    }\n\n    const prefix: string[] = [];\n\n    if (config.logger.timestamps) {\n      prefix.push(`${new Date().toISOString().slice(0, -5)}Z`);\n    }\n\n    let packageString = context.package || 'shopify-api';\n    delete context.package;\n\n    switch (severity) {\n      case LogSeverity.Debug:\n        packageString = `${packageString}/DEBUG`;\n        break;\n      case LogSeverity.Info:\n        packageString = `${packageString}/INFO`;\n        break;\n      case LogSeverity.Warning:\n        packageString = `${packageString}/WARNING`;\n        break;\n      case LogSeverity.Error:\n        packageString = `${packageString}/ERROR`;\n        break;\n    }\n\n    prefix.push(packageString);\n\n    const contextParts: string[] = [];\n    Object.entries(context).forEach(([key, value]) => {\n      contextParts.push(`${key}: ${value}`);\n    });\n\n    let suffix = '';\n    if (contextParts.length > 0) {\n      suffix = ` | {${contextParts.join(', ')}}`;\n    }\n\n    config.logger.log(severity, `[${prefix.join('] [')}] ${message}${suffix}`);\n  };\n}\n", "import {compare} from 'compare-versions';\n\nimport {LogSeverity} from '../types';\nimport {ConfigInterface} from '../base-types';\nimport {FeatureDeprecatedError} from '../error';\nimport {SHOPIFY_API_LIBRARY_VERSION} from '../version';\n\nimport {log, LoggerFunction} from './log';\nimport {LogContext} from './types';\n\nexport function logger(config: ConfigInterface) {\n  const logFunction = log(config);\n\n  return {\n    log: logFunction,\n    debug: async (message: string, context: LogContext = {}) =>\n      logFunction(LogSeverity.Debug, message, context),\n    info: async (message: string, context: LogContext = {}) =>\n      logFunction(LogSeverity.Info, message, context),\n    warning: async (message: string, context: LogContext = {}) =>\n      logFunction(LogSeverity.Warning, message, context),\n    error: async (message: string, context: LogContext = {}) =>\n      logFunction(LogSeverity.Error, message, context),\n    deprecated: deprecated(logFunction),\n  };\n}\n\nexport type ShopifyLogger = ReturnType<typeof logger>;\n\nfunction deprecated(logFunction: LoggerFunction) {\n  return function (version: string, message: string): void {\n    if (compare(SHOPIFY_API_LIBRARY_VERSION, version, '>=')) {\n      throw new FeatureDeprecatedError(\n        `Feature was deprecated in version ${version}`,\n      );\n    }\n\n    return logFunction(\n      LogSeverity.Warning,\n      `[Deprecated | ${version}] ${message}`,\n    );\n  };\n}\n", "import type {ShopifyClients} from '../lib';\nimport {ConfigInterface} from '../lib/base-types';\nimport {logger} from '../lib/logger';\n\nimport {Base} from './base';\nimport {ShopifyRestResources} from './types';\n\nexport interface LoadRestResourcesParams<\n  Resources extends ShopifyRestResources,\n> {\n  resources: Resources;\n  config: ConfigInterface;\n  RestClient: ShopifyClients['Rest'];\n}\n\nexport function loadRestResources<Resources extends ShopifyRestResources>({\n  resources,\n  config,\n  RestClient,\n}: LoadRestResourcesParams<Resources>): Resources {\n  const firstResource = Object.keys(resources)[0];\n  if (config.apiVersion !== resources[firstResource].apiVersion) {\n    logger(config).warning(\n      `Loading REST resources for API version ${resources[firstResource].apiVersion}, which doesn't match the default ${config.apiVersion}`,\n    );\n  }\n\n  return Object.fromEntries(\n    Object.entries(resources).map(([name, resource]) => {\n      class NewResource extends resource {}\n\n      NewResource.setClassProperties({\n        Client: RestClient,\n        config,\n      });\n\n      Object.entries(NewResource.hasOne).map(([_attribute, klass]) => {\n        (klass as typeof Base).setClassProperties({\n          Client: RestClient,\n          config,\n        });\n      });\n\n      Object.entries(NewResource.hasMany).map(([_attribute, klass]) => {\n        (klass as typeof Base).setClassProperties({\n          Client: RestClient,\n          config,\n        });\n      });\n\n      Reflect.defineProperty(NewResource, 'name', {\n        value: name,\n      });\n\n      return [name, NewResource];\n    }),\n  ) as Resources;\n}\n", "import {type ShopifyLogger} from '../lib/logger';\nimport {type ConfigInterface} from '../lib/base-types';\n\n/**\n * Future flags are used to enable features that are not yet available by default.\n */\nexport interface FutureFlags {\n  /**\n   * Enable support for managed pricing, so apps can check for payments without needing a billing config.\n   */\n  unstable_managedPricingSupport?: boolean;\n\n  /**\n   * Change the CustomerAddress classes to expose a `is_default` property instead of `default` when fetching data. This\n   * resolves a conflict with the default() method in that class.\n   */\n  customerAddressDefaultFix?: boolean;\n}\n\n/**\n * Configuration option for future flags.\n */\nexport type FutureFlagOptions = FutureFlags | undefined;\n\nexport type FeatureEnabled<\n  Future extends FutureFlagOptions,\n  Flag extends keyof FutureFlags,\n> = Future extends FutureFlags\n  ? Future[Flag] extends true\n    ? true\n    : false\n  : false;\n\nexport function logDisabledFutureFlags(\n  config: ConfigInterface,\n  logger: ShopifyLogger,\n) {\n  if (!config._logDisabledFutureFlags) {\n    return;\n  }\n\n  const logFlag = (flag: string, message: string) =>\n    logger.info(`Future flag ${flag} is disabled.\\n\\n  ${message}\\n`);\n\n  if (!config.future?.customerAddressDefaultFix) {\n    logFlag(\n      'customerAddressDefaultFix',\n      \"Enable this flag to change the CustomerAddress classes to expose a 'is_default' property instead of 'default' when fetching data.\",\n    );\n  }\n\n  if (!config.future?.unstable_managedPricingSupport) {\n    logFlag(\n      'unstable_managedPricingSupport',\n      'Enable this flag to support managed pricing, so apps can check for payments without needing a billing config. Learn more at https://shopify.dev/docs/apps/launch/billing/managed-pricing',\n    );\n  }\n}\n", "import {ShopifyError} from './error';\nimport {ConfigInterface, ConfigParams} from './base-types';\nimport {LogSeverity} from './types';\nimport {AuthScopes} from './auth/scopes';\nimport {logger as createLogger} from './logger';\n\nexport function validateConfig<Params extends ConfigParams>(\n  params: Params,\n): ConfigInterface<Params> {\n  const config = {\n    apiKey: '',\n    apiSecretKey: '',\n    hostName: '',\n    hostScheme: 'https',\n    isEmbeddedApp: true,\n    isCustomStoreApp: false,\n    logger: {\n      log: defaultLogFunction,\n      level: LogSeverity.Info,\n      httpRequests: false,\n      timestamps: false,\n    },\n    future: {},\n    _logDisabledFutureFlags: true,\n  } as ConfigInterface<Params>;\n\n  // Make sure that the essential params actually have content in them\n  const mandatory: (keyof Params)[] = [\n    'apiSecretKey',\n    'hostName',\n    'apiVersion',\n  ];\n  if (!('isCustomStoreApp' in params) || !params.isCustomStoreApp) {\n    mandatory.push('apiKey');\n  }\n  if ('isCustomStoreApp' in params && params.isCustomStoreApp) {\n    if (\n      !('adminApiAccessToken' in params) ||\n      params.adminApiAccessToken?.length === 0\n    ) {\n      mandatory.push('adminApiAccessToken');\n    }\n  }\n\n  const missing: (keyof Params)[] = [];\n  mandatory.forEach((key) => {\n    if (!notEmpty(params[key])) {\n      missing.push(key);\n    }\n  });\n\n  if (missing.length) {\n    throw new ShopifyError(\n      `Cannot initialize Shopify API Library. Missing values for: ${missing.join(\n        ', ',\n      )}. For apiVersion, please specify an explicit API version (e.g., ApiVersion.July25). See https://shopify.dev/docs/api/usage/versioning for more information.`,\n    );\n  }\n\n  const {\n    hostScheme,\n    isCustomStoreApp,\n    adminApiAccessToken,\n    userAgentPrefix,\n    logger,\n    privateAppStorefrontAccessToken,\n    customShopDomains,\n    billing,\n    future,\n    ...mandatoryParams\n  } = params;\n\n  let scopes;\n  if (params.scopes === undefined) {\n    scopes = undefined;\n  } else if (params.scopes instanceof AuthScopes) {\n    scopes = params.scopes;\n  } else {\n    scopes = new AuthScopes(params.scopes);\n  }\n\n  Object.assign(config, mandatoryParams, {\n    hostName: params.hostName.replace(/\\/$/, ''),\n    scopes,\n    hostScheme: hostScheme ?? config.hostScheme,\n    isCustomStoreApp: isCustomStoreApp ?? config.isCustomStoreApp,\n    adminApiAccessToken: adminApiAccessToken ?? config.adminApiAccessToken,\n    userAgentPrefix: userAgentPrefix ?? config.userAgentPrefix,\n    logger: {...config.logger, ...(logger || {})},\n    privateAppStorefrontAccessToken:\n      privateAppStorefrontAccessToken ?? config.privateAppStorefrontAccessToken,\n    customShopDomains: customShopDomains ?? config.customShopDomains,\n    billing: billing ?? config.billing,\n    future: future ?? config.future,\n  });\n\n  if (\n    config.isCustomStoreApp &&\n    params.adminApiAccessToken === params.apiSecretKey\n  ) {\n    createLogger(config).warning(\n      \"adminApiAccessToken is set to the same value as apiSecretKey. adminApiAccessToken should be set to the Admin API access token for custom store apps; apiSecretKey should be set to the custom store app's API secret key.\",\n    );\n  }\n\n  return config;\n}\n\nfunction notEmpty<T>(value: T): value is NonNullable<T> {\n  if (value == null) {\n    return false;\n  }\n  return typeof value === 'string' || Array.isArray(value)\n    ? value.length > 0\n    : true;\n}\n\nfunction defaultLogFunction(severity: LogSeverity, message: string): void {\n  switch (severity) {\n    case LogSeverity.Debug:\n      console.debug(message);\n      break;\n    case LogSeverity.Info:\n      console.log(message);\n      break;\n    case LogSeverity.Warning:\n      console.warn(message);\n      break;\n    case LogSeverity.Error:\n      console.error(message);\n      break;\n  }\n}\n", "export const CLIENT = 'GraphQL Client';\nexport const MIN_RETRIES = 0;\nexport const MAX_RETRIES = 3;\n\nexport const GQL_API_ERROR =\n  \"An error occurred while fetching from the API. Review 'graphQLErrors' for details.\";\nexport const UNEXPECTED_CONTENT_TYPE_ERROR =\n  'Response returned unexpected Content-Type:';\nexport const NO_DATA_OR_ERRORS_ERROR =\n  'An unknown error has occurred. The API did not return a data object or any errors in its response.';\n\nexport const CONTENT_TYPES = {\n  json: 'application/json',\n  multipart: 'multipart/mixed',\n};\nexport const SDK_VARIANT_HEADER = 'X-SDK-Variant';\nexport const SDK_VERSION_HEADER = 'X-SDK-Version';\n\nexport const DEFAULT_SDK_VARIANT = 'shopify-graphql-client';\n// This is value is replaced with package.json version during rollup build process\nexport const DEFAULT_CLIENT_VERSION = 'ROLLUP_REPLACE_CLIENT_VERSION';\n\nexport const RETRY_WAIT_TIME = 1000;\nexport const RETRIABLE_STATUS_CODES = [429, 503];\nexport const DEFER_OPERATION_REGEX = /@(defer)\\b/i;\nexport const NEWLINE_SEPARATOR = '\\r\\n';\nexport const BOUNDARY_HEADER_REGEX = /boundary=\"?([^=\";]+)\"?/i;\nexport const HEADER_SEPARATOR = NEWLINE_SEPARATOR + NEWLINE_SEPARATOR;\n", "import {CLIENT, MAX_RETRIES, MIN_RETRIES} from './constants';\n\nexport function formatErrorMessage(message: string, client = CLIENT) {\n  return message.startsWith(`${client}`) ? message : `${client}: ${message}`;\n}\n\nexport function getErrorMessage(error: any) {\n  return error instanceof Error ? error.message : JSON.stringify(error);\n}\n\nexport function getErrorCause(error: any): Record<string, any> | undefined {\n  return error instanceof Error && error.cause ? error.cause : undefined;\n}\n\nexport function combineErrors(dataArray: Record<string, any>[]) {\n  return dataArray.flatMap(({errors}) => {\n    return errors ?? [];\n  });\n}\n\nexport function validateRetries({\n  client,\n  retries,\n}: {\n  client: string;\n  retries?: number;\n}) {\n  if (\n    retries !== undefined &&\n    (typeof retries !== 'number' ||\n      retries < MIN_RETRIES ||\n      retries > MAX_RETRIES)\n  ) {\n    throw new Error(\n      `${client}: The provided \"retries\" value (${retries}) is invalid - it cannot be less than ${MIN_RETRIES} or greater than ${MAX_RETRIES}`,\n    );\n  }\n}\n\nexport function getKeyValueIfValid(key: string, value?: any) {\n  return value &&\n    (typeof value !== 'object' ||\n      Array.isArray(value) ||\n      (typeof value === 'object' && Object.keys(value).length > 0))\n    ? {[key]: value}\n    : {};\n}\n\nexport function buildDataObjectByPath(\n  path: string[],\n  data: any,\n): Record<string | number, any> {\n  if (path.length === 0) {\n    return data;\n  }\n\n  const key = path.pop() as string | number;\n  const newData = {\n    [key]: data,\n  };\n\n  if (path.length === 0) {\n    return newData;\n  }\n\n  return buildDataObjectByPath(path, newData);\n}\n\nfunction combineObjects(baseObject: any, newObject: any) {\n  return Object.keys(newObject || {}).reduce(\n    (acc: any, key: string | number) => {\n      if (\n        (typeof newObject[key] === 'object' || Array.isArray(newObject[key])) &&\n        baseObject[key]\n      ) {\n        acc[key] = combineObjects(baseObject[key], newObject[key]);\n        return acc;\n      }\n\n      acc[key] = newObject[key];\n      return acc;\n    },\n    Array.isArray(baseObject) ? [...baseObject] : {...baseObject},\n  );\n}\n\nexport function buildCombinedDataObject([\n  initialDatum,\n  ...remainingData\n]: any[]) {\n  return remainingData.reduce(combineObjects, {...initialDatum});\n}\n", "import {CLIENT, RETRIABLE_STATUS_CODES, RETRY_WAIT_TIME} from './constants';\nimport {CustomFetchApi, GraphQLClient, Logger} from './types';\nimport {formatErrorMessage, getErrorMessage} from './utilities';\n\ninterface GenerateHttpFetchOptions {\n  clientLogger: Logger;\n  customFetchApi?: CustomFetchApi;\n  client?: string;\n  defaultRetryWaitTime?: number;\n  retriableCodes?: number[];\n}\n\nexport function generateHttpFetch({\n  clientLogger,\n  customFetchApi = fetch,\n  client = CLIENT,\n  defaultRetryWaitTime = RETRY_WAIT_TIME,\n  retriableCodes = RETRIABLE_STATUS_CODES,\n}: GenerateHttpFetchOptions) {\n  const httpFetch = async (\n    requestParams: Parameters<CustomFetchApi>,\n    count: number,\n    maxRetries: number,\n  ): ReturnType<GraphQLClient['fetch']> => {\n    const nextCount = count + 1;\n    const maxTries = maxRetries + 1;\n    let response: Response | undefined;\n\n    try {\n      response = await customFetchApi(...requestParams);\n\n      clientLogger({\n        type: 'HTTP-Response',\n        content: {\n          requestParams,\n          response,\n        },\n      });\n\n      if (\n        !response.ok &&\n        retriableCodes.includes(response.status) &&\n        nextCount <= maxTries\n      ) {\n        throw new Error();\n      }\n\n      const deprecationNotice =\n        response?.headers.get('X-Shopify-API-Deprecated-Reason') || '';\n      if (deprecationNotice) {\n        clientLogger({\n          type: 'HTTP-Response-GraphQL-Deprecation-Notice',\n          content: {\n            requestParams,\n            deprecationNotice,\n          },\n        });\n      }\n\n      return response;\n    } catch (error) {\n      if (nextCount <= maxTries) {\n        const retryAfter = response?.headers.get('Retry-After');\n        await sleep(\n          retryAfter ? parseInt(retryAfter, 10) : defaultRetryWaitTime,\n        );\n\n        clientLogger({\n          type: 'HTTP-Retry',\n          content: {\n            requestParams,\n            lastResponse: response,\n            retryAttempt: count,\n            maxRetries,\n          },\n        });\n\n        return httpFetch(requestParams, nextCount, maxRetries);\n      }\n\n      throw new Error(\n        formatErrorMessage(\n          `${\n            maxRetries > 0\n              ? `Attempted maximum number of ${maxRetries} network retries. Last message - `\n              : ''\n          }${getErrorMessage(error)}`,\n          client,\n        ),\n      );\n    }\n  };\n\n  return httpFetch;\n}\n\nasync function sleep(waitTime: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, waitTime));\n}\n", "import {generateHttpFetch} from './http-fetch';\nimport {\n  ClientOptions,\n  CustomFetchApi,\n  GraphQLClient,\n  ClientResponse,\n  ClientConfig,\n  Logger,\n  LogContentTypes,\n  DataChunk,\n} from './types';\nimport {\n  CLIENT,\n  GQL_API_ERROR,\n  UNEXPECTED_CONTENT_TYPE_ERROR,\n  NO_DATA_OR_ERRORS_ERROR,\n  CONTENT_TYPES,\n  RETRY_WAIT_TIME,\n  HEADER_SEPARATOR,\n  DEFER_OPERATION_REGEX,\n  BOUNDARY_HEADER_REGEX,\n  SDK_VARIANT_HEADER,\n  SDK_VERSION_HEADER,\n  DEFAULT_SDK_VARIANT,\n  DEFAULT_CLIENT_VERSION,\n} from './constants';\nimport {\n  formatErrorMessage,\n  getErrorMessage,\n  validateRetries,\n  getKeyValueIfValid,\n  buildDataObjectByPath,\n  buildCombinedDataObject,\n  getErrorCause,\n  combineErrors,\n} from './utilities';\n\nexport function createGraphQLClient({\n  headers,\n  url,\n  customFetchApi = fetch,\n  retries = 0,\n  logger,\n}: ClientOptions): GraphQLClient {\n  validateRetries({client: CLIENT, retries});\n\n  const config: ClientConfig = {\n    headers,\n    url,\n    retries,\n  };\n\n  const clientLogger = generateClientLogger(logger);\n  const httpFetch = generateHttpFetch({\n    customFetchApi,\n    clientLogger,\n    defaultRetryWaitTime: RETRY_WAIT_TIME,\n  });\n  const fetchFn = generateFetch(httpFetch, config);\n  const request = generateRequest(fetchFn);\n  const requestStream = generateRequestStream(fetchFn);\n\n  return {\n    config,\n    fetch: fetchFn,\n    request,\n    requestStream,\n  };\n}\n\nexport function generateClientLogger(logger?: Logger): Logger {\n  return (logContent: LogContentTypes) => {\n    if (logger) {\n      logger(logContent);\n    }\n  };\n}\n\nasync function processJSONResponse<TData = any>(\n  response: Response,\n): Promise<ClientResponse<TData>> {\n  const {errors, data, extensions} = await response.json<any>();\n\n  return {\n    ...getKeyValueIfValid('data', data),\n    ...getKeyValueIfValid('extensions', extensions),\n    headers: response.headers,\n\n    ...(errors || !data\n      ? {\n          errors: {\n            networkStatusCode: response.status,\n            message: formatErrorMessage(\n              errors ? GQL_API_ERROR : NO_DATA_OR_ERRORS_ERROR,\n            ),\n            ...getKeyValueIfValid('graphQLErrors', errors),\n            response,\n          },\n        }\n      : {}),\n  };\n}\n\nfunction generateFetch(\n  httpFetch: ReturnType<typeof generateHttpFetch>,\n  {url, headers, retries}: ClientConfig,\n): GraphQLClient['fetch'] {\n  return async (operation, options = {}) => {\n    const {\n      variables,\n      headers: overrideHeaders,\n      url: overrideUrl,\n      retries: overrideRetries,\n      keepalive,\n      signal,\n    } = options;\n\n    const body = JSON.stringify({\n      query: operation,\n      variables,\n    });\n\n    validateRetries({client: CLIENT, retries: overrideRetries});\n\n    const flatHeaders = Object.entries({\n      ...headers,\n      ...overrideHeaders,\n    }).reduce((headers: Record<string, string>, [key, value]) => {\n      headers[key] = Array.isArray(value) ? value.join(', ') : value.toString();\n      return headers;\n    }, {});\n\n    if (!flatHeaders[SDK_VARIANT_HEADER] && !flatHeaders[SDK_VERSION_HEADER]) {\n      flatHeaders[SDK_VARIANT_HEADER] = DEFAULT_SDK_VARIANT;\n      flatHeaders[SDK_VERSION_HEADER] = DEFAULT_CLIENT_VERSION;\n    }\n\n    const fetchParams: Parameters<CustomFetchApi> = [\n      overrideUrl ?? url,\n      {\n        method: 'POST',\n        headers: flatHeaders,\n        body,\n        signal,\n        keepalive,\n      },\n    ];\n\n    return httpFetch(fetchParams, 1, overrideRetries ?? retries);\n  };\n}\n\nfunction generateRequest(\n  fetchFn: ReturnType<typeof generateFetch>,\n): GraphQLClient['request'] {\n  return async (...props) => {\n    if (DEFER_OPERATION_REGEX.test(props[0])) {\n      throw new Error(\n        formatErrorMessage(\n          'This operation will result in a streamable response - use requestStream() instead.',\n        ),\n      );\n    }\n\n    let response: Response | null = null;\n    try {\n      response = await fetchFn(...props);\n      const {status, statusText} = response;\n      const contentType = response.headers.get('content-type') || '';\n\n      if (!response.ok) {\n        return {\n          errors: {\n            networkStatusCode: status,\n            message: formatErrorMessage(statusText),\n            response,\n          },\n        };\n      }\n\n      if (!contentType.includes(CONTENT_TYPES.json)) {\n        return {\n          errors: {\n            networkStatusCode: status,\n            message: formatErrorMessage(\n              `${UNEXPECTED_CONTENT_TYPE_ERROR} ${contentType}`,\n            ),\n            response,\n          },\n        };\n      }\n\n      return await processJSONResponse(response);\n    } catch (error) {\n      return {\n        errors: {\n          message: getErrorMessage(error),\n          ...(response == null\n            ? {}\n            : {\n                networkStatusCode: response.status,\n                response,\n              }),\n        },\n      };\n    }\n  };\n}\n\nasync function* getStreamBodyIterator(\n  response: Response,\n): AsyncIterableIterator<string> {\n  const decoder = new TextDecoder();\n\n  // Response body is an async iterator\n  if ((response.body as any)![Symbol.asyncIterator]) {\n    for await (const chunk of response.body! as any) {\n      yield decoder.decode(chunk);\n    }\n  } else {\n    const reader = response.body!.getReader();\n\n    let readResult: ReadableStreamReadResult<DataChunk>;\n    try {\n      while (!(readResult = await reader.read()).done) {\n        yield decoder.decode(readResult.value);\n      }\n    } finally {\n      reader.cancel();\n    }\n  }\n}\n\nfunction readStreamChunk(\n  streamBodyIterator: AsyncIterableIterator<string>,\n  boundary: string,\n) {\n  return {\n    async *[Symbol.asyncIterator]() {\n      try {\n        let buffer = '';\n\n        for await (const textChunk of streamBodyIterator) {\n          buffer += textChunk;\n\n          if (buffer.indexOf(boundary) > -1) {\n            const lastBoundaryIndex = buffer.lastIndexOf(boundary);\n            const fullResponses = buffer.slice(0, lastBoundaryIndex);\n\n            const chunkBodies = fullResponses\n              .split(boundary)\n              .filter((chunk) => chunk.trim().length > 0)\n              .map((chunk) => {\n                const body = chunk\n                  .slice(\n                    chunk.indexOf(HEADER_SEPARATOR) + HEADER_SEPARATOR.length,\n                  )\n                  .trim();\n                return body;\n              });\n\n            if (chunkBodies.length > 0) {\n              yield chunkBodies;\n            }\n\n            buffer = buffer.slice(lastBoundaryIndex + boundary.length);\n\n            if (buffer.trim() === `--`) {\n              buffer = '';\n            }\n          }\n        }\n      } catch (error) {\n        throw new Error(\n          `Error occured while processing stream payload - ${getErrorMessage(\n            error,\n          )}`,\n        );\n      }\n    },\n  };\n}\n\nfunction createJsonResponseAsyncIterator(response: Response) {\n  return {\n    async *[Symbol.asyncIterator]() {\n      const processedResponse = await processJSONResponse(response);\n\n      yield {\n        ...processedResponse,\n        hasNext: false,\n      };\n    },\n  };\n}\n\nfunction getResponseDataFromChunkBodies(chunkBodies: string[]): {\n  data: any;\n  errors?: any;\n  extensions?: any;\n  hasNext: boolean;\n}[] {\n  return chunkBodies\n    .map((value) => {\n      try {\n        return JSON.parse(value);\n      } catch (error) {\n        throw new Error(\n          `Error in parsing multipart response - ${getErrorMessage(error)}`,\n        );\n      }\n    })\n    .map((payload) => {\n      const {data, incremental, hasNext, extensions, errors} = payload;\n\n      // initial data chunk\n      if (!incremental) {\n        return {\n          data: data || {},\n          ...getKeyValueIfValid('errors', errors),\n          ...getKeyValueIfValid('extensions', extensions),\n          hasNext,\n        };\n      }\n\n      // subsequent data chunks\n      const incrementalArray: {data: any; errors?: any}[] = incremental.map(\n        ({data, path, errors}: any) => {\n          return {\n            data: data && path ? buildDataObjectByPath(path, data) : {},\n            ...getKeyValueIfValid('errors', errors),\n          };\n        },\n      );\n\n      return {\n        data:\n          incrementalArray.length === 1\n            ? incrementalArray[0].data\n            : buildCombinedDataObject([\n                ...incrementalArray.map(({data}) => data),\n              ]),\n        ...getKeyValueIfValid('errors', combineErrors(incrementalArray)),\n        hasNext,\n      };\n    });\n}\n\nfunction validateResponseData(\n  responseErrors: any[],\n  combinedData: ReturnType<typeof buildCombinedDataObject>,\n) {\n  if (responseErrors.length > 0) {\n    throw new Error(GQL_API_ERROR, {\n      cause: {\n        graphQLErrors: responseErrors,\n      },\n    });\n  }\n\n  if (Object.keys(combinedData).length === 0) {\n    throw new Error(NO_DATA_OR_ERRORS_ERROR);\n  }\n}\n\nfunction createMultipartResponseAsyncInterator(\n  response: Response,\n  responseContentType: string,\n) {\n  const boundaryHeader = (responseContentType ?? '').match(\n    BOUNDARY_HEADER_REGEX,\n  );\n  const boundary = `--${boundaryHeader ? boundaryHeader[1] : '-'}`;\n\n  if (\n    !response.body?.getReader &&\n    !(response.body as any)?.[Symbol.asyncIterator]\n  ) {\n    throw new Error('API multipart response did not return an iterable body', {\n      cause: response,\n    });\n  }\n\n  const streamBodyIterator = getStreamBodyIterator(response);\n\n  let combinedData: Record<string, any> = {};\n  let responseExtensions: Record<string, any> | undefined;\n\n  return {\n    async *[Symbol.asyncIterator]() {\n      try {\n        let streamHasNext = true;\n\n        for await (const chunkBodies of readStreamChunk(\n          streamBodyIterator,\n          boundary,\n        )) {\n          const responseData = getResponseDataFromChunkBodies(chunkBodies);\n\n          responseExtensions =\n            responseData.find((datum) => datum.extensions)?.extensions ??\n            responseExtensions;\n\n          const responseErrors = combineErrors(responseData);\n\n          combinedData = buildCombinedDataObject([\n            combinedData,\n            ...responseData.map(({data}) => data),\n          ]);\n\n          streamHasNext = responseData.slice(-1)[0].hasNext;\n\n          validateResponseData(responseErrors, combinedData);\n\n          yield {\n            ...getKeyValueIfValid('data', combinedData),\n            ...getKeyValueIfValid('extensions', responseExtensions),\n            hasNext: streamHasNext,\n          };\n        }\n\n        if (streamHasNext) {\n          throw new Error(`Response stream terminated unexpectedly`);\n        }\n      } catch (error) {\n        const cause = getErrorCause(error);\n\n        yield {\n          ...getKeyValueIfValid('data', combinedData),\n          ...getKeyValueIfValid('extensions', responseExtensions),\n          errors: {\n            message: formatErrorMessage(getErrorMessage(error)),\n            networkStatusCode: response.status,\n            ...getKeyValueIfValid('graphQLErrors', cause?.graphQLErrors),\n            response,\n          },\n          hasNext: false,\n        };\n      }\n    },\n  };\n}\n\nfunction generateRequestStream(\n  fetchFn: ReturnType<typeof generateFetch>,\n): GraphQLClient['requestStream'] {\n  return async (...props) => {\n    if (!DEFER_OPERATION_REGEX.test(props[0])) {\n      throw new Error(\n        formatErrorMessage(\n          'This operation does not result in a streamable response - use request() instead.',\n        ),\n      );\n    }\n\n    try {\n      const response = await fetchFn(...props);\n\n      const {statusText} = response;\n\n      if (!response.ok) {\n        throw new Error(statusText, {cause: response});\n      }\n\n      const responseContentType = response.headers.get('content-type') || '';\n\n      switch (true) {\n        case responseContentType.includes(CONTENT_TYPES.json):\n          return createJsonResponseAsyncIterator(response);\n        case responseContentType.includes(CONTENT_TYPES.multipart):\n          return createMultipartResponseAsyncInterator(\n            response,\n            responseContentType,\n          );\n        default:\n          throw new Error(\n            `${UNEXPECTED_CONTENT_TYPE_ERROR} ${responseContentType}`,\n            {cause: response},\n          );\n      }\n    } catch (error) {\n      return {\n        async *[Symbol.asyncIterator]() {\n          const response = getErrorCause(error);\n\n          yield {\n            errors: {\n              message: formatErrorMessage(getErrorMessage(error)),\n              ...getKeyValueIfValid('networkStatusCode', response?.status),\n              ...getKeyValueIfValid('response', response),\n            },\n            hasNext: false,\n          };\n        },\n      };\n    }\n  };\n}\n", "import {ApiClientLogger} from './types';\n\nexport function validateDomainAndGetStoreUrl({\n  client,\n  storeDomain,\n}: {\n  client: string;\n  storeDomain: string | undefined;\n}) {\n  try {\n    if (!storeDomain || typeof storeDomain !== 'string') {\n      throw new Error();\n    }\n\n    const trimmedDomain = storeDomain.trim();\n\n    const protocolUrl = trimmedDomain.match(/^https?:/)\n      ? trimmedDomain\n      : `https://${trimmedDomain}`;\n\n    const url = new URL(protocolUrl);\n    url.protocol = 'https';\n\n    return url.origin;\n  } catch (error) {\n    throw new Error(\n      `${client}: a valid store domain (\"${storeDomain}\") must be provided`,\n      {cause: error},\n    );\n  }\n}\n\nexport function validateApiVersion({\n  client,\n  currentSupportedApiVersions,\n  apiVersion,\n  logger,\n}: {\n  client: string;\n  currentSupportedApiVersions: string[];\n  apiVersion: string;\n  logger?: ApiClientLogger;\n}) {\n  const versionError = `${client}: the provided apiVersion (\"${apiVersion}\")`;\n  const supportedVersion = `Currently supported API versions: ${currentSupportedApiVersions.join(\n    ', ',\n  )}`;\n\n  if (!apiVersion || typeof apiVersion !== 'string') {\n    throw new Error(`${versionError} is invalid. ${supportedVersion}`);\n  }\n\n  const trimmedApiVersion = apiVersion.trim();\n\n  if (!currentSupportedApiVersions.includes(trimmedApiVersion)) {\n    if (logger) {\n      logger({\n        type: 'Unsupported_Api_Version',\n        content: {\n          apiVersion,\n          supportedApiVersions: currentSupportedApiVersions,\n        },\n      });\n    } else {\n      console.warn(\n        `${versionError} is likely deprecated or not supported. ${supportedVersion}`,\n      );\n    }\n  }\n}\n", "function getQuarterMonth(quarter: number) {\n  const month = quarter * 3 - 2;\n  return month === 10 ? month : `0${month}`;\n}\n\nfunction getPrevousVersion(year: number, quarter: number, nQuarter: number) {\n  const versionQuarter = quarter - nQuarter;\n\n  if (versionQuarter <= 0) {\n    return `${year - 1}-${getQuarterMonth(versionQuarter + 4)}`;\n  }\n\n  return `${year}-${getQuarterMonth(versionQuarter)}`;\n}\n\nexport function getCurrentApiVersion() {\n  const date = new Date();\n  const month = date.getUTCMonth();\n  const year = date.getUTCFullYear();\n\n  const quarter = Math.floor(month / 3 + 1);\n\n  return {\n    year,\n    quarter,\n    version: `${year}-${getQuarterMonth(quarter)}`,\n  };\n}\n\nexport function getCurrentSupportedApiVersions() {\n  const {year, quarter, version: currentVersion} = getCurrentApiVersion();\n\n  const nextVersion =\n    quarter === 4\n      ? `${year + 1}-01`\n      : `${year}-${getQuarterMonth(quarter + 1)}`;\n\n  return [\n    getPrevousVersion(year, quarter, 3),\n    getPrevousVersion(year, quarter, 2),\n    getPrevousVersion(year, quarter, 1),\n    currentVersion,\n    nextVersion,\n    'unstable',\n  ];\n}\n", "import {RequestParams} from '../graphql-client/types';\n\nimport {\n  AllOperations,\n  ApiClient,\n  ApiClientConfig,\n  ApiClientRequestOptions,\n} from './types';\n\nexport function generateGetHeaders(\n  config: ApiClientConfig,\n): ApiClient['getHeaders'] {\n  return (customHeaders) => {\n    return {...(customHeaders ?? {}), ...config.headers};\n  };\n}\n\nexport function generateGetGQLClientParams<\n  Operations extends AllOperations = AllOperations,\n>({getHeaders, getApiUrl}: Pick<ApiClient, 'getHeaders' | 'getApiUrl'>) {\n  return <Operation extends keyof Operations>(\n    operation: Operation,\n    options?: ApiClientRequestOptions<Operation, Operations>,\n  ): RequestParams => {\n    const props: RequestParams = [operation as string];\n\n    if (options && Object.keys(options).length > 0) {\n      const {\n        variables,\n        apiVersion: propApiVersion,\n        headers,\n        retries,\n        signal,\n      } = options as any;\n\n      props.push({\n        ...(variables ? {variables} : {}),\n        ...(headers ? {headers: getHeaders(headers)} : {}),\n        ...(propApiVersion ? {url: getApiUrl(propApiVersion)} : {}),\n        ...(retries ? {retries} : {}),\n        ...(signal ? {signal} : {}),\n      });\n    }\n\n    return props;\n  };\n}\n", "export const DEFAULT_CONTENT_TYPE = 'application/json';\n// This is value is replaced with package.json version during rollup build process\nexport const DEFAULT_CLIENT_VERSION = 'ROLLUP_REPLACE_CLIENT_VERSION';\nexport const ACCESS_TOKEN_HEADER = 'X-Shopify-Access-Token';\nexport const CLIENT = 'Admin API Client';\nexport const RETRIABLE_STATUS_CODES = [429, 500, 503];\nexport const DEFAULT_RETRY_WAIT_TIME = 1000;\n", "import {CLIENT} from './constants';\n\nexport function validateRequiredStoreDomain(storeDomain: string | undefined) {\n  if (\n    !storeDomain ||\n    typeof storeDomain !== 'string' ||\n    storeDomain.trim().length < 1\n  ) {\n    throw new Error(`${CLIENT}: a valid store domain must be provided`);\n  }\n}\n\nexport function validateRequiredAccessToken(accessToken: string) {\n  if (!accessToken) {\n    throw new Error(`${CLIENT}: an access token must be provided`);\n  }\n}\n\nexport function validateServerSideUsage(isTesting = false) {\n  if (typeof window !== 'undefined' && !isTesting) {\n    throw new Error(`${CLIENT}: this client should not be used in the browser`);\n  }\n}\n", "import {\n  createGraphQLClient,\n  getCurrentSupportedApiVersions,\n  validateApiVersion,\n  validateDomainAndGetStoreUrl,\n  generateGetGQLClientParams,\n  generateGetHeaders,\n} from '@shopify/graphql-client';\n\nimport {\n  DEFAULT_CONTENT_TYPE,\n  ACCESS_TOKEN_HEADER,\n  CLIENT,\n  DEFAULT_CLIENT_VERSION,\n} from '../constants';\nimport {\n  validateRequiredAccessToken,\n  validateServerSideUsage,\n} from '../validations';\nimport {AdminApiClientConfig, AdminApiClientOptions} from '../types';\n\nimport {AdminApiClient, AdminOperations} from './types';\n\nexport function createAdminApiClient({\n  storeDomain,\n  apiVersion,\n  accessToken,\n  userAgentPrefix,\n  retries = 0,\n  customFetchApi,\n  logger,\n  isTesting,\n}: AdminApiClientOptions): AdminApiClient {\n  const currentSupportedApiVersions = getCurrentSupportedApiVersions();\n\n  const storeUrl = validateDomainAndGetStoreUrl({\n    client: CLIENT,\n    storeDomain,\n  });\n\n  const baseApiVersionValidationParams = {\n    client: CLIENT,\n    currentSupportedApiVersions,\n    logger,\n  };\n\n  validateServerSideUsage(isTesting);\n  validateApiVersion({\n    client: CLIENT,\n    currentSupportedApiVersions,\n    apiVersion,\n    logger,\n  });\n  validateRequiredAccessToken(accessToken);\n\n  const apiUrlFormatter = generateApiUrlFormatter(\n    storeUrl,\n    apiVersion,\n    baseApiVersionValidationParams,\n  );\n\n  const config: AdminApiClientConfig = {\n    storeDomain: storeUrl,\n    apiVersion,\n    accessToken,\n    headers: {\n      'Content-Type': DEFAULT_CONTENT_TYPE,\n      Accept: DEFAULT_CONTENT_TYPE,\n      [ACCESS_TOKEN_HEADER]: accessToken,\n      'User-Agent': `${\n        userAgentPrefix ? `${userAgentPrefix} | ` : ''\n      }${CLIENT} v${DEFAULT_CLIENT_VERSION}`,\n    },\n    apiUrl: apiUrlFormatter(),\n    userAgentPrefix,\n  };\n\n  const graphqlClient = createGraphQLClient({\n    headers: config.headers,\n    url: config.apiUrl,\n    retries,\n    customFetchApi,\n    logger,\n  });\n\n  const getHeaders = generateGetHeaders(config);\n  const getApiUrl = generateGetApiUrl(config, apiUrlFormatter);\n\n  const getGQLClientParams = generateGetGQLClientParams<AdminOperations>({\n    getHeaders,\n    getApiUrl,\n  });\n\n  const client: AdminApiClient = {\n    config,\n    getHeaders,\n    getApiUrl,\n    fetch: (...props) => {\n      return graphqlClient.fetch(...getGQLClientParams(...props));\n    },\n    request: (...props) => {\n      return graphqlClient.request(...getGQLClientParams(...props));\n    },\n  };\n\n  return Object.freeze(client);\n}\n\nfunction generateApiUrlFormatter(\n  storeUrl: string,\n  defaultApiVersion: string,\n  baseApiVersionValidationParams: Omit<\n    Parameters<typeof validateApiVersion>[0],\n    'apiVersion'\n  >,\n) {\n  return (apiVersion?: string) => {\n    if (apiVersion) {\n      validateApiVersion({\n        ...baseApiVersionValidationParams,\n        apiVersion,\n      });\n    }\n\n    const urlApiVersion = (apiVersion ?? defaultApiVersion).trim();\n\n    return `${storeUrl}/admin/api/${urlApiVersion}/graphql.json`;\n  };\n}\n\nfunction generateGetApiUrl(\n  config: AdminApiClientConfig,\n  apiUrlFormatter: (version?: string) => string,\n): AdminApiClient['getApiUrl'] {\n  return (propApiVersion?: string) => {\n    return propApiVersion ? apiUrlFormatter(propApiVersion) : config.apiUrl;\n  };\n}\n", "import {CustomFetchApi} from '@shopify/graphql-client';\n\nimport {AdminApiClientOptions} from '../types';\n\nexport enum Method {\n  Get = 'GET',\n  Post = 'POST',\n  Put = 'PUT',\n  Delete = 'DELETE',\n}\n\ntype SearchParamField = string | number;\nexport type SearchParamFields =\n  | SearchParamField\n  | SearchParamField[]\n  | Record<string, SearchParamField | SearchParamField[]>;\nexport type SearchParams = Record<string, SearchParamFields>;\n\nexport type HeaderOptions = Record<string, string | number | string[]>;\n\nexport interface GetRequestOptions {\n  headers?: HeaderOptions;\n  data?: Record<string, any> | string;\n  searchParams?: SearchParams;\n  retries?: number;\n  apiVersion?: string;\n}\n\nexport interface PostRequestOptions extends GetRequestOptions {\n  data: Required<GetRequestOptions>['data'];\n}\n\nexport interface PutRequestOptions extends PostRequestOptions {}\n\nexport interface DeleteRequestOptions extends GetRequestOptions {}\n\nexport interface AdminRestApiClientOptions extends AdminApiClientOptions {\n  scheme?: 'https' | 'http';\n  defaultRetryTime?: number;\n  formatPaths?: boolean;\n}\n\nexport type RequestOptions = (GetRequestOptions | PostRequestOptions) & {\n  method: Method;\n};\n\nexport interface AdminRestApiClient {\n  get: (\n    path: string,\n    options?: GetRequestOptions,\n  ) => ReturnType<CustomFetchApi>;\n  put: (\n    path: string,\n    options?: PutRequestOptions,\n  ) => ReturnType<CustomFetchApi>;\n  post: (\n    path: string,\n    options?: PostRequestOptions,\n  ) => ReturnType<CustomFetchApi>;\n  delete: (\n    path: string,\n    options?: DeleteRequestOptions,\n  ) => ReturnType<CustomFetchApi>;\n}\n", "import {\n  CustomFetchApi,\n  LogContentTypes,\n  Logger,\n  generateHttpFetch,\n  getCurrentSupportedApiVersions,\n  validateApiVersion,\n  validateDomainAndGetStoreUrl,\n  validateRetries,\n} from '@shopify/graphql-client';\n\nimport {\n  validateRequiredAccessToken,\n  validateServerSideUsage,\n} from '../validations';\nimport {\n  ACCESS_TOKEN_HEADER,\n  CLIENT,\n  DEFAULT_CLIENT_VERSION,\n  DEFAULT_CONTENT_TYPE,\n  DEFAULT_RETRY_WAIT_TIME,\n  RETRIABLE_STATUS_CODES,\n} from '../constants';\n\nimport {\n  AdminRestApiClient,\n  AdminRestApiClientOptions,\n  DeleteRequestOptions,\n  GetRequestOptions,\n  HeaderOptions,\n  Method,\n  PostRequestOptions,\n  PutRequestOptions,\n  RequestOptions,\n  SearchParamFields,\n  SearchParams,\n} from './types';\n\nexport function createAdminRestApiClient({\n  storeDomain,\n  apiVersion,\n  accessToken,\n  userAgentPrefix,\n  logger,\n  customFetchApi = fetch,\n  retries: clientRetries = 0,\n  scheme = 'https',\n  defaultRetryTime = DEFAULT_RETRY_WAIT_TIME,\n  formatPaths = true,\n  isTesting,\n}: AdminRestApiClientOptions): AdminRestApiClient {\n  const currentSupportedApiVersions = getCurrentSupportedApiVersions();\n\n  const storeUrl = validateDomainAndGetStoreUrl({\n    client: CLIENT,\n    storeDomain,\n  }).replace('https://', `${scheme}://`);\n\n  const baseApiVersionValidationParams = {\n    client: CLIENT,\n    currentSupportedApiVersions,\n    logger,\n  };\n\n  validateServerSideUsage(isTesting);\n  validateApiVersion({\n    client: CLIENT,\n    currentSupportedApiVersions,\n    apiVersion,\n    logger,\n  });\n  validateRequiredAccessToken(accessToken);\n  validateRetries({client: CLIENT, retries: clientRetries});\n\n  const apiUrlFormatter = generateApiUrlFormatter(\n    storeUrl,\n    apiVersion,\n    baseApiVersionValidationParams,\n    formatPaths,\n  );\n  const clientLogger = generateClientLogger(logger);\n  const httpFetch = generateHttpFetch({\n    customFetchApi,\n    clientLogger,\n    defaultRetryWaitTime: defaultRetryTime,\n    client: CLIENT,\n    retriableCodes: RETRIABLE_STATUS_CODES,\n  });\n\n  const request = async (\n    path: string,\n    {\n      method,\n      data,\n      headers: requestHeadersObj,\n      searchParams,\n      retries = 0,\n      apiVersion,\n    }: RequestOptions,\n  ): ReturnType<CustomFetchApi> => {\n    validateRetries({client: CLIENT, retries});\n\n    const url = apiUrlFormatter(path, searchParams ?? {}, apiVersion);\n\n    const requestHeaders = normalizedHeaders(requestHeadersObj ?? {});\n    const userAgent = [\n      ...(requestHeaders['user-agent'] ? [requestHeaders['user-agent']] : []),\n      ...(userAgentPrefix ? [userAgentPrefix] : []),\n      `${CLIENT} v${DEFAULT_CLIENT_VERSION}`,\n    ].join(' | ');\n\n    const headers = normalizedHeaders({\n      'Content-Type': DEFAULT_CONTENT_TYPE,\n      ...requestHeaders,\n      Accept: DEFAULT_CONTENT_TYPE,\n      [ACCESS_TOKEN_HEADER]: accessToken,\n      'User-Agent': userAgent,\n    });\n\n    const body = data && typeof data !== 'string' ? JSON.stringify(data) : data;\n\n    return httpFetch(\n      [url, {method, headers, ...(body ? {body} : undefined)}],\n      1,\n      retries ?? clientRetries,\n    );\n  };\n\n  return {\n    get: (path: string, options?: GetRequestOptions) =>\n      request(path, {method: Method.Get, ...options}),\n    put: (path: string, options?: PutRequestOptions) =>\n      request(path, {method: Method.Put, ...options}),\n    post: (path: string, options?: PostRequestOptions) =>\n      request(path, {method: Method.Post, ...options}),\n    delete: (path: string, options?: DeleteRequestOptions) =>\n      request(path, {method: Method.Delete, ...options}),\n  };\n}\n\nfunction generateApiUrlFormatter(\n  storeUrl: string,\n  defaultApiVersion: string,\n  baseApiVersionValidationParams: Omit<\n    Parameters<typeof validateApiVersion>[0],\n    'apiVersion'\n  >,\n  formatPaths = true,\n) {\n  return (path: string, searchParams: SearchParams, apiVersion?: string) => {\n    if (apiVersion) {\n      validateApiVersion({\n        ...baseApiVersionValidationParams,\n        apiVersion,\n      });\n    }\n\n    function convertValue(\n      params: URLSearchParams,\n      key: string,\n      value: SearchParamFields,\n    ) {\n      if (Array.isArray(value)) {\n        value.forEach((arrayValue) =>\n          convertValue(params, `${key}[]`, arrayValue),\n        );\n        return;\n      } else if (typeof value === 'object') {\n        Object.entries(value).forEach(([objKey, objValue]) =>\n          convertValue(params, `${key}[${objKey}]`, objValue),\n        );\n        return;\n      }\n\n      params.append(key, String(value));\n    }\n\n    const urlApiVersion = (apiVersion ?? defaultApiVersion).trim();\n    let cleanPath = path.replace(/^\\//, '');\n    if (formatPaths) {\n      if (!cleanPath.startsWith('admin')) {\n        cleanPath = `admin/api/${urlApiVersion}/${cleanPath}`;\n      }\n      if (!cleanPath.endsWith('.json')) {\n        cleanPath = `${cleanPath}.json`;\n      }\n    }\n\n    const params = new URLSearchParams();\n    if (searchParams) {\n      for (const [key, value] of Object.entries(searchParams)) {\n        convertValue(params, key, value);\n      }\n    }\n    const queryString = params.toString() ? `?${params.toString()}` : '';\n\n    return `${storeUrl}/${cleanPath}${queryString}`;\n  };\n}\n\nfunction generateClientLogger(logger?: Logger): Logger {\n  return (logContent: LogContentTypes) => {\n    if (logger) {\n      logger(logContent);\n    }\n  };\n}\n\nfunction normalizedHeaders(headersObj: HeaderOptions): Record<string, string> {\n  const normalizedHeaders: Record<string, string> = {};\n  for (const [key, value] of Object.entries(headersObj)) {\n    normalizedHeaders[key.toLowerCase()] = Array.isArray(value)\n      ? value.join(', ')\n      : String(value);\n  }\n  return normalizedHeaders;\n}\n", "import {\n  HTTPResponseLog,\n  HTTPRetryLog,\n  HTTPResponseGraphQLDeprecationNotice,\n  LogContent,\n} from '@shopify/admin-api-client';\n\nimport * as ShopifyErrors from '../error';\nimport {LIBRARY_NAME, StatusCode} from '../types';\nimport {ConfigInterface} from '../base-types';\nimport {SHOPIFY_API_LIBRARY_VERSION} from '../version';\nimport {\n  abstractRuntimeString,\n  canonicalizeHeaders,\n  getHeader,\n} from '../../runtime';\nimport {logger} from '../logger';\n\nexport function getUserAgent(config: ConfigInterface): string {\n  let userAgentPrefix = `${LIBRARY_NAME} v${SHOPIFY_API_LIBRARY_VERSION} | ${abstractRuntimeString()}`;\n  if (config.userAgentPrefix) {\n    userAgentPrefix = `${config.userAgentPrefix} | ${userAgentPrefix}`;\n  }\n\n  return userAgentPrefix;\n}\n\nfunction serializeResponse(response: Response | any) {\n  if (!response) {\n    return {error: 'No response object provided'};\n  }\n\n  try {\n    const {status, statusText, ok, redirected, type, url, headers} = response;\n\n    const serialized: any = {\n      status,\n      statusText,\n      ok,\n      redirected,\n      type,\n      url,\n    };\n\n    if (headers?.entries) {\n      serialized.headers = Object.fromEntries(headers.entries());\n    } else if (headers) {\n      serialized.headers = headers;\n    }\n\n    return serialized;\n  } catch {\n    return response;\n  }\n}\n\nexport function clientLoggerFactory(config: ConfigInterface) {\n  return (logContent: LogContent) => {\n    if (config.logger.httpRequests) {\n      switch (logContent.type) {\n        case 'HTTP-Response': {\n          const responseLog: HTTPResponseLog['content'] = logContent.content;\n          logger(config).debug('Received response for HTTP request', {\n            requestParams: JSON.stringify(responseLog.requestParams),\n            response: JSON.stringify(serializeResponse(responseLog.response)),\n          });\n          break;\n        }\n        case 'HTTP-Retry': {\n          const responseLog: HTTPRetryLog['content'] = logContent.content;\n          logger(config).debug('Retrying HTTP request', {\n            requestParams: JSON.stringify(responseLog.requestParams),\n            retryAttempt: responseLog.retryAttempt,\n            maxRetries: responseLog.maxRetries,\n            response: responseLog.lastResponse\n              ? JSON.stringify(serializeResponse(responseLog.lastResponse))\n              : 'undefined',\n          });\n          break;\n        }\n        case 'HTTP-Response-GraphQL-Deprecation-Notice': {\n          const responseLog: HTTPResponseGraphQLDeprecationNotice['content'] =\n            logContent.content;\n          logger(config).debug(\n            'Received response containing Deprecated GraphQL Notice',\n            {\n              requestParams: JSON.stringify(responseLog.requestParams),\n              deprecationNotice: responseLog.deprecationNotice,\n            },\n          );\n          break;\n        }\n        default: {\n          logger(config).debug(`HTTP request event: ${logContent.content}`);\n          break;\n        }\n      }\n    }\n  };\n}\n\nexport function throwFailedRequest(\n  body: any,\n  atMaxRetries: boolean,\n  response?: Response,\n): never {\n  if (typeof response === 'undefined') {\n    const message = body?.errors?.message ?? '';\n    throw new ShopifyErrors.HttpRequestError(\n      `Http request error, no response available: ${message}`,\n    );\n  }\n\n  const responseHeaders = canonicalizeHeaders(\n    Object.fromEntries(response.headers.entries() ?? []),\n  );\n\n  if (response.status === StatusCode.Ok && body.errors.graphQLErrors) {\n    throw new ShopifyErrors.GraphqlQueryError({\n      message:\n        body.errors.graphQLErrors?.[0].message ?? 'GraphQL operation failed',\n      response: response as Record<string, any>,\n      headers: responseHeaders,\n      body: body as Record<string, any>,\n    });\n  }\n\n  const errorMessages: string[] = [];\n  if (body.errors) {\n    errorMessages.push(JSON.stringify(body.errors, null, 2));\n  }\n  const xRequestId = getHeader(responseHeaders, 'x-request-id');\n  if (xRequestId) {\n    errorMessages.push(\n      `If you report this error, please include this id: ${xRequestId}`,\n    );\n  }\n\n  const errorMessage = errorMessages.length\n    ? `:\\n${errorMessages.join('\\n')}`\n    : '';\n  const code = response.status;\n  const statusText = response.statusText;\n\n  switch (true) {\n    case response.status === StatusCode.TooManyRequests: {\n      if (atMaxRetries) {\n        throw new ShopifyErrors.HttpMaxRetriesError(\n          'Attempted the maximum number of retries for HTTP request.',\n        );\n      } else {\n        const retryAfter = getHeader(responseHeaders, 'Retry-After');\n        throw new ShopifyErrors.HttpThrottlingError({\n          message: `Shopify is throttling requests ${errorMessage}`,\n          code,\n          statusText,\n          body,\n          headers: responseHeaders,\n          retryAfter: retryAfter ? parseFloat(retryAfter) : undefined,\n        });\n      }\n    }\n    case response.status >= StatusCode.InternalServerError:\n      if (atMaxRetries) {\n        throw new ShopifyErrors.HttpMaxRetriesError(\n          'Attempted the maximum number of retries for HTTP request.',\n        );\n      } else {\n        throw new ShopifyErrors.HttpInternalError({\n          message: `Shopify internal error${errorMessage}`,\n          code,\n          statusText,\n          body,\n          headers: responseHeaders,\n        });\n      }\n    default:\n      throw new ShopifyErrors.HttpResponseError({\n        message: `Received an error response (${response.status} ${response.statusText}) from Shopify${errorMessage}`,\n        code,\n        statusText,\n        body,\n        headers: responseHeaders,\n      });\n  }\n}\n", "import {\n  AdminApiClient,\n  AdminOperations,\n  ApiClientRequestOptions,\n  createAdminApiClient,\n  ReturnData,\n} from '@shopify/admin-api-client';\n\nimport {ApiVersion} from '../../../types';\nimport {ConfigInterface} from '../../../base-types';\nimport type {\n  RequestReturn,\n  GraphqlParams,\n  GraphqlClientParams,\n  GraphqlQueryOptions,\n  GraphQLClientResponse,\n} from '../../types';\nimport {Session} from '../../../session/session';\nimport {logger} from '../../../logger';\nimport * as ShopifyErrors from '../../../error';\nimport {abstractFetch, canonicalizeHeaders} from '../../../../runtime';\nimport {\n  clientLoggerFactory,\n  getUserAgent,\n  throwFailedRequest,\n} from '../../common';\n\ninterface GraphqlClientClassParams {\n  config: ConfigInterface;\n}\nexport class GraphqlClient {\n  public static config: ConfigInterface;\n\n  readonly session: Session;\n  readonly client: AdminApiClient;\n  readonly apiVersion?: ApiVersion;\n\n  constructor(params: GraphqlClientParams) {\n    const config = this.graphqlClass().config;\n\n    if (!config.isCustomStoreApp && !params.session.accessToken) {\n      throw new ShopifyErrors.MissingRequiredArgument(\n        'Missing access token when creating GraphQL client',\n      );\n    }\n\n    if (params.apiVersion) {\n      const message =\n        params.apiVersion === config.apiVersion\n          ? `Admin client has a redundant API version override to the default ${params.apiVersion}`\n          : `Admin client overriding default API version ${config.apiVersion} with ${params.apiVersion}`;\n\n      logger(config).debug(message);\n    }\n\n    this.session = params.session;\n    this.apiVersion = params.apiVersion;\n    this.client = createAdminApiClient({\n      accessToken: config.adminApiAccessToken ?? this.session.accessToken!,\n      apiVersion: this.apiVersion ?? config.apiVersion,\n      storeDomain: this.session.shop,\n      customFetchApi: abstractFetch,\n      logger: clientLoggerFactory(config),\n      userAgentPrefix: getUserAgent(config),\n      isTesting: config.isTesting,\n    });\n  }\n\n  public async query<T = undefined>(\n    params: GraphqlParams,\n  ): Promise<RequestReturn<T>> {\n    logger(this.graphqlClass().config).deprecated(\n      '12.0.0',\n      'The query method is deprecated, and was replaced with the request method.\\n' +\n        'See the migration guide: https://github.com/Shopify/shopify-app-js/blob/main/packages/apps/shopify-api/docs/migrating-to-v9.md#using-the-new-clients.',\n    );\n\n    if (\n      (typeof params.data === 'string' && params.data.length === 0) ||\n      Object.entries(params.data).length === 0\n    ) {\n      throw new ShopifyErrors.MissingRequiredArgument('Query missing.');\n    }\n\n    let operation: string;\n    let variables: Record<string, any> | undefined;\n    if (typeof params.data === 'string') {\n      operation = params.data;\n    } else {\n      operation = params.data.query;\n      variables = params.data.variables;\n    }\n\n    const headers = Object.fromEntries(\n      Object.entries(params?.extraHeaders ?? {}).map(([key, value]) => [\n        key,\n        Array.isArray(value) ? value.join(', ') : value.toString(),\n      ]),\n    );\n\n    const response = await this.request<T>(operation, {\n      headers,\n      retries: params.tries ? params.tries - 1 : undefined,\n      variables,\n    });\n\n    return {body: response as T, headers: {}};\n  }\n\n  public async request<\n    T = undefined,\n    Operation extends keyof Operations = string,\n    Operations extends AdminOperations = AdminOperations,\n  >(\n    operation: Operation,\n    options?: GraphqlQueryOptions<Operation, Operations>,\n  ): Promise<\n    GraphQLClientResponse<\n      T extends undefined ? ReturnData<Operation, Operations> : T\n    >\n  > {\n    const response = await this.client.request<\n      T extends undefined ? ReturnData<Operation, Operations> : T,\n      Operation\n    >(operation, {\n      apiVersion: this.apiVersion || this.graphqlClass().config.apiVersion,\n      ...(options as ApiClientRequestOptions<Operation, AdminOperations>),\n    });\n\n    if (response.errors) {\n      const fetchResponse = response.errors.response;\n\n      throwFailedRequest(response, (options?.retries ?? 0) > 0, fetchResponse);\n    }\n\n    const headerObject = Object.fromEntries(\n      response.headers ? response.headers.entries() : [],\n    );\n\n    return {\n      ...response,\n      headers: canonicalizeHeaders(headerObject ?? {}),\n    };\n  }\n\n  private graphqlClass() {\n    return this.constructor as typeof GraphqlClient;\n  }\n}\n\nexport function graphqlClientClass({\n  config,\n}: GraphqlClientClassParams): typeof GraphqlClient {\n  class NewGraphqlClient extends GraphqlClient {\n    public static config = config;\n  }\n\n  Reflect.defineProperty(NewGraphqlClient, 'name', {\n    value: 'GraphqlClient',\n  });\n\n  return NewGraphqlClient as typeof GraphqlClient;\n}\n", "import type { NumberSplit } from './types'\n\n/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value: string): boolean {\n  return INTEGER_REGEX.test(value)\n}\n\nconst INTEGER_REGEX = /^-?[0-9]+$/\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value: string): boolean {\n  return NUMBER_REGEX.test(value)\n}\n\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/\n\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): boolean {\n  if (isInteger(value)) {\n    return Number.isSafeInteger(Number.parseInt(value, 10))\n  }\n\n  const num = Number.parseFloat(value)\n  const parsed = String(num)\n\n  if (value === parsed) {\n    return true\n  }\n\n  const valueDigits = extractSignificantDigits(value)\n  const parsedDigits = extractSignificantDigits(parsed)\n\n  if (valueDigits === parsedDigits) {\n    return true\n  }\n\n  if (config?.approx === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    const requiredDigits = 14\n    if (\n      !isInteger(value) &&\n      parsedDigits.length >= requiredDigits &&\n      valueDigits.startsWith(parsedDigits.substring(0, requiredDigits))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport enum UnsafeNumberReason {\n  underflow = 'underflow',\n  overflow = 'overflow',\n  truncate_integer = 'truncate_integer',\n  truncate_float = 'truncate_float'\n}\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value: string): UnsafeNumberReason | undefined {\n  if (isSafeNumber(value, { approx: false })) {\n    return undefined\n  }\n\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer\n  }\n\n  const num = Number.parseFloat(value)\n  if (!Number.isFinite(num)) {\n    return UnsafeNumberReason.overflow\n  }\n\n  if (num === 0) {\n    return UnsafeNumberReason.underflow\n  }\n\n  return UnsafeNumberReason.truncate_float\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): number {\n  const number = Number.parseFloat(value)\n\n  const unsafeReason = getUnsafeNumberReason(value)\n  if (\n    config?.approx === true\n      ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float\n      : unsafeReason\n  ) {\n    const unsafeReasonText = unsafeReason?.replace(/_\\w+$/, '')\n    throw new Error(\n      `Cannot safely convert to number: the value '${value}' would ${unsafeReasonText} and become ${number}`\n    )\n  }\n\n  return number\n}\n\n/**\n * Split a number into sign, digits, and exponent.\n * The value can be constructed again from a split number by inserting a dot\n * at the second character of the digits if there is more than one digit,\n * prepending it with the sign, and appending the exponent like `e${exponent}`\n */\nexport function splitNumber(value: string): NumberSplit {\n  const match = value.match(/^(-?)(\\d+\\.?\\d*)([eE]([+-]?\\d+))?$/)\n  if (!match) {\n    throw new SyntaxError(`Invalid number: ${value}`)\n  }\n\n  const sign = match[1] as '-' | ''\n  const digitsStr = match[2]\n  let exponent = match[4] !== undefined ? Number.parseInt(match[4], 10) : 0\n\n  const dot = digitsStr.indexOf('.')\n  exponent += dot !== -1 ? dot - 1 : digitsStr.length - 1\n\n  const digits = digitsStr\n    .replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, (zeros: string) => {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length\n      return ''\n    })\n    .replace(/0*$/, '') // remove trailing zeros\n\n  return digits.length > 0\n    ? { sign, digits, exponent }\n    : { sign, digits: '0', exponent: exponent + 1 }\n}\n\n/**\n * Compare two strings containing a numeric value\n * Returns 1 when a is larger than b, 0 when they are equal,\n * and -1 when a is smaller than b.\n */\nexport function compareNumber(a: string, b: string): 1 | 0 | -1 {\n  if (a === b) {\n    return 0\n  }\n\n  const aa = splitNumber(a)\n  const bb = splitNumber(b)\n\n  type Sign = -1 | 1\n\n  const sign: Sign = aa.sign === '-' ? -1 : 1\n\n  if (aa.sign !== bb.sign) {\n    if (aa.digits === '0' && bb.digits === '0') {\n      return 0\n    }\n\n    return sign\n  }\n\n  if (aa.exponent !== bb.exponent) {\n    return aa.exponent > bb.exponent ? sign : aa.exponent < bb.exponent ? (-sign as Sign) : 0\n  }\n\n  return aa.digits > bb.digits ? sign : aa.digits < bb.digits ? (-sign as Sign) : 0\n}\n\n/**\n * Count the significant digits of a number.\n *\n * For example:\n *   '2.34' returns 3\n *   '-77' returns 2\n *   '0.003400' returns 2\n *   '120.5e+30' returns 4\n **/\nexport function countSignificantDigits(value: string): number {\n  const { start, end } = getSignificantDigitRange(value)\n\n  const dot = value.indexOf('.')\n  if (dot === -1 || dot < start || dot > end) {\n    return end - start\n  }\n\n  return end - start - 1\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value: string): string {\n  const { start, end } = getSignificantDigitRange(value)\n\n  const digits = value.substring(start, end)\n\n  const dot = digits.indexOf('.')\n  if (dot === -1) {\n    return digits\n  }\n\n  return digits.substring(0, dot) + digits.substring(dot + 1)\n}\n\n/**\n * Returns the range (start to end) of the significant digits of a value.\n * Note that this range _may_ contain the decimal dot.\n *\n * For example:\n *\n *     getSignificantDigitRange('0.0325900') // { start: 3, end: 7 }\n *     getSignificantDigitRange('2.0300')    // { start: 0, end: 3 }\n *     getSignificantDigitRange('0.0')       // { start: 3, end: 3 }\n *\n */\nfunction getSignificantDigitRange(value: string): { start: number; end: number } {\n  let start = 0\n  if (value[0] === '-') {\n    start++\n  }\n  while (value[start] === '0' || value[start] === '.') {\n    start++\n  }\n\n  let end = value.lastIndexOf('e')\n  if (end === -1) {\n    end = value.lastIndexOf('E')\n  }\n  if (end === -1) {\n    end = value.length\n  }\n  while ((value[end - 1] === '0' || value[end - 1] === '.') && end > start) {\n    end--\n  }\n\n  return { start, end }\n}\n", "import {\n  compareNumber,\n  countSignificantDigits,\n  getUnsafeNumberReason,\n  isInteger,\n  isNumber,\n  UnsafeNumberReason\n} from './utils.js'\n\n/**\n * A lossless number. Stores its numeric value as string\n */\nexport class LosslessNumber {\n  // numeric value as string\n  value: string\n\n  // type information\n  isLosslessNumber = true\n\n  constructor(value: string) {\n    if (!isNumber(value)) {\n      throw new Error(`Invalid number (value: \"${value}\")`)\n    }\n\n    this.value = value\n  }\n\n  /**\n   * Get the value of the LosslessNumber as number or bigint.\n   *\n   * - a number is returned for safe numbers and decimal values that only lose some insignificant digits\n   * - a bigint is returned for big integer numbers\n   * - an Error is thrown for values that will overflow or underflow\n   *\n   * Note that you can implement your own strategy for conversion by just getting the value as string\n   * via .toString(), and using util functions like isInteger, isSafeNumber, getUnsafeNumberReason,\n   * and toSafeNumberOrThrow to convert it to a numeric value.\n   */\n  valueOf(): number | bigint {\n    const unsafeReason = getUnsafeNumberReason(this.value)\n\n    // safe or truncate_float\n    if (unsafeReason === undefined || unsafeReason === UnsafeNumberReason.truncate_float) {\n      return Number.parseFloat(this.value)\n    }\n\n    // truncate_integer\n    if (isInteger(this.value)) {\n      return BigInt(this.value)\n    }\n\n    // overflow or underflow\n    throw new Error(\n      `Cannot safely convert to number: the value '${this.value}' would ${unsafeReason} and become ${Number.parseFloat(this.value)}`\n    )\n  }\n\n  /**\n   * Get the value of the LosslessNumber as string.\n   */\n  toString(): string {\n    return this.value\n  }\n\n  // Note: we do NOT implement a .toJSON() method, and you should not implement\n  // or use that, it cannot safely turn the numeric value in the string into\n  // stringified JSON since it has to be parsed into a number first.\n}\n\n/**\n * Test whether a value is a LosslessNumber\n */\nexport function isLosslessNumber(value: unknown): value is LosslessNumber {\n  // @ts-expect-error\n  return (value && typeof value === 'object' && value.isLosslessNumber) || false\n}\n\n/**\n * Convert a number into a LosslessNumber if this is possible in a safe way\n * If the value has too many digits, or is NaN or Infinity, an error will be thrown\n */\nexport function toLosslessNumber(value: number): LosslessNumber {\n  const maxDigits = 15\n  if (countSignificantDigits(String(value)) > maxDigits) {\n    throw new Error(\n      `Invalid number: contains more than 15 digits and is most likely truncated and unsafe by itself (value: ${value})`\n    )\n  }\n\n  if (Number.isNaN(value)) {\n    throw new Error('Invalid number: NaN')\n  }\n\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number: ${value}`)\n  }\n\n  return new LosslessNumber(String(value))\n}\n\n/**\n * Compare two lossless numbers.\n * Returns 1 when a is larger than b, 0 when they are equal,\n * and -1 when a is smaller than b.\n */\nexport function compareLosslessNumber(a: LosslessNumber, b: LosslessNumber): 1 | 0 | -1 {\n  return compareNumber(a.value, b.value)\n}\n", "import { LosslessNumber } from './LosslessNumber.js'\nimport { isInteger } from './utils.js'\n\nexport function parseLosslessNumber(value: string): LosslessNumber {\n  return new LosslessNumber(value)\n}\n\nexport function parseNumberAndBigInt(value: string): number | bigint {\n  return isInteger(value) ? BigInt(value) : Number.parseFloat(value)\n}\n", "import { isLosslessNumber } from './LosslessNumber.js'\nimport type { GenericObject, Reviver } from './types'\n\n/**\n * Revive a json object.\n * Applies the reviver function recursively on all values in the JSON object.\n * @param json   A JSON Object, Array, or value\n * @param reviver\n *              A reviver function invoked with arguments `key` and `value`,\n *              which must return a replacement value. The function context\n *              (`this`) is the Object or Array that contains the currently\n *              handled value.\n */\nexport function revive(json: unknown, reviver: Reviver): unknown {\n  return reviveValue({ '': json }, '', json, reviver)\n}\n\n/**\n * Revive a value\n */\nfunction reviveValue(\n  context: GenericObject<unknown> | Array<unknown>,\n  key: string,\n  value: unknown,\n  reviver: Reviver\n): unknown {\n  if (Array.isArray(value)) {\n    return reviver.call(context, key, reviveArray(value, reviver))\n  }\n\n  if (value && typeof value === 'object' && !isLosslessNumber(value)) {\n    // note the special case for LosslessNumber,\n    // we don't want to iterate over the internals of a LosslessNumber\n    return reviver.call(context, key, reviveObject(value as GenericObject<unknown>, reviver))\n  }\n\n  return reviver.call(context, key, value)\n}\n\n/**\n * Revive the properties of an object\n */\nfunction reviveObject(object: GenericObject<unknown>, reviver: Reviver) {\n  for (const key of Object.keys(object)) {\n    const value = reviveValue(object, key, object[key], reviver)\n    if (value !== undefined) {\n      object[key] = value\n    } else {\n      delete object[key]\n    }\n  }\n\n  return object\n}\n\n/**\n * Revive the properties of an Array\n */\nfunction reviveArray(array: Array<unknown>, reviver: Reviver): Array<unknown> {\n  for (let i = 0; i < array.length; i++) {\n    array[i] = reviveValue(array, String(i), array[i], reviver)\n  }\n\n  return array\n}\n", "import { parseLosslessNumber } from './numberParsers.js'\nimport { revive } from './revive.js'\nimport type { DuplicateKeyInfo, GenericObject, NumberParser, ParseOptions, Reviver } from './types'\n\n/**\n * The LosslessJSON.parse() method parses a string as JSON, optionally transforming\n * the value produced by parsing.\n *\n * The parser is based on the parser of Tan Li Hou shared in\n * https://lihautan.com/json-parser-with-javascript/\n *\n * @param text\n * The string to parse as JSON. See the JSON object for a description of JSON syntax.\n *\n * @param [reviver]\n * If a function, prescribes how the value originally produced by parsing is\n * transformed, before being returned.\n *\n * @param [options=ParseOptions | NumberParserArgument]\n * Pass a custom number parser. Input is a string, and the output can be unknown\n * numeric value: number, bigint, LosslessNumber, or a custom BigNumber library.\n *\n * @returns Returns the Object corresponding to the given JSON text.\n *\n * @throws Throws a SyntaxError exception if the string to parse is not valid JSON.\n */\nexport function parse(\n  text: string,\n  reviver?: Reviver | null,\n  options?: ParseOptions | NumberParser\n): unknown {\n  const optionsObj = typeof options === 'function' ? { parseNumber: options } : options\n  const parseNumber = optionsObj?.parseNumber ?? parseLosslessNumber\n  const onDuplicateKey = optionsObj?.onDuplicateKey ?? throwDuplicateKey\n\n  let i = 0\n  const value = parseValue()\n  expectValue(value)\n  expectEndOfInput()\n\n  return reviver ? revive(value, reviver) : value\n\n  function parseObject(): GenericObject<unknown> | undefined {\n    if (text.charCodeAt(i) === codeOpeningBrace) {\n      i++\n      skipWhitespace()\n\n      const object: GenericObject<unknown> = {}\n      let initial = true\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBrace) {\n        if (!initial) {\n          eatComma()\n          skipWhitespace()\n        } else {\n          initial = false\n        }\n\n        const start = i\n\n        const key = parseString()\n        if (key === undefined) {\n          throwObjectKeyExpected()\n          return // To make TS happy\n        }\n\n        skipWhitespace()\n        eatColon()\n        const value = parseValue()\n\n        if (value === undefined) {\n          throwObjectValueExpected()\n          return // To make TS happy\n        }\n\n        // handle duplicate keys\n        // biome-ignore lint/suspicious/noPrototypeBuiltins: TODO: replace with hasOwn one day, when browser support is high enough\n        if (Object.prototype.hasOwnProperty.call(object, key) && !isDeepEqual(value, object[key])) {\n          // Note that we could also test `if(key in object) {...}`\n          // or `if (object[key] !== 'undefined') {...}`, but that is slower.\n          const returnedValue = onDuplicateKey({\n            key,\n            position: start + 1,\n            oldValue: object[key],\n            newValue: value\n          })\n\n          if (returnedValue !== undefined) {\n            object[key] = returnedValue\n          }\n        } else {\n          object[key] = value\n        }\n      }\n\n      if (text.charCodeAt(i) !== codeClosingBrace) {\n        throwObjectKeyOrEndExpected()\n      }\n      i++\n\n      return object\n    }\n  }\n\n  function parseArray(): Array<unknown> | unknown {\n    if (text.charCodeAt(i) === codeOpeningBracket) {\n      i++\n      skipWhitespace()\n\n      const array = []\n      let initial = true\n      while (i < text.length && text.charCodeAt(i) !== codeClosingBracket) {\n        if (!initial) {\n          eatComma()\n        } else {\n          initial = false\n        }\n\n        const value = parseValue()\n        expectArrayItem(value)\n        array.push(value)\n      }\n\n      if (text.charCodeAt(i) !== codeClosingBracket) {\n        throwArrayItemOrEndExpected()\n      }\n      i++\n\n      return array\n    }\n  }\n\n  function parseValue(): unknown {\n    skipWhitespace()\n\n    const value =\n      parseString() ??\n      parseNumeric() ??\n      parseObject() ??\n      parseArray() ??\n      parseKeyword('true', true) ??\n      parseKeyword('false', false) ??\n      parseKeyword('null', null)\n\n    skipWhitespace()\n\n    return value\n  }\n\n  function parseKeyword(name: string, value: unknown): unknown | undefined {\n    if (text.slice(i, i + name.length) === name) {\n      i += name.length\n      return value\n    }\n  }\n\n  function skipWhitespace() {\n    while (isWhitespace(text.charCodeAt(i))) {\n      i++\n    }\n  }\n\n  function parseString() {\n    if (text.charCodeAt(i) === codeDoubleQuote) {\n      i++\n      let result = ''\n      while (i < text.length && text.charCodeAt(i) !== codeDoubleQuote) {\n        if (text.charCodeAt(i) === codeBackslash) {\n          const char = text[i + 1]\n          const escapeChar = escapeCharacters[char]\n          if (escapeChar !== undefined) {\n            result += escapeChar\n            i++\n          } else if (char === 'u') {\n            if (\n              isHex(text.charCodeAt(i + 2)) &&\n              isHex(text.charCodeAt(i + 3)) &&\n              isHex(text.charCodeAt(i + 4)) &&\n              isHex(text.charCodeAt(i + 5))\n            ) {\n              result += String.fromCharCode(Number.parseInt(text.slice(i + 2, i + 6), 16))\n              i += 5\n            } else {\n              throwInvalidUnicodeCharacter(i)\n            }\n          } else {\n            throwInvalidEscapeCharacter(i)\n          }\n        } else {\n          if (isValidStringCharacter(text.charCodeAt(i))) {\n            result += text[i]\n          } else {\n            throwInvalidCharacter(text[i])\n          }\n        }\n        i++\n      }\n      expectEndOfString()\n      i++\n      return result\n    }\n  }\n\n  function parseNumeric() {\n    const start = i\n    if (text.charCodeAt(i) === codeMinus) {\n      i++\n      expectDigit(start)\n    }\n\n    if (text.charCodeAt(i) === codeZero) {\n      i++\n    } else if (isNonZeroDigit(text.charCodeAt(i))) {\n      i++\n      while (isDigit(text.charCodeAt(i))) {\n        i++\n      }\n    }\n\n    if (text.charCodeAt(i) === codeDot) {\n      i++\n      expectDigit(start)\n      while (isDigit(text.charCodeAt(i))) {\n        i++\n      }\n    }\n\n    if (text.charCodeAt(i) === codeLowercaseE || text.charCodeAt(i) === codeUppercaseE) {\n      i++\n      if (text.charCodeAt(i) === codeMinus || text.charCodeAt(i) === codePlus) {\n        i++\n      }\n      expectDigit(start)\n      while (isDigit(text.charCodeAt(i))) {\n        i++\n      }\n    }\n\n    if (i > start) {\n      return parseNumber(text.slice(start, i))\n    }\n  }\n\n  function eatComma() {\n    if (text.charCodeAt(i) !== codeComma) {\n      throw new SyntaxError(`Comma ',' expected after value ${gotAt()}`)\n    }\n    i++\n  }\n\n  function eatColon() {\n    if (text.charCodeAt(i) !== codeColon) {\n      throw new SyntaxError(`Colon ':' expected after property name ${gotAt()}`)\n    }\n    i++\n  }\n\n  function expectValue(value: unknown) {\n    if (value === undefined) {\n      throw new SyntaxError(`JSON value expected ${gotAt()}`)\n    }\n  }\n\n  function expectArrayItem(value: unknown) {\n    if (value === undefined) {\n      throw new SyntaxError(`Array item expected ${gotAt()}`)\n    }\n  }\n\n  function expectEndOfInput() {\n    if (i < text.length) {\n      throw new SyntaxError(`Expected end of input ${gotAt()}`)\n    }\n  }\n\n  function expectDigit(start: number) {\n    if (!isDigit(text.charCodeAt(i))) {\n      const numSoFar = text.slice(start, i)\n      throw new SyntaxError(`Invalid number '${numSoFar}', expecting a digit ${gotAt()}`)\n    }\n  }\n\n  function expectEndOfString() {\n    if (text.charCodeAt(i) !== codeDoubleQuote) {\n      throw new SyntaxError(`End of string '\"' expected ${gotAt()}`)\n    }\n  }\n\n  function throwObjectKeyExpected() {\n    throw new SyntaxError(`Quoted object key expected ${gotAt()}`)\n  }\n\n  function throwDuplicateKey({ key, position }: DuplicateKeyInfo) {\n    throw new SyntaxError(`Duplicate key '${key}' encountered at position ${position}`)\n  }\n\n  function throwObjectKeyOrEndExpected() {\n    throw new SyntaxError(`Quoted object key or end of object '}' expected ${gotAt()}`)\n  }\n\n  function throwArrayItemOrEndExpected() {\n    throw new SyntaxError(`Array item or end of array ']' expected ${gotAt()}`)\n  }\n\n  function throwInvalidCharacter(char: string) {\n    throw new SyntaxError(`Invalid character '${char}' ${pos()}`)\n  }\n\n  function throwInvalidEscapeCharacter(start: number) {\n    const chars = text.slice(start, start + 2)\n    throw new SyntaxError(`Invalid escape character '${chars}' ${pos()}`)\n  }\n\n  function throwObjectValueExpected() {\n    throw new SyntaxError(`Object value expected after ':' ${pos()}`)\n  }\n\n  function throwInvalidUnicodeCharacter(start: number) {\n    const chars = text.slice(start, start + 6)\n    throw new SyntaxError(`Invalid unicode character '${chars}' ${pos()}`)\n  }\n\n  // zero based character position\n  function pos(): string {\n    return `at position ${i}`\n  }\n\n  function got(): string {\n    return i < text.length ? `but got '${text[i]}'` : 'but reached end of input'\n  }\n\n  function gotAt(): string {\n    return `${got()} ${pos()}`\n  }\n}\n\nfunction isWhitespace(code: number): boolean {\n  return code === codeSpace || code === codeNewline || code === codeTab || code === codeReturn\n}\n\nfunction isHex(code: number): boolean {\n  return (\n    (code >= codeZero && code <= codeNine) ||\n    (code >= codeUppercaseA && code <= codeUppercaseF) ||\n    (code >= codeLowercaseA && code <= codeLowercaseF)\n  )\n}\n\nfunction isDigit(code: number): boolean {\n  return code >= codeZero && code <= codeNine\n}\n\nfunction isNonZeroDigit(code: number): boolean {\n  return code >= codeOne && code <= codeNine\n}\n\nexport function isValidStringCharacter(code: number): boolean {\n  return code >= 0x20 && code <= 0x10ffff\n}\n\nexport function isDeepEqual(a: unknown, b: unknown): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every((item, index) => isDeepEqual(item, b[index]))\n  }\n\n  if (isObject(a) && isObject(b)) {\n    const keys = [...new Set([...Object.keys(a), ...Object.keys(b)])]\n    return keys.every((key) => isDeepEqual(a[key], b[key]))\n  }\n\n  return false\n}\n\nfunction isObject(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null\n}\n\n// map with all escape characters\nconst escapeCharacters: GenericObject<string> = {\n  '\"': '\"',\n  '\\\\': '\\\\',\n  '/': '/',\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t'\n  // note that \\u is handled separately in parseString()\n}\n\nconst codeBackslash = 0x5c // \"\\\"\nconst codeOpeningBrace = 0x7b // \"{\"\nconst codeClosingBrace = 0x7d // \"}\"\nconst codeOpeningBracket = 0x5b // \"[\"\nconst codeClosingBracket = 0x5d // \"]\"\nconst codeSpace = 0x20 // \" \"\nconst codeNewline = 0xa // \"\\n\"\nconst codeTab = 0x9 // \"\\t\"\nconst codeReturn = 0xd // \"\\r\"\nconst codeDoubleQuote = 0x0022 // \"\nconst codePlus = 0x2b // \"+\"\nconst codeMinus = 0x2d // \"-\"\nconst codeZero = 0x30\nconst codeOne = 0x31\nconst codeNine = 0x39\nconst codeComma = 0x2c // \",\"\nconst codeDot = 0x2e // \".\" (dot, period)\nconst codeColon = 0x3a // \":\"\nexport const codeUppercaseA = 0x41 // \"A\"\nexport const codeLowercaseA = 0x61 // \"a\"\nexport const codeUppercaseE = 0x45 // \"E\"\nexport const codeLowercaseE = 0x65 // \"e\"\nexport const codeUppercaseF = 0x46 // \"F\"\nexport const codeLowercaseF = 0x66 // \"f\"\n", "import {\n  AdminRestApiClient,\n  createAdminRestApiClient,\n} from '@shopify/admin-api-client';\nimport * as LosslessJSON from 'lossless-json';\n\nimport {\n  clientLoggerFactory,\n  getUserAgent,\n  throwFailedRequest,\n} from '../../common';\nimport {\n  HashFormat,\n  NormalizedRequest,\n  abstractFetch,\n  canonicalizeHeaders,\n  createSHA256HMAC,\n  getHeader,\n} from '../../../../runtime';\nimport {ConfigInterface} from '../../../base-types';\nimport * as ShopifyErrors from '../../../error';\nimport {logger} from '../../../logger';\nimport {\n  RestRequestReturn,\n  PageInfo,\n  RestClientParams,\n  PageInfoParams,\n} from '../types';\nimport type {\n  RequestParams,\n  GetRequestParams,\n  PutRequestParams,\n  PostRequestParams,\n  DeleteRequestParams,\n} from '../../types';\nimport {ApiVersion, Method} from '../../../types';\nimport {Session} from '../../../session/session';\n\nexport interface RestClientClassParams {\n  config: ConfigInterface;\n  formatPaths?: boolean;\n}\n\ninterface DeprecationInterface {\n  message: string | null;\n  path: string;\n  body?: string;\n}\n\nexport class RestClient {\n  public static config: ConfigInterface;\n  public static formatPaths: boolean;\n\n  static LINK_HEADER_REGEXP = /<([^<]+)>; rel=\"([^\"]+)\"/;\n  static DEFAULT_LIMIT = '50';\n  static RETRY_WAIT_TIME = 1000;\n\n  static readonly DEPRECATION_ALERT_DELAY = 300000;\n  loggedDeprecations: Record<string, number> = {};\n\n  readonly client: AdminRestApiClient;\n  readonly session: Session;\n  readonly apiVersion: ApiVersion;\n\n  public constructor({session, apiVersion}: RestClientParams) {\n    const config = this.restClass().config;\n\n    if (!config.isCustomStoreApp && !session.accessToken) {\n      throw new ShopifyErrors.MissingRequiredArgument(\n        'Missing access token when creating REST client',\n      );\n    }\n\n    if (apiVersion) {\n      const message =\n        apiVersion === config.apiVersion\n          ? `REST client has a redundant API version override to the default ${apiVersion}`\n          : `REST client overriding default API version ${config.apiVersion} with ${apiVersion}`;\n\n      logger(config).debug(message);\n    }\n\n    const customStoreAppAccessToken =\n      config.adminApiAccessToken ?? config.apiSecretKey;\n\n    this.session = session;\n    this.apiVersion = apiVersion ?? config.apiVersion;\n    this.client = createAdminRestApiClient({\n      scheme: config.hostScheme,\n      storeDomain: session.shop,\n      apiVersion: apiVersion ?? config.apiVersion,\n      accessToken: config.isCustomStoreApp\n        ? customStoreAppAccessToken\n        : session.accessToken!,\n      customFetchApi: abstractFetch,\n      logger: clientLoggerFactory(config),\n      userAgentPrefix: getUserAgent(config),\n      defaultRetryTime: this.restClass().RETRY_WAIT_TIME,\n      formatPaths: this.restClass().formatPaths,\n      isTesting: config.isTesting,\n    });\n  }\n\n  /**\n   * Performs a GET request on the given path.\n   */\n  public async get<T = any>(params: GetRequestParams) {\n    return this.request<T>({method: Method.Get, ...params});\n  }\n\n  /**\n   * Performs a POST request on the given path.\n   */\n  public async post<T = any>(params: PostRequestParams) {\n    return this.request<T>({method: Method.Post, ...params});\n  }\n\n  /**\n   * Performs a PUT request on the given path.\n   */\n  public async put<T = any>(params: PutRequestParams) {\n    return this.request<T>({method: Method.Put, ...params});\n  }\n\n  /**\n   * Performs a DELETE request on the given path.\n   */\n  public async delete<T = any>(params: DeleteRequestParams) {\n    return this.request<T>({method: Method.Delete, ...params});\n  }\n\n  protected async request<T = any>(\n    params: RequestParams,\n  ): Promise<RestRequestReturn<T>> {\n    const requestParams = {\n      headers: {\n        ...params.extraHeaders,\n        ...(params.type ? {'Content-Type': params.type.toString()} : {}),\n      },\n      retries: params.tries ? params.tries - 1 : undefined,\n      searchParams: params.query,\n    };\n\n    let response: Response;\n    switch (params.method) {\n      case Method.Get:\n        response = await this.client.get(params.path, requestParams);\n        break;\n      case Method.Put:\n        response = await this.client.put(params.path, {\n          ...requestParams,\n          data: params.data!,\n        });\n        break;\n      case Method.Post:\n        response = await this.client.post(params.path, {\n          ...requestParams,\n          data: params.data!,\n        });\n        break;\n      case Method.Delete:\n        response = await this.client.delete(params.path, requestParams);\n        break;\n      default:\n        throw new ShopifyErrors.InvalidRequestError(\n          `Unsupported request method '${params.method}'`,\n        );\n    }\n\n    const bodyString: string = await response.text();\n\n    // Some DELETE requests return an empty body but are still valid responses, we want those to go through\n    const body: any =\n      params.method === Method.Delete && bodyString === ''\n        ? {}\n        : this.parseJsonWithLosslessNumbers(bodyString);\n\n    const responseHeaders = canonicalizeHeaders(\n      Object.fromEntries(response.headers.entries()),\n    );\n\n    if (!response.ok) {\n      throwFailedRequest(body, (params.tries ?? 1) > 1, response);\n    }\n\n    const requestReturn: RestRequestReturn<T> = {\n      body,\n      headers: responseHeaders,\n    };\n\n    await this.logDeprecations(\n      {\n        method: params.method,\n        url: params.path,\n        headers: requestParams.headers,\n        body: params.data ? JSON.stringify(params.data) : undefined,\n      },\n      requestReturn,\n    );\n\n    const link = response.headers.get('Link');\n    if (link !== undefined) {\n      const pageInfo: PageInfo = {\n        limit: params.query?.limit\n          ? params.query?.limit.toString()\n          : RestClient.DEFAULT_LIMIT,\n      };\n\n      if (link) {\n        const links = link.split(', ');\n\n        for (const link of links) {\n          const parsedLink = link.match(RestClient.LINK_HEADER_REGEXP);\n          if (!parsedLink) {\n            continue;\n          }\n\n          const linkRel = parsedLink[2];\n          const linkUrl = new URL(parsedLink[1]);\n          const linkFields = linkUrl.searchParams.get('fields');\n          const linkPageToken = linkUrl.searchParams.get('page_info');\n\n          if (!pageInfo.fields && linkFields) {\n            pageInfo.fields = linkFields.split(',');\n          }\n\n          if (linkPageToken) {\n            switch (linkRel) {\n              case 'previous':\n                pageInfo.previousPageUrl = parsedLink[1];\n                pageInfo.prevPage = this.buildRequestParams(parsedLink[1]);\n                break;\n              case 'next':\n                pageInfo.nextPageUrl = parsedLink[1];\n                pageInfo.nextPage = this.buildRequestParams(parsedLink[1]);\n                break;\n            }\n          }\n        }\n      }\n\n      requestReturn.pageInfo = pageInfo;\n    }\n\n    return requestReturn;\n  }\n\n  private restClass() {\n    return this.constructor as typeof RestClient;\n  }\n\n  /**\n   * Parse JSON with lossless-json to preserve numeric precision.\n   * Converts all ID fields (ending with _id, _ids, or named 'id') to strings.\n   */\n  private parseJsonWithLosslessNumbers(jsonString: string): any {\n    // Parse with lossless-json first to preserve precision\n    const parsed = LosslessJSON.parse(jsonString);\n\n    // Recursively process the parsed object to convert IDs to strings\n    const processValue = (value: any, key?: string): any => {\n      if (value === null || value === undefined) {\n        return value;\n      }\n\n      // Handle LosslessNumber instances\n      if (value && value.isLosslessNumber === true) {\n        const keyLower = (key || '').toLowerCase();\n        // Always convert ID fields to strings\n        if (keyLower === 'id' || keyLower.endsWith('_id')) {\n          return value.toString();\n        }\n        // For non-ID fields, always convert to regular JavaScript number\n        // The IDs have already been handled, so we can use standard conversion\n        return Number(value.value);\n      }\n\n      // Handle arrays - special case for _ids arrays\n      if (Array.isArray(value)) {\n        const isIdsArray = key && key.toLowerCase().endsWith('_ids');\n        return value.map((item) => {\n          // If this is an _ids array and item is a LosslessNumber, convert to string\n          if (isIdsArray && item && item.isLosslessNumber === true) {\n            return item.toString();\n          }\n          return processValue(item);\n        });\n      }\n\n      // Handle objects\n      if (typeof value === 'object') {\n        const result: any = {};\n        for (const objKey in value) {\n          if (Object.prototype.hasOwnProperty.call(value, objKey)) {\n            result[objKey] = processValue(value[objKey], objKey);\n          }\n        }\n        return result;\n      }\n\n      return value;\n    };\n\n    return processValue(parsed);\n  }\n\n  private buildRequestParams(newPageUrl: string): PageInfoParams {\n    const pattern = `^/admin/api/[^/]+/(.*).json$`;\n\n    const url = new URL(newPageUrl);\n    const path = url.pathname.replace(new RegExp(pattern), '$1');\n    return {\n      path,\n      query: Object.fromEntries(url.searchParams.entries()),\n    };\n  }\n\n  private async logDeprecations(\n    request: NormalizedRequest,\n    response: RestRequestReturn,\n  ) {\n    const config = this.restClass().config;\n\n    const deprecationReason = getHeader(\n      response.headers,\n      'X-Shopify-API-Deprecated-Reason',\n    );\n    if (deprecationReason) {\n      const deprecation: DeprecationInterface = {\n        message: deprecationReason,\n        path: request.url,\n      };\n\n      if (request.body) {\n        // This can only be a string, since we're always converting the body before calling this method\n        deprecation.body = `${(request.body as string).substring(0, 100)}...`;\n      }\n\n      const depHash = await createSHA256HMAC(\n        config.apiSecretKey,\n        JSON.stringify(deprecation),\n        HashFormat.Hex,\n      );\n\n      if (\n        !Object.keys(this.loggedDeprecations).includes(depHash) ||\n        Date.now() - this.loggedDeprecations[depHash] >=\n          RestClient.DEPRECATION_ALERT_DELAY\n      ) {\n        this.loggedDeprecations[depHash] = Date.now();\n\n        const stack = new Error().stack;\n        const message = `API Deprecation Notice ${new Date().toLocaleString()} : ${JSON.stringify(\n          deprecation,\n        )}  -  Stack Trace: ${stack}`;\n        await logger(config).warning(message);\n      }\n    }\n  }\n}\n\nexport function restClientClass(\n  params: RestClientClassParams,\n): typeof RestClient {\n  const {config, formatPaths} = params;\n\n  class NewRestClient extends RestClient {\n    public static config = config;\n    public static formatPaths = formatPaths === undefined ? true : formatPaths;\n  }\n\n  Reflect.defineProperty(NewRestClient, 'name', {\n    value: 'RestClient',\n  });\n\n  return NewRestClient as typeof RestClient;\n}\n", "export const DEFAULT_CONTENT_TYPE = 'application/json';\nexport const DEFAULT_SDK_VARIANT = 'storefront-api-client';\n// This is value is replaced with package.json version during rollup build process\nexport const DEFAULT_CLIENT_VERSION = 'ROLLUP_REPLACE_CLIENT_VERSION';\n\nexport const PUBLIC_ACCESS_TOKEN_HEADER = 'X-Shopify-Storefront-Access-Token';\nexport const PRIVATE_ACCESS_TOKEN_HEADER = 'Shopify-Storefront-Private-Token';\nexport const SDK_VARIANT_HEADER = 'X-SDK-Variant';\nexport const SDK_VERSION_HEADER = 'X-SDK-Version';\nexport const SDK_VARIANT_SOURCE_HEADER = 'X-SDK-Variant-Source';\n\nexport const CLIENT = 'Storefront API Client';\n", "import {CLIENT} from './constants';\n\nexport function validatePrivateAccessTokenUsage(\n  privateAccessToken: string | undefined,\n) {\n  if (privateAccessToken && typeof window !== 'undefined') {\n    throw new Error(\n      `${CLIENT}: private access tokens and headers should only be used in a server-to-server implementation. Use the public API access token in nonserver environments.`,\n    );\n  }\n}\n\nexport function validateRequiredAccessTokens(\n  publicAccessToken: string | undefined,\n  privateAccessToken: string | undefined,\n) {\n  if (!publicAccessToken && !privateAccessToken) {\n    throw new Error(\n      `${CLIENT}: a public or private access token must be provided`,\n    );\n  }\n\n  if (publicAccessToken && privateAccessToken) {\n    throw new Error(\n      `${CLIENT}: only provide either a public or private access token`,\n    );\n  }\n}\n", "import {\n  createGraphQLClient,\n  getCurrentSupportedApiVersions,\n  validateDomainAndGetStoreUrl,\n  validateApiVersion,\n  generateGetGQLClientParams,\n  generateGetHeaders,\n} from '@shopify/graphql-client';\n\nimport {\n  StorefrontApiClientOptions,\n  StorefrontApiClient,\n  StorefrontApiClientConfig,\n  StorefrontOperations,\n} from './types';\nimport {\n  DEFAULT_SDK_VARIANT,\n  DEFAULT_CLIENT_VERSION,\n  SDK_VARIANT_HEADER,\n  SDK_VARIANT_SOURCE_HEADER,\n  SDK_VERSION_HEADER,\n  DEFAULT_CONTENT_TYPE,\n  PUBLIC_ACCESS_TOKEN_HEADER,\n  PRIVATE_ACCESS_TOKEN_HEADER,\n  CLIENT,\n} from './constants';\nimport {\n  validateRequiredAccessTokens,\n  validatePrivateAccessTokenUsage,\n} from './validations';\n\nexport function createStorefrontApiClient({\n  storeDomain,\n  apiVersion,\n  publicAccessToken,\n  privateAccessToken,\n  clientName,\n  retries = 0,\n  customFetchApi,\n  logger,\n}: StorefrontApiClientOptions): StorefrontApiClient {\n  const currentSupportedApiVersions = getCurrentSupportedApiVersions();\n\n  const storeUrl = validateDomainAndGetStoreUrl({\n    client: CLIENT,\n    storeDomain,\n  });\n\n  const baseApiVersionValidationParams = {\n    client: CLIENT,\n    currentSupportedApiVersions,\n    logger,\n  };\n\n  validateApiVersion({...baseApiVersionValidationParams, apiVersion});\n  validateRequiredAccessTokens(publicAccessToken, privateAccessToken);\n  validatePrivateAccessTokenUsage(privateAccessToken);\n\n  const apiUrlFormatter = generateApiUrlFormatter(\n    storeUrl,\n    apiVersion,\n    baseApiVersionValidationParams,\n  );\n\n  const config: StorefrontApiClientConfig = {\n    storeDomain: storeUrl,\n    apiVersion,\n    ...(publicAccessToken\n      ? {publicAccessToken}\n      : {\n          privateAccessToken: privateAccessToken!,\n        }),\n    headers: {\n      'Content-Type': DEFAULT_CONTENT_TYPE,\n      Accept: DEFAULT_CONTENT_TYPE,\n      [SDK_VARIANT_HEADER]: DEFAULT_SDK_VARIANT,\n      [SDK_VERSION_HEADER]: DEFAULT_CLIENT_VERSION,\n      ...(clientName ? {[SDK_VARIANT_SOURCE_HEADER]: clientName} : {}),\n      ...(publicAccessToken\n        ? {[PUBLIC_ACCESS_TOKEN_HEADER]: publicAccessToken}\n        : {[PRIVATE_ACCESS_TOKEN_HEADER]: privateAccessToken!}),\n    },\n    apiUrl: apiUrlFormatter(),\n    clientName,\n  };\n\n  const graphqlClient = createGraphQLClient({\n    headers: config.headers,\n    url: config.apiUrl,\n    retries,\n    customFetchApi,\n    logger,\n  });\n\n  const getHeaders = generateGetHeaders(config);\n  const getApiUrl = generateGetApiUrl(config, apiUrlFormatter);\n\n  const getGQLClientParams = generateGetGQLClientParams<StorefrontOperations>({\n    getHeaders,\n    getApiUrl,\n  });\n\n  const client: StorefrontApiClient = {\n    config,\n    getHeaders,\n    getApiUrl,\n    fetch: (...props) => {\n      return graphqlClient.fetch(...getGQLClientParams(...props));\n    },\n    request: (...props) => {\n      return graphqlClient.request(...getGQLClientParams(...props));\n    },\n    requestStream: (...props) => {\n      return graphqlClient.requestStream(...getGQLClientParams(...props));\n    },\n  };\n\n  return Object.freeze(client);\n}\n\nfunction generateApiUrlFormatter(\n  storeUrl: string,\n  defaultApiVersion: string,\n  baseApiVersionValidationParams: Omit<\n    Parameters<typeof validateApiVersion>[0],\n    'apiVersion'\n  >,\n) {\n  return (apiVersion?: string) => {\n    if (apiVersion) {\n      validateApiVersion({\n        ...baseApiVersionValidationParams,\n        apiVersion,\n      });\n    }\n\n    const urlApiVersion = (apiVersion ?? defaultApiVersion).trim();\n\n    return `${storeUrl}/api/${urlApiVersion}/graphql.json`;\n  };\n}\n\nfunction generateGetApiUrl(\n  config: StorefrontApiClientConfig,\n  apiUrlFormatter: (version?: string) => string,\n): StorefrontApiClient['getApiUrl'] {\n  return (propApiVersion?: string) => {\n    return propApiVersion ? apiUrlFormatter(propApiVersion) : config.apiUrl;\n  };\n}\n", "import {\n  StorefrontApiClient,\n  StorefrontOperations,\n  ClientResponse,\n  createStorefrontApiClient,\n  ReturnData,\n  ApiClientRequestOptions,\n} from '@shopify/storefront-api-client';\n\nimport {ApiVersion} from '../../types';\nimport {logger} from '../../logger';\nimport * as ShopifyErrors from '../../error';\nimport {MissingRequiredArgument} from '../../error';\nimport type {\n  GraphqlClientParams,\n  GraphqlParams,\n  GraphqlQueryOptions,\n  RequestReturn,\n} from '../types';\nimport {ConfigInterface} from '../../base-types';\nimport {Session} from '../../session/session';\nimport {abstractFetch} from '../../../runtime';\nimport {clientLoggerFactory, getUserAgent, throwFailedRequest} from '../common';\n\ninterface GraphqlClientClassParams {\n  config: ConfigInterface;\n}\n\nexport class StorefrontClient {\n  public static config: ConfigInterface;\n\n  readonly session: Session;\n  readonly client: StorefrontApiClient;\n  readonly apiVersion?: ApiVersion;\n\n  constructor(params: GraphqlClientParams) {\n    const config = this.storefrontClass().config;\n\n    if (!config.isCustomStoreApp && !params.session.accessToken) {\n      throw new ShopifyErrors.MissingRequiredArgument(\n        'Missing access token when creating GraphQL client',\n      );\n    }\n\n    if (params.apiVersion) {\n      const message =\n        params.apiVersion === config.apiVersion\n          ? `Storefront client has a redundant API version override to the default ${params.apiVersion}`\n          : `Storefront client overriding default API version ${config.apiVersion} with ${params.apiVersion}`;\n\n      logger(config).debug(message);\n    }\n\n    let accessToken: string | undefined;\n    if (config.isCustomStoreApp) {\n      accessToken = config.privateAppStorefrontAccessToken;\n\n      if (!accessToken) {\n        throw new MissingRequiredArgument(\n          'Custom store apps must set the privateAppStorefrontAccessToken property to call the Storefront API.',\n        );\n      }\n    } else {\n      accessToken = params.session.accessToken;\n\n      if (!accessToken) {\n        throw new MissingRequiredArgument('Session missing access token.');\n      }\n    }\n\n    this.session = params.session;\n    this.apiVersion = params.apiVersion;\n    this.client = createStorefrontApiClient({\n      privateAccessToken: accessToken,\n      apiVersion: this.apiVersion ?? config.apiVersion,\n      storeDomain: this.session.shop,\n      customFetchApi: abstractFetch,\n      logger: clientLoggerFactory(config),\n      clientName: getUserAgent(config),\n    });\n  }\n\n  public async query<T = undefined>(\n    params: GraphqlParams,\n  ): Promise<RequestReturn<T>> {\n    logger(this.storefrontClass().config).deprecated(\n      '12.0.0',\n      'The query method is deprecated, and was replaced with the request method.\\n' +\n        'See the migration guide: https://github.com/Shopify/shopify-app-js/blob/main/packages/apps/shopify-api/docs/migrating-to-v9.md#using-the-new-clients.',\n    );\n\n    if (\n      (typeof params.data === 'string' && params.data.length === 0) ||\n      Object.entries(params.data).length === 0\n    ) {\n      throw new ShopifyErrors.MissingRequiredArgument('Query missing.');\n    }\n\n    let operation: string;\n    let variables: Record<string, any> | undefined;\n    if (typeof params.data === 'string') {\n      operation = params.data;\n    } else {\n      operation = params.data.query;\n      variables = params.data.variables;\n    }\n\n    const headers = Object.fromEntries(\n      Object.entries(params?.extraHeaders ?? {}).map(([key, value]) => [\n        key,\n        Array.isArray(value) ? value.join(', ') : value.toString(),\n      ]),\n    );\n\n    const response = await this.request<T>(operation, {\n      headers,\n      retries: params.tries ? params.tries - 1 : undefined,\n      variables,\n    });\n\n    return {body: response as T, headers: {}};\n  }\n\n  public async request<\n    T = undefined,\n    Operation extends keyof Operations = string,\n    Operations extends StorefrontOperations = StorefrontOperations,\n  >(\n    operation: Operation,\n    options?: GraphqlQueryOptions<Operation, Operations>,\n  ): Promise<\n    ClientResponse<T extends undefined ? ReturnData<Operation, Operations> : T>\n  > {\n    const response = await this.client.request<T, Operation>(operation, {\n      apiVersion: this.apiVersion || this.storefrontClass().config.apiVersion,\n      ...(options as ApiClientRequestOptions<Operation, StorefrontOperations>),\n    });\n\n    if (response.errors) {\n      const fetchResponse = response.errors.response;\n\n      throwFailedRequest(response, (options?.retries ?? 0) > 0, fetchResponse);\n    }\n\n    return response;\n  }\n\n  private storefrontClass() {\n    return this.constructor as typeof StorefrontClient;\n  }\n}\n\nexport function storefrontClientClass(params: GraphqlClientClassParams) {\n  const {config} = params;\n  class NewStorefrontClient extends StorefrontClient {\n    public static config = config;\n  }\n\n  Reflect.defineProperty(NewStorefrontClient, 'name', {\n    value: 'StorefrontClient',\n  });\n\n  return NewStorefrontClient as typeof StorefrontClient;\n}\n", "import {ConfigInterface} from '../../base-types';\nimport * as ShopifyErrors from '../../error';\nimport {graphqlClientClass} from '../admin';\n\nimport {GraphqlProxy} from './types';\n\nexport function graphqlProxy(config: ConfigInterface): GraphqlProxy {\n  return async ({session, rawBody}) => {\n    if (!session.accessToken) {\n      throw new ShopifyErrors.InvalidSession(\n        'Cannot proxy query. Session not authenticated.',\n      );\n    }\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    let query: string;\n    let variables: Record<string, any> | undefined;\n    if (typeof rawBody === 'string') {\n      query = rawBody;\n    } else {\n      query = rawBody.query;\n      variables = rawBody.variables;\n    }\n\n    if (!query) {\n      throw new ShopifyErrors.MissingRequiredArgument('Query missing.');\n    }\n\n    const response = await client.request(query, {variables});\n\n    return {body: response, headers: {}};\n  };\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {restClientClass, graphqlClientClass} from './admin';\nimport {storefrontClientClass} from './storefront';\nimport {graphqlProxy} from './graphql_proxy/graphql_proxy';\nimport {ShopifyClients} from './types';\n\nexport type {ShopifyClients} from './types';\n\nexport function clientClasses(config: ConfigInterface): ShopifyClients {\n  return {\n    // We don't pass in the HttpClient because the RestClient inherits from it, and goes through the same setup process\n    Rest: restClientClass({config}),\n    Graphql: graphqlClientClass({config}),\n    Storefront: storefrontClientClass({config}),\n    graphqlProxy: graphqlProxy(config),\n  };\n}\n", "export default class ProcessedQuery {\n  static stringify(keyValuePairs?: Record<string, any>): string {\n    if (!keyValuePairs || Object.keys(keyValuePairs).length === 0) return '';\n\n    return new ProcessedQuery().putAll(keyValuePairs).stringify();\n  }\n\n  processedQuery: URLSearchParams;\n\n  constructor() {\n    this.processedQuery = new URLSearchParams();\n  }\n\n  putAll(keyValuePairs: Record<string, any>): ProcessedQuery {\n    Object.entries(keyValuePairs).forEach(([key, value]: [string, any]) =>\n      this.put(key, value),\n    );\n    return this;\n  }\n\n  put(key: string, value: any): void {\n    if (Array.isArray(value)) {\n      this.putArray(key, value);\n    } else if (value?.constructor === Object) {\n      this.putObject(key, value);\n    } else {\n      this.putSimple(key, value);\n    }\n  }\n\n  putArray(key: string, value: (string | number)[]): void {\n    value.forEach((arrayValue) =>\n      this.processedQuery.append(`${key}[]`, `${arrayValue}`),\n    );\n  }\n\n  putObject(key: string, value: object): void {\n    Object.entries(value).forEach(\n      ([entry, entryValue]: [string, string | number]) => {\n        this.processedQuery.append(`${key}[${entry}]`, `${entryValue}`);\n      },\n    );\n  }\n\n  putSimple(key: string, value: string | number): void {\n    this.processedQuery.append(key, `${value}`);\n  }\n\n  stringify(omitQuestionMark = false): string {\n    const queryString = this.processedQuery.toString();\n    return omitQuestionMark ? queryString : `?${queryString}`;\n  }\n}\n", "import * as ShopifyErrors from '../../error';\n\nexport type SafeCompare = (\n  strA: string | Record<string, string> | string[] | number[],\n  strB: string | Record<string, string> | string[] | number[],\n) => boolean;\n\nexport const safeCompare: SafeCompare = (strA, strB) => {\n  if (typeof strA === typeof strB) {\n    const enc = new TextEncoder();\n    const buffA = enc.encode(JSON.stringify(strA));\n    const buffB = enc.encode(JSON.stringify(strB));\n\n    if (buffA.length === buffB.length) {\n      return timingSafeEqual(buffA, buffB);\n    }\n  } else {\n    throw new ShopifyErrors.SafeCompareError(\n      `Mismatched data types provided: ${typeof strA} and ${typeof strB}`,\n    );\n  }\n  return false;\n};\n\n// Buffer must be same length for this function to be secure.\nfunction timingSafeEqual(bufA: ArrayBuffer, bufB: ArrayBuffer): boolean {\n  const viewA = new Uint8Array(bufA);\n  const viewB = new Uint8Array(bufB);\n  let out = 0;\n  for (let i = 0; i < viewA.length; i++) {\n    out |= viewA[i] ^ viewB[i];\n  }\n  return out === 0;\n}\n", "import {logger} from '../logger';\nimport {ShopifyHeader} from '../types';\nimport {\n  AdapterArgs,\n  abstractConvertRequest,\n  getHeader,\n} from '../../runtime/http';\nimport {ConfigInterface} from '../base-types';\nimport {createSHA256HMAC} from '../../runtime/crypto';\nimport {HashFormat} from '../../runtime/crypto/types';\nimport {AuthQuery} from '../auth/oauth/types';\nimport * as ShopifyErrors from '../error';\nimport {safeCompare} from '../auth/oauth/safe-compare';\n\nimport ProcessedQuery from './processed-query';\nimport {\n  ValidationErrorReason,\n  ValidationInvalid,\n  HmacValidationType,\n  ValidationValid,\n  ValidationErrorReasonType,\n} from './types';\n\nconst HMAC_TIMESTAMP_PERMITTED_CLOCK_TOLERANCE_SEC = 90;\n\nexport type HMACSignator = 'admin' | 'appProxy';\n\nexport interface ValidateParams extends AdapterArgs {\n  /**\n   * The type of validation to perform, either 'flow' or 'webhook'.\n   */\n  type: HmacValidationType;\n  /**\n   * The raw body of the request.\n   */\n  rawBody: string;\n}\n\nfunction stringifyQueryForAdmin(query: AuthQuery): string {\n  const processedQuery = new ProcessedQuery();\n  Object.keys(query)\n    .sort((val1, val2) => val1.localeCompare(val2))\n    .forEach((key: string) => processedQuery.put(key, query[key]));\n\n  return processedQuery.stringify(true);\n}\n\nfunction stringifyQueryForAppProxy(query: AuthQuery): string {\n  return Object.entries(query)\n    .sort(([val1], [val2]) => val1.localeCompare(val2))\n    .reduce((acc, [key, value]) => {\n      return `${acc}${key}=${Array.isArray(value) ? value.join(',') : value}`;\n    }, '');\n}\n\nexport function generateLocalHmac(config: ConfigInterface) {\n  return async (\n    params: AuthQuery,\n    signator: HMACSignator = 'admin',\n  ): Promise<string> => {\n    const {hmac, signature, ...query} = params;\n\n    const queryString =\n      signator === 'admin'\n        ? stringifyQueryForAdmin(query)\n        : stringifyQueryForAppProxy(query);\n\n    return createSHA256HMAC(config.apiSecretKey, queryString, HashFormat.Hex);\n  };\n}\n\nexport function validateHmac(config: ConfigInterface) {\n  return async (\n    query: AuthQuery,\n    {signator}: {signator: HMACSignator} = {signator: 'admin'},\n  ): Promise<boolean> => {\n    if (signator === 'admin' && !query.hmac) {\n      throw new ShopifyErrors.InvalidHmacError(\n        'Query does not contain an HMAC value.',\n      );\n    }\n\n    if (signator === 'appProxy' && !query.signature) {\n      throw new ShopifyErrors.InvalidHmacError(\n        'Query does not contain a signature value.',\n      );\n    }\n\n    validateHmacTimestamp(query);\n\n    const hmac = signator === 'appProxy' ? query.signature : query.hmac;\n    const localHmac = await generateLocalHmac(config)(query, signator);\n\n    return safeCompare(hmac as string, localHmac);\n  };\n}\n\nexport async function validateHmacString(\n  config: ConfigInterface,\n  data: string,\n  hmac: string,\n  format: HashFormat,\n) {\n  const localHmac = await createSHA256HMAC(config.apiSecretKey, data, format);\n\n  return safeCompare(hmac, localHmac);\n}\n\nexport function getCurrentTimeInSec() {\n  return Math.trunc(Date.now() / 1000);\n}\n\nexport function validateHmacFromRequestFactory(config: ConfigInterface) {\n  return async function validateHmacFromRequest({\n    type,\n    rawBody,\n    ...adapterArgs\n  }: ValidateParams): Promise<ValidationInvalid | ValidationValid> {\n    const request = await abstractConvertRequest(adapterArgs);\n    if (!rawBody.length) {\n      return fail(ValidationErrorReason.MissingBody, type, config);\n    }\n    const hmac = getHeader(request.headers, ShopifyHeader.Hmac);\n    if (!hmac) {\n      return fail(ValidationErrorReason.MissingHmac, type, config);\n    }\n    const validHmac = await validateHmacString(\n      config,\n      rawBody,\n      hmac,\n      HashFormat.Base64,\n    );\n    if (!validHmac) {\n      return fail(ValidationErrorReason.InvalidHmac, type, config);\n    }\n\n    return succeed(type, config);\n  };\n}\n\nfunction validateHmacTimestamp(query: AuthQuery) {\n  if (\n    Math.abs(getCurrentTimeInSec() - Number(query.timestamp)) >\n    HMAC_TIMESTAMP_PERMITTED_CLOCK_TOLERANCE_SEC\n  ) {\n    throw new ShopifyErrors.InvalidHmacError(\n      'HMAC timestamp is outside of the tolerance range',\n    );\n  }\n}\n\nasync function fail(\n  reason: ValidationErrorReasonType,\n  type: HmacValidationType,\n  config: ConfigInterface,\n): Promise<ValidationInvalid> {\n  const log = logger(config);\n  await log.debug(`${type} request is not valid`, {reason});\n\n  return {\n    valid: false,\n    reason,\n  };\n}\n\nasync function succeed(\n  type: HmacValidationType,\n  config: ConfigInterface,\n): Promise<ValidationValid> {\n  const log = logger(config);\n  await log.debug(`${type} request is valid`);\n\n  return {\n    valid: true,\n  };\n}\n", "export function decodeHost(host: string): string {\n  return atob(host);\n}\n", "// Converts admin.shopify.com/store/my-shop to my-shop.myshopify.com\nexport function shopAdminUrlToLegacyUrl(shopAdminUrl: string): string | null {\n  const shopUrl = removeProtocol(shopAdminUrl);\n\n  const isShopAdminUrl = shopUrl.split('.')[0] === 'admin';\n\n  if (!isShopAdminUrl) {\n    return null;\n  }\n\n  const regex = new RegExp(`admin\\\\..+/store/([^/]+)`);\n  const matches = shopUrl.match(regex);\n\n  if (matches && matches.length === 2) {\n    const shopName = matches[1];\n    const isSpinUrl = shopUrl.includes('spin.dev/store/');\n    const isLocalUrl = shopUrl.includes('shop.dev/store/');\n\n    if (isSpinUrl) {\n      return spinAdminUrlToLegacyUrl(shopUrl);\n    } else if (isLocalUrl) {\n      return localAdminUrlToLegacyUrl(shopUrl);\n    } else {\n      return `${shopName}.myshopify.com`;\n    }\n  } else {\n    return null;\n  }\n}\n\n// Converts my-shop.myshopify.com to admin.shopify.com/store/my-shop\nexport function legacyUrlToShopAdminUrl(legacyAdminUrl: string): string | null {\n  const shopUrl = removeProtocol(legacyAdminUrl);\n  const regex = new RegExp(`(.+)\\\\.myshopify\\\\.com$`);\n  const matches = shopUrl.match(regex);\n\n  if (matches && matches.length === 2) {\n    const shopName = matches[1];\n    return `admin.shopify.com/store/${shopName}`;\n  } else {\n    const isSpinUrl = shopUrl.endsWith('spin.dev');\n    const isLocalUrl = shopUrl.endsWith('shop.dev');\n    if (isSpinUrl) {\n      return spinLegacyUrlToAdminUrl(shopUrl);\n    } else if (isLocalUrl) {\n      return localLegacyUrlToAdminUrl(shopUrl);\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction spinAdminUrlToLegacyUrl(shopAdminUrl: string) {\n  const spinRegex = new RegExp(`admin\\\\.web\\\\.(.+\\\\.spin\\\\.dev)/store/(.+)`);\n  const spinMatches = shopAdminUrl.match(spinRegex);\n\n  if (spinMatches && spinMatches.length === 3) {\n    const spinUrl = spinMatches[1];\n    const shopName = spinMatches[2];\n    return `${shopName}.shopify.${spinUrl}`;\n  } else {\n    return null;\n  }\n}\n\nfunction localAdminUrlToLegacyUrl(shopAdminUrl: string) {\n  const localRegex = new RegExp(`admin\\\\.shop\\\\.dev/store/(.+)`);\n  const localMatches = shopAdminUrl.match(localRegex);\n\n  if (localMatches && localMatches.length === 2) {\n    const shopName = localMatches[1];\n    return `${shopName}.shop.dev`;\n  } else {\n    return null;\n  }\n}\n\nfunction spinLegacyUrlToAdminUrl(legacyAdminUrl: string) {\n  const spinRegex = new RegExp(`(.+)\\\\.shopify\\\\.(.+\\\\.spin\\\\.dev)`);\n  const spinMatches = legacyAdminUrl.match(spinRegex);\n\n  if (spinMatches && spinMatches.length === 3) {\n    const shopName = spinMatches[1];\n    const spinUrl = spinMatches[2];\n    return `admin.web.${spinUrl}/store/${shopName}`;\n  } else {\n    return null;\n  }\n}\n\nfunction localLegacyUrlToAdminUrl(legacyAdminUrl: string) {\n  const localRegex = new RegExp(`(.+)\\\\.shop\\\\.dev$`);\n  const localMatches = legacyAdminUrl.match(localRegex);\n\n  if (localMatches && localMatches.length === 2) {\n    const shopName = localMatches[1];\n    return `admin.shop.dev/store/${shopName}`;\n  } else {\n    return null;\n  }\n}\nfunction removeProtocol(url: string): string {\n  return url.replace(/^https?:\\/\\//, '').replace(/\\/$/, '');\n}\n", "import {ConfigInterface} from '../base-types';\nimport {InvalidHostError, InvalidShopError} from '../error';\nimport {decodeHost} from '../auth/decode-host';\n\nimport {shopAdminUrlToLegacyUrl} from './shop-admin-url-helper';\n\nexport function sanitizeShop(config: ConfigInterface) {\n  return (shop: string, throwOnInvalid = false): string | null => {\n    let shopUrl = shop;\n    const domainsRegex = [\n      'myshopify\\\\.com',\n      'shopify\\\\.com',\n      'myshopify\\\\.io',\n      'shop\\\\.dev',\n    ];\n    if (config.customShopDomains) {\n      domainsRegex.push(\n        ...config.customShopDomains.map((regex) =>\n          typeof regex === 'string' ? regex : regex.source,\n        ),\n      );\n    }\n\n    const shopUrlRegex = new RegExp(\n      `^[a-zA-Z0-9][a-zA-Z0-9-_]*\\\\.(${domainsRegex.join('|')})[/]*$`,\n    );\n\n    const shopAdminRegex = new RegExp(\n      `^admin\\\\.(${domainsRegex.join('|')})/store/([a-zA-Z0-9][a-zA-Z0-9-_]*)$`,\n    );\n\n    const isShopAdminUrl = shopAdminRegex.test(shopUrl);\n    if (isShopAdminUrl) {\n      shopUrl = shopAdminUrlToLegacyUrl(shopUrl) || '';\n    }\n\n    const sanitizedShop = shopUrlRegex.test(shopUrl) ? shopUrl : null;\n    if (!sanitizedShop && throwOnInvalid) {\n      throw new InvalidShopError('Received invalid shop argument');\n    }\n\n    return sanitizedShop;\n  };\n}\n\nexport function sanitizeHost() {\n  return (host: string, throwOnInvalid = false): string | null => {\n    const base64regex = /^[0-9a-zA-Z+/]+={0,2}$/;\n\n    let sanitizedHost = base64regex.test(host) ? host : null;\n    if (sanitizedHost) {\n      const {hostname} = new URL(`https://${decodeHost(sanitizedHost)}`);\n\n      const originsRegex = [\n        'myshopify\\\\.com',\n        'shopify\\\\.com',\n        'myshopify\\\\.io',\n        'spin\\\\.dev',\n        'shop\\\\.dev',\n      ];\n\n      const hostRegex = new RegExp(`\\\\.(${originsRegex.join('|')})$`);\n      if (!hostRegex.test(hostname)) {\n        sanitizedHost = null;\n      }\n    }\n    if (!sanitizedHost && throwOnInvalid) {\n      throw new InvalidHostError('Received invalid host argument');\n    }\n\n    return sanitizedHost;\n  };\n}\n", "import {\n  AllOperations,\n  ApiClientRequestOptions,\n  SearchParams,\n} from '@shopify/admin-api-client';\n\nimport {Session} from '../session/session';\nimport type {ApiVersion, Method} from '../types';\nimport {Headers} from '../../runtime/http';\n\nimport {GraphqlClient} from './admin/graphql/client';\nimport {StorefrontClient} from './storefront/client';\nimport type {GraphqlProxy} from './graphql_proxy/types';\nimport {RestClient} from './admin/rest/client';\n\nexport * from './admin/types';\nexport * from './graphql_proxy/types';\n\nexport interface ClientArgs {\n  session: Session;\n  apiVersion?: ApiVersion;\n  retries?: number;\n}\n\n/**\n * Headers to be sent with the request.\n */\nexport type HeaderParams = Record<string, string | number | string[]>;\n\n/* eslint-disable @shopify/typescript/prefer-pascal-case-enums */\nexport enum DataType {\n  JSON = 'application/json',\n  GraphQL = 'application/graphql',\n  URLEncoded = 'application/x-www-form-urlencoded',\n}\n\n/* eslint-enable @shopify/typescript/prefer-pascal-case-enums */\n\nexport interface GetRequestParams {\n  /**\n   * The path to the resource, relative to the API version root.\n   */\n  path: string;\n  /**\n   * The type of data expected in the response.\n   */\n  type?: DataType;\n  /**\n   * The request body.\n   */\n  data?: Record<string, any> | string;\n  /**\n   * Query parameters to be sent with the request.\n   */\n  query?: SearchParams;\n  /**\n   * Additional headers to be sent with the request.\n   */\n  extraHeaders?: HeaderParams;\n  /**\n   * The maximum number of times the request can be made if it fails with a throttling or server error.\n   */\n  tries?: number;\n}\n\nexport type PostRequestParams = GetRequestParams & {\n  data: Record<string, any> | string;\n};\n\nexport type PutRequestParams = PostRequestParams;\n\nexport type DeleteRequestParams = GetRequestParams;\n\nexport type RequestParams = (GetRequestParams | PostRequestParams) & {\n  method: Method;\n};\n\nexport interface RequestReturn<T = unknown> {\n  /**\n   * The response body.\n   */\n  body: T;\n  /**\n   * The response headers.\n   */\n  headers: Headers;\n}\n\nexport type GraphqlParams = Omit<PostRequestParams, 'path' | 'type'>;\n\nexport interface GraphqlClientParams {\n  session: Session;\n  apiVersion?: ApiVersion;\n}\n\nexport interface GraphqlQueryOptions<\n  Operation extends keyof Operations,\n  Operations extends AllOperations,\n> {\n  /**\n   * The variables to include in the operation.\n   */\n  variables?: ApiClientRequestOptions<Operation, Operations>['variables'];\n  /**\n   * Additional headers to be sent with the request.\n   */\n  headers?: Record<string, string | number>;\n  /**\n   * The maximum number of times to retry the request if it fails with a throttling or server error.\n   */\n  retries?: number;\n  /**\n   * An optional AbortSignal to cancel the request.\n   */\n  signal?: AbortSignal;\n}\n\nexport {GraphqlClient} from './admin/graphql/client';\nexport {RestClient} from './admin/rest/client';\n\nexport interface ShopifyClients {\n  Rest: typeof RestClient;\n  Graphql: typeof GraphqlClient;\n  Storefront: typeof StorefrontClient;\n  graphqlProxy: GraphqlProxy;\n}\n", "import {logger} from '../logger';\nimport {LogSeverity} from '../types';\nimport {abstractFetch} from '../../runtime';\nimport {ConfigInterface} from '../base-types';\n\nexport function fetchRequestFactory(config: ConfigInterface) {\n  return async function fetchRequest(\n    url: string,\n    options?: RequestInit,\n  ): Promise<Response> {\n    const log = logger(config);\n    const doLog =\n      config.logger.httpRequests && config.logger.level === LogSeverity.Debug;\n\n    if (doLog) {\n      log.debug('Making HTTP request', {\n        method: options?.method || 'GET',\n        url,\n        ...(options?.body && {body: options?.body}),\n      });\n    }\n\n    const response = await abstractFetch(url, options);\n\n    if (doLog) {\n      log.debug('HTTP request completed', {\n        method: options?.method || 'GET',\n        url,\n        status: response.status,\n      });\n    }\n\n    return response;\n  };\n}\n", "import {AdapterArgs} from '../../../runtime/http/types';\n\nexport const SESSION_COOKIE_NAME = 'shopify_app_session';\nexport const STATE_COOKIE_NAME = 'shopify_app_state';\n\nexport interface AuthQuery {\n  [key: string]: string | undefined;\n  hmac?: string;\n  signature?: string;\n}\n\nexport interface BeginParams extends AdapterArgs {\n  /**\n   * The shop domain. For example: `{exampleshop}.myshopify.com`.\n   */\n  shop: string;\n  /**\n   * The path to the callback endpoint, with a leading `/`.\n   * This URL must be allowed in the Partners dashboard, or using the CLI to run your app.\n   */\n  callbackPath: string;\n  /**\n   * Defines if the session is online or offline.\n   * Learn more about [OAuth access modes](https://shopify.dev/docs/apps/auth/oauth/access-modes).\n   */\n  isOnline: boolean;\n}\n\nexport interface CallbackParams extends AdapterArgs {}\n\nexport interface AccessTokenResponse {\n  access_token: string;\n  scope: string;\n}\n\nexport interface OnlineAccessInfo {\n  /**\n   * How long the access token is valid for, in seconds.\n   */\n  expires_in: number;\n  /**\n   * The effective set of scopes for the session.\n   */\n  associated_user_scope: string;\n  /**\n   * The user associated with the access token.\n   */\n  associated_user: OnlineAccessUser;\n}\n\nexport interface OfflineAccessInfo {\n  /**\n   * How long the access token is valid for, in seconds.\n   */\n  expires_in?: number;\n}\n\nexport interface OnlineAccessUser {\n  /**\n   * The user's ID.\n   */\n  id: number;\n  /**\n   * The user's first name.\n   */\n  first_name: string;\n  /**\n   * The user's last name.\n   */\n  last_name: string;\n  /**\n   * The user's email address.\n   */\n  email: string;\n  /**\n   * Whether the user has verified their email address.\n   */\n  email_verified: boolean;\n  /**\n   * Whether the user is the account owner.\n   */\n  account_owner: boolean;\n  /**\n   * The user's locale.\n   */\n  locale: string;\n  /**\n   * Whether the user is a collaborator.\n   */\n  collaborator: boolean;\n}\n\nexport interface OnlineAccessResponse\n  extends AccessTokenResponse,\n    OnlineAccessInfo {}\n\nexport interface OfflineAccessResponse\n  extends AccessTokenResponse,\n    OfflineAccessInfo {}\n", "export type Nonce = () => string;\n\nexport function nonce(): string {\n  const length = 15;\n\n  const bytes = crypto.getRandomValues(new Uint8Array(length));\n\n  const nonce = bytes\n    .map((byte: number) => {\n      return byte % 10;\n    })\n    .join('');\n\n  return nonce;\n}\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nexport class JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nexport class JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n", "import crypto from './webcrypto.js';\nexport default crypto.getRandomValues.bind(crypto);\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'Ed25519': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "export const unprotected = Symbol();\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n            return { name: 'Ed25519' };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.10.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "export function getHMACKey(key: string): Uint8Array {\n  const arrayBuffer = new Uint8Array(key.length);\n  for (let i = 0, keyLen = key.length; i < keyLen; i++) {\n    arrayBuffer[i] = key.charCodeAt(i);\n  }\n\n  return arrayBuffer;\n}\n", "import * as jose from 'jose';\n\nimport {ConfigInterface} from '../base-types';\nimport * as ShopifyErrors from '../error';\nimport {getHMACKey} from '../utils/get-hmac-key';\n\nimport {JwtPayload} from './types';\n\nconst JWT_PERMITTED_CLOCK_TOLERANCE = 10;\n\nexport interface DecodeSessionTokenOptions {\n  checkAudience?: boolean;\n}\n\nexport function decodeSessionToken(config: ConfigInterface) {\n  return async (\n    token: string,\n    {checkAudience = true}: DecodeSessionTokenOptions = {},\n  ): Promise<JwtPayload> => {\n    let payload: JwtPayload;\n    try {\n      payload = (\n        await jose.jwtVerify(token, getHMACKey(config.apiSecretKey), {\n          algorithms: ['HS256'],\n          clockTolerance: JWT_PERMITTED_CLOCK_TOLERANCE,\n        })\n      ).payload as unknown as JwtPayload;\n    } catch (error) {\n      throw new ShopifyErrors.InvalidJwtError(\n        `Failed to parse session token '${token}': ${error.message}`,\n      );\n    }\n\n    // The exp and nbf fields are validated by the JWT library\n\n    if (checkAudience && payload.aud !== config.apiKey) {\n      throw new ShopifyErrors.InvalidJwtError(\n        'Session token had invalid API key',\n      );\n    }\n\n    return payload;\n  };\n}\n", "import {ConfigInterface} from '../base-types';\nimport {SESSION_COOKIE_NAME} from '../auth/oauth/types';\nimport {\n  abstractConvertRequest,\n  Cookies,\n  NormalizedResponse,\n} from '../../runtime/http';\nimport {sanitizeShop} from '../utils/shop-validator';\nimport {logger} from '../logger';\nimport * as ShopifyErrors from '../error';\n\nimport {decodeSessionToken} from './decode-session-token';\nimport type {GetCurrentSessionIdParams} from './types';\nimport {Session} from './session';\n\nexport function getJwtSessionId(config: ConfigInterface) {\n  return (shop: string, userId: string): string => {\n    return `${sanitizeShop(config)(shop, true)}_${userId}`;\n  };\n}\n\nexport function getOfflineId(config: ConfigInterface) {\n  return (shop: string): string => {\n    return `offline_${sanitizeShop(config)(shop, true)}`;\n  };\n}\n\nexport function getCurrentSessionId(config: ConfigInterface) {\n  return async function getCurrentSessionId({\n    isOnline,\n    ...adapterArgs\n  }: GetCurrentSessionIdParams): Promise<string | undefined> {\n    const request = await abstractConvertRequest(adapterArgs);\n\n    const log = logger(config);\n\n    if (config.isEmbeddedApp) {\n      log.debug('App is embedded, looking for session id in JWT payload', {\n        isOnline,\n      });\n\n      const authHeader = request.headers.Authorization;\n      if (authHeader) {\n        const matches = (\n          typeof authHeader === 'string' ? authHeader : authHeader[0]\n        ).match(/^Bearer (.+)$/);\n        if (!matches) {\n          log.error('Missing Bearer token in authorization header', {isOnline});\n\n          throw new ShopifyErrors.MissingJwtTokenError(\n            'Missing Bearer token in authorization header',\n          );\n        }\n\n        const jwtPayload = await decodeSessionToken(config)(matches[1]);\n        const shop = jwtPayload.dest.replace(/^https:\\/\\//, '');\n\n        log.debug('Found valid JWT payload', {shop, isOnline});\n\n        if (isOnline) {\n          return getJwtSessionId(config)(shop, jwtPayload.sub);\n        } else {\n          return getOfflineId(config)(shop);\n        }\n      } else {\n        log.error(\n          'Missing Authorization header review App Bridge configuration',\n          {isOnline},\n        );\n      }\n    } else {\n      log.debug('App is not embedded, looking for session id in cookies', {\n        isOnline,\n      });\n\n      const cookies = new Cookies(request, {} as NormalizedResponse, {\n        keys: [config.apiSecretKey],\n      });\n      return cookies.getAndVerify(SESSION_COOKIE_NAME);\n    }\n\n    return undefined;\n  };\n}\n\nexport function customAppSession(config: ConfigInterface) {\n  return (shop: string): Session => {\n    return new Session({\n      id: '',\n      shop: `${sanitizeShop(config)(shop, true)}`,\n      state: '',\n      isOnline: false,\n    });\n  };\n}\n", "import {Session} from '../../session/session';\nimport {ConfigInterface} from '../../base-types';\nimport {logger} from '../../logger';\nimport {getJwtSessionId, getOfflineId} from '../../session/session-utils';\n\nimport {\n  AccessTokenResponse,\n  OnlineAccessResponse,\n  OnlineAccessInfo,\n  OfflineAccessResponse,\n} from './types';\n\nexport function createSession({\n  config,\n  accessTokenResponse,\n  shop,\n  state,\n}: {\n  config: ConfigInterface;\n  accessTokenResponse: AccessTokenResponse;\n  shop: string;\n  state: string;\n}): Session {\n  const associatedUser = (accessTokenResponse as OnlineAccessResponse)\n    .associated_user;\n  const isOnline = Boolean(associatedUser);\n\n  logger(config).info('Creating new session', {shop, isOnline});\n\n  const getSessionExpiration = (expires_in: number) =>\n    new Date(Date.now() + expires_in * 1000);\n\n  const getOnlineSessionProperties = (responseBody: OnlineAccessResponse) => {\n    const {access_token, scope, ...rest} = responseBody;\n    const sessionId = config.isEmbeddedApp\n      ? getJwtSessionId(config)(\n          shop,\n          `${(rest as OnlineAccessInfo).associated_user.id}`,\n        )\n      : crypto.randomUUID();\n\n    return {\n      id: sessionId,\n      onlineAccessInfo: rest,\n      expires: getSessionExpiration(rest.expires_in),\n    };\n  };\n\n  const getOfflineSessionProperties = (responseBody: OfflineAccessResponse) => {\n    const {expires_in} = responseBody;\n    return {\n      id: getOfflineId(config)(shop),\n      ...(expires_in && {expires: getSessionExpiration(expires_in)}),\n    };\n  };\n\n  return new Session({\n    shop,\n    state,\n    isOnline,\n    accessToken: accessTokenResponse.access_token,\n    scope: accessTokenResponse.scope,\n    ...(isOnline\n      ? getOnlineSessionProperties(accessTokenResponse as OnlineAccessResponse)\n      : getOfflineSessionProperties(\n          accessTokenResponse as OfflineAccessResponse,\n        )),\n  });\n}\n", "import {isbot} from 'isbot';\n\nimport {throwFailedRequest} from '../../clients/common';\nimport ProcessedQuery from '../../utils/processed-query';\nimport {ConfigInterface} from '../../base-types';\nimport * as ShopifyErrors from '../../error';\nimport {validateHmac} from '../../utils/hmac-validator';\nimport {sanitizeShop} from '../../utils/shop-validator';\nimport {Session} from '../../session/session';\nimport {\n  abstractConvertRequest,\n  abstractConvertIncomingResponse,\n  abstractConvertResponse,\n  abstractConvertHeaders,\n  AdapterResponse,\n  AdapterHeaders,\n  Cookies,\n  NormalizedResponse,\n  NormalizedRequest,\n} from '../../../runtime/http';\nimport {logger, ShopifyLogger} from '../../logger';\nimport {DataType} from '../../clients/types';\nimport {fetchRequestFactory} from '../../utils/fetch-request';\n\nimport {\n  SESSION_COOKIE_NAME,\n  STATE_COOKIE_NAME,\n  BeginParams,\n  CallbackParams,\n  AuthQuery,\n  AccessTokenResponse,\n} from './types';\nimport {nonce} from './nonce';\nimport {safeCompare} from './safe-compare';\nimport {createSession} from './create-session';\n\nexport type OAuthBegin = (beginParams: BeginParams) => Promise<AdapterResponse>;\n\nexport interface CallbackResponse<T = AdapterHeaders> {\n  headers: T;\n  session: Session;\n}\n\nexport type OAuthCallback = <T = AdapterHeaders>(\n  callbackParams: CallbackParams,\n) => Promise<CallbackResponse<T>>;\n\ninterface BotLog {\n  request: NormalizedRequest;\n  log: ShopifyLogger;\n  func: string;\n}\n\nconst logForBot = ({request, log, func}: BotLog) => {\n  log.debug(`Possible bot request to auth ${func}: `, {\n    userAgent: request.headers['User-Agent'],\n  });\n};\n\nexport function begin(config: ConfigInterface): OAuthBegin {\n  return async ({\n    shop,\n    callbackPath,\n    isOnline,\n    ...adapterArgs\n  }: BeginParams): Promise<AdapterResponse> => {\n    throwIfCustomStoreApp(\n      config.isCustomStoreApp,\n      'Cannot perform OAuth for private apps',\n    );\n\n    const log = logger(config);\n    log.info('Beginning OAuth', {shop, isOnline, callbackPath});\n\n    const request = await abstractConvertRequest(adapterArgs);\n    const response = await abstractConvertIncomingResponse(adapterArgs);\n\n    let userAgent = request.headers['User-Agent'];\n    if (Array.isArray(userAgent)) {\n      userAgent = userAgent[0];\n    }\n    if (isbot(userAgent)) {\n      logForBot({request, log, func: 'begin'});\n      response.statusCode = 410;\n      return abstractConvertResponse(response, adapterArgs);\n    }\n\n    const cookies = new Cookies(request, response, {\n      keys: [config.apiSecretKey],\n      secure: true,\n    });\n\n    const state = nonce();\n\n    await cookies.setAndSign(STATE_COOKIE_NAME, state, {\n      expires: new Date(Date.now() + 60000),\n      sameSite: 'lax',\n      secure: true,\n      path: callbackPath,\n    });\n\n    const scopes = config.scopes ? config.scopes.toString() : '';\n    const query = {\n      client_id: config.apiKey,\n      scope: scopes,\n      redirect_uri: `${config.hostScheme}://${config.hostName}${callbackPath}`,\n      state,\n      'grant_options[]': isOnline ? 'per-user' : '',\n    };\n    const processedQuery = new ProcessedQuery();\n    processedQuery.putAll(query);\n\n    const cleanShop = sanitizeShop(config)(shop, true)!;\n    const redirectUrl = `https://${cleanShop}/admin/oauth/authorize${processedQuery.stringify()}`;\n    response.statusCode = 302;\n    response.statusText = 'Found';\n    response.headers = {\n      ...response.headers,\n      ...cookies.response.headers!,\n      Location: redirectUrl,\n    };\n\n    log.debug(`OAuth started, redirecting to ${redirectUrl}`, {shop, isOnline});\n\n    return abstractConvertResponse(response, adapterArgs);\n  };\n}\n\nexport function callback(config: ConfigInterface): OAuthCallback {\n  return async function callback<T = AdapterHeaders>({\n    ...adapterArgs\n  }: CallbackParams): Promise<CallbackResponse<T>> {\n    throwIfCustomStoreApp(\n      config.isCustomStoreApp,\n      'Cannot perform OAuth for private apps',\n    );\n\n    const log = logger(config);\n\n    const request = await abstractConvertRequest(adapterArgs);\n\n    const query = new URL(\n      request.url,\n      `${config.hostScheme}://${config.hostName}`,\n    ).searchParams;\n    const shop = query.get('shop')!;\n\n    const response = {} as NormalizedResponse;\n    let userAgent = request.headers['User-Agent'];\n    if (Array.isArray(userAgent)) {\n      userAgent = userAgent[0];\n    }\n    if (isbot(userAgent)) {\n      logForBot({request, log, func: 'callback'});\n      throw new ShopifyErrors.BotActivityDetected(\n        'Invalid OAuth callback initiated by bot',\n      );\n    }\n\n    log.info('Completing OAuth', {shop});\n\n    const cookies = new Cookies(request, response, {\n      keys: [config.apiSecretKey],\n      secure: true,\n    });\n\n    const stateFromCookie = await cookies.getAndVerify(STATE_COOKIE_NAME);\n    cookies.deleteCookie(STATE_COOKIE_NAME);\n    if (!stateFromCookie) {\n      log.error('Could not find OAuth cookie', {shop});\n\n      throw new ShopifyErrors.CookieNotFound(\n        `Cannot complete OAuth process. Could not find an OAuth cookie for shop url: ${shop}`,\n      );\n    }\n\n    const authQuery: AuthQuery = Object.fromEntries(query.entries());\n    if (!(await validQuery({config, query: authQuery, stateFromCookie}))) {\n      log.error('Invalid OAuth callback', {shop, stateFromCookie});\n\n      throw new ShopifyErrors.InvalidOAuthError('Invalid OAuth callback.');\n    }\n\n    log.debug('OAuth request is valid, requesting access token', {shop});\n\n    const body = {\n      client_id: config.apiKey,\n      client_secret: config.apiSecretKey,\n      code: query.get('code'),\n    };\n\n    const cleanShop = sanitizeShop(config)(query.get('shop')!, true)!;\n\n    const postResponse = await fetchRequestFactory(config)(\n      `https://${cleanShop}/admin/oauth/access_token`,\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': DataType.JSON,\n          Accept: DataType.JSON,\n        },\n      },\n    );\n\n    if (!postResponse.ok) {\n      throwFailedRequest(await postResponse.json(), false, postResponse);\n    }\n\n    const session: Session = createSession({\n      accessTokenResponse: await postResponse.json<AccessTokenResponse>(),\n      shop: cleanShop,\n      state: stateFromCookie,\n      config,\n    });\n\n    if (!config.isEmbeddedApp) {\n      await cookies.setAndSign(SESSION_COOKIE_NAME, session.id, {\n        expires: session.expires,\n        sameSite: 'lax',\n        secure: true,\n        path: '/',\n      });\n    }\n\n    return {\n      headers: (await abstractConvertHeaders(\n        cookies.response.headers!,\n        adapterArgs,\n      )) as T,\n      session,\n    };\n  };\n}\n\nasync function validQuery({\n  config,\n  query,\n  stateFromCookie,\n}: {\n  config: ConfigInterface;\n  query: AuthQuery;\n  stateFromCookie: string;\n}): Promise<boolean> {\n  return (\n    (await validateHmac(config)(query)) &&\n    safeCompare(query.state!, stateFromCookie)\n  );\n}\n\nfunction throwIfCustomStoreApp(\n  isCustomStoreApp: boolean,\n  message: string,\n): void {\n  if (isCustomStoreApp) {\n    throw new ShopifyErrors.PrivateAppError(message);\n  }\n}\n", "import * as ShopifyErrors from '../error';\nimport {ConfigInterface} from '../base-types';\nimport {abstractConvertRequest} from '../../runtime/http';\nimport {sanitizeHost} from '../utils/shop-validator';\n\nimport {decodeHost} from './decode-host';\nimport {GetEmbeddedAppUrlParams} from './types';\n\nexport type GetEmbeddedAppUrl = (\n  params: GetEmbeddedAppUrlParams,\n) => Promise<string>;\n\nexport type BuildEmbeddedAppUrl = (host: string) => string;\n\nexport function getEmbeddedAppUrl(config: ConfigInterface): GetEmbeddedAppUrl {\n  return async ({...adapterArgs}: GetEmbeddedAppUrlParams): Promise<string> => {\n    const request = await abstractConvertRequest(adapterArgs);\n\n    if (!request) {\n      throw new ShopifyErrors.MissingRequiredArgument(\n        'getEmbeddedAppUrl requires a request object argument',\n      );\n    }\n\n    if (!request.url) {\n      throw new ShopifyErrors.InvalidRequestError(\n        'Request does not contain a URL',\n      );\n    }\n\n    const url = new URL(request.url, `https://${request.headers.host}`);\n    const host = url.searchParams.get('host');\n\n    if (typeof host !== 'string') {\n      throw new ShopifyErrors.InvalidRequestError(\n        'Request does not contain a host query parameter',\n      );\n    }\n\n    return buildEmbeddedAppUrl(config)(host);\n  };\n}\n\nexport function buildEmbeddedAppUrl(\n  config: ConfigInterface,\n): BuildEmbeddedAppUrl {\n  return (host: string): string => {\n    sanitizeHost()(host, true);\n    const decodedHost = decodeHost(host);\n\n    return `https://${decodedHost}/apps/${config.apiKey}`;\n  };\n}\n", "import {throwFailedRequest} from '../../clients/common';\nimport {decodeSessionToken} from '../../session/decode-session-token';\nimport {sanitizeShop} from '../../utils/shop-validator';\nimport {ConfigInterface} from '../../base-types';\nimport {Session} from '../../session/session';\nimport {DataType} from '../../clients/types';\nimport {fetchRequestFactory} from '../../utils/fetch-request';\n\nimport {createSession} from './create-session';\nimport {AccessTokenResponse} from './types';\n\nexport enum RequestedTokenType {\n  OnlineAccessToken = 'urn:shopify:params:oauth:token-type:online-access-token',\n  OfflineAccessToken = 'urn:shopify:params:oauth:token-type:offline-access-token',\n}\n\nconst TokenExchangeGrantType =\n  'urn:ietf:params:oauth:grant-type:token-exchange';\nconst IdTokenType = 'urn:ietf:params:oauth:token-type:id_token';\n\nexport interface TokenExchangeParams {\n  shop: string;\n  sessionToken: string;\n  requestedTokenType: RequestedTokenType;\n}\n\nexport type TokenExchange = (\n  params: TokenExchangeParams,\n) => Promise<{session: Session}>;\n\nexport function tokenExchange(config: ConfigInterface): TokenExchange {\n  return async ({\n    shop,\n    sessionToken,\n    requestedTokenType,\n  }: TokenExchangeParams) => {\n    await decodeSessionToken(config)(sessionToken);\n\n    const body = {\n      client_id: config.apiKey,\n      client_secret: config.apiSecretKey,\n      grant_type: TokenExchangeGrantType,\n      subject_token: sessionToken,\n      subject_token_type: IdTokenType,\n      requested_token_type: requestedTokenType,\n    };\n\n    const cleanShop = sanitizeShop(config)(shop, true)!;\n\n    const postResponse = await fetchRequestFactory(config)(\n      `https://${cleanShop}/admin/oauth/access_token`,\n      {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': DataType.JSON,\n          Accept: DataType.JSON,\n        },\n      },\n    );\n\n    if (!postResponse.ok) {\n      throwFailedRequest(await postResponse.json(), false, postResponse);\n    }\n\n    return {\n      session: createSession({\n        accessTokenResponse: await postResponse.json<AccessTokenResponse>(),\n        shop: cleanShop,\n        // We need to keep this as an empty string as our template DB schemas have this required\n        state: '',\n        config,\n      }),\n    };\n  };\n}\n", "import {ConfigInterface} from '../../base-types';\nimport {throwFailedRequest} from '../../clients/common';\nimport {DataType} from '../../clients/types';\nimport {Session} from '../../session/session';\nimport {fetchRequestFactory} from '../../utils/fetch-request';\nimport {sanitizeShop} from '../../utils/shop-validator';\n\nimport {createSession} from './create-session';\nimport {AccessTokenResponse} from './types';\n\nexport interface ClientCredentialsParams {\n  shop: string;\n}\n\nconst ClientCredentialsGrantType = 'client_credentials';\n\nexport type ClientCredentials = (\n  params: ClientCredentialsParams,\n) => Promise<{session: Session}>;\n\nexport function clientCredentials(config: ConfigInterface): ClientCredentials {\n  return async ({shop}: ClientCredentialsParams) => {\n    const cleanShop = sanitizeShop(config)(shop, true)!;\n\n    const requestConfig = {\n      method: 'POST',\n      body: JSON.stringify({\n        client_id: config.apiKey,\n        client_secret: config.apiSecretKey,\n        grant_type: ClientCredentialsGrantType,\n      }),\n      headers: {\n        'Content-Type': DataType.JSON,\n        Accept: DataType.JSON,\n      },\n    };\n\n    const postResponse = await fetchRequestFactory(config)(\n      `https://${cleanShop}/admin/oauth/access_token`,\n      requestConfig,\n    );\n\n    const responseData = (await postResponse.json()) as AccessTokenResponse;\n\n    if (!postResponse.ok) {\n      throwFailedRequest(responseData, false, postResponse);\n    }\n\n    return {\n      session: createSession({\n        accessTokenResponse: responseData,\n        shop: cleanShop,\n        // We need to keep this as an empty string as our template DB schemas have this required\n        state: '',\n        config,\n      }),\n    };\n  };\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {OAuthBegin, OAuthCallback, begin, callback} from './oauth/oauth';\nimport {Nonce, nonce} from './oauth/nonce';\nimport {SafeCompare, safeCompare} from './oauth/safe-compare';\nimport {\n  getEmbeddedAppUrl,\n  buildEmbeddedAppUrl,\n  GetEmbeddedAppUrl,\n  BuildEmbeddedAppUrl,\n} from './get-embedded-app-url';\nimport {TokenExchange, tokenExchange} from './oauth/token-exchange';\nimport {ClientCredentials, clientCredentials} from './oauth/client-credentials';\n\nexport {AuthScopes} from './scopes';\n\nexport function shopifyAuth<Config extends ConfigInterface>(\n  config: Config,\n): ShopifyAuth {\n  const shopify = {\n    begin: begin(config),\n    callback: callback(config),\n    nonce,\n    safeCompare,\n    getEmbeddedAppUrl: getEmbeddedAppUrl(config),\n    buildEmbeddedAppUrl: buildEmbeddedAppUrl(config),\n    tokenExchange: tokenExchange(config),\n    clientCredentials: clientCredentials(config),\n  } as ShopifyAuth;\n\n  return shopify;\n}\n\nexport interface ShopifyAuth {\n  begin: OAuthBegin;\n  callback: OAuthCallback;\n  nonce: Nonce;\n  safeCompare: SafeCompare;\n  getEmbeddedAppUrl: GetEmbeddedAppUrl;\n  buildEmbeddedAppUrl: BuildEmbeddedAppUrl;\n  tokenExchange: TokenExchange;\n  clientCredentials: ClientCredentials;\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {decodeSessionToken} from './decode-session-token';\nimport {\n  customAppSession,\n  getCurrentSessionId,\n  getJwtSessionId,\n  getOfflineId,\n} from './session-utils';\n\nexport function shopifySession(config: ConfigInterface) {\n  return {\n    customAppSession: customAppSession(config),\n    getCurrentId: getCurrentSessionId(config),\n    getOfflineId: getOfflineId(config),\n    getJwtSessionId: getJwtSessionId(config),\n    decodeSessionToken: decodeSessionToken(config),\n  };\n}\n\nexport type ShopifySession = ReturnType<typeof shopifySession>;\n", "import {ConfigInterface} from '../base-types';\nimport {ApiVersion} from '../types';\n\nexport function versionCompatible(config: ConfigInterface) {\n  return (\n    referenceVersion: ApiVersion,\n    currentVersion: ApiVersion = config.apiVersion,\n  ): boolean => {\n    // Return true if not using a dated version\n    if (currentVersion === ApiVersion.Unstable) {\n      return true;\n    }\n    const numericVersion = (version: string) =>\n      parseInt(version.replace('-', ''), 10);\n    const current = numericVersion(currentVersion);\n    const reference = numericVersion(referenceVersion);\n    return current >= reference;\n  };\n}\n\nexport function versionPriorTo(config: ConfigInterface) {\n  return (\n    referenceVersion: ApiVersion,\n    currentVersion: ApiVersion = config.apiVersion,\n  ): boolean => {\n    return !versionCompatible(config)(referenceVersion, currentVersion);\n  };\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {sanitizeShop, sanitizeHost} from './shop-validator';\nimport {validateHmac} from './hmac-validator';\nimport {versionCompatible, versionPriorTo} from './version-compatible';\nimport {\n  shopAdminUrlToLegacyUrl,\n  legacyUrlToShopAdminUrl,\n} from './shop-admin-url-helper';\n\nexport function shopifyUtils(config: ConfigInterface) {\n  return {\n    sanitizeShop: sanitizeShop(config),\n    sanitizeHost: sanitizeHost(),\n    validateHmac: validateHmac(config),\n    versionCompatible: versionCompatible(config),\n    versionPriorTo: versionPriorTo(config),\n    shopAdminUrlToLegacyUrl,\n    legacyUrlToShopAdminUrl,\n  };\n}\n\nexport type ShopifyUtils = ReturnType<typeof shopifyUtils>;\n", "import {InvalidDeliveryMethodError} from '../error';\nimport {ConfigInterface} from '../base-types';\nimport {logger} from '../logger';\n\nimport {\n  AddHandlersParams,\n  DeliveryMethod,\n  WebhookHandler,\n  WebhookRegistry,\n} from './types';\n\nexport function registry(): WebhookRegistry {\n  return {};\n}\n\nexport function topicForStorage(topic: string): string {\n  return topic.toUpperCase().replace(/\\/|\\./g, '_');\n}\n\nexport function addHandlers(\n  config: ConfigInterface,\n  webhookRegistry: WebhookRegistry,\n) {\n  return function addHandlers(handlersToAdd: AddHandlersParams) {\n    for (const [topic, handlers] of Object.entries(handlersToAdd)) {\n      const topicKey = topicForStorage(topic);\n\n      if (Array.isArray(handlers)) {\n        for (const handler of handlers) {\n          mergeOrAddHandler(config, webhookRegistry, topicKey, handler);\n        }\n      } else {\n        mergeOrAddHandler(config, webhookRegistry, topicKey, handlers);\n      }\n    }\n  };\n}\n\nexport function getTopicsAdded(webhookRegistry: WebhookRegistry) {\n  return function getTopicsAdded(): string[] {\n    return Object.keys(webhookRegistry);\n  };\n}\n\nexport function getHandlers(webhookRegistry: WebhookRegistry) {\n  return function getHandlers(topic: string): WebhookHandler[] {\n    return webhookRegistry[topicForStorage(topic)] || [];\n  };\n}\n\nexport function handlerIdentifier(\n  config: ConfigInterface,\n  handler: WebhookHandler,\n): string {\n  const prefix = handler.deliveryMethod;\n\n  switch (handler.deliveryMethod) {\n    case DeliveryMethod.Http:\n      return `${prefix}_${addHostToCallbackUrl(config, handler.callbackUrl)}`;\n    case DeliveryMethod.EventBridge:\n      return `${prefix}_${handler.arn}`;\n    case DeliveryMethod.PubSub:\n      return `${prefix}_${handler.pubSubProject}:${handler.pubSubTopic}`;\n    default:\n      throw new InvalidDeliveryMethodError(\n        `Unrecognized delivery method '${(handler as any).deliveryMethod}'`,\n      );\n  }\n}\n\nexport function addHostToCallbackUrl(\n  config: ConfigInterface,\n  callbackUrl: string,\n): string {\n  if (callbackUrl.startsWith('/')) {\n    return `${config.hostScheme}://${config.hostName}${callbackUrl}`;\n  } else {\n    return callbackUrl;\n  }\n}\n\nfunction mergeOrAddHandler(\n  config: ConfigInterface,\n  webhookRegistry: WebhookRegistry,\n  topic: string,\n  handler: WebhookHandler,\n) {\n  const log = logger(config);\n\n  handler.includeFields?.sort();\n  handler.metafieldNamespaces?.sort();\n\n  if (!(topic in webhookRegistry)) {\n    webhookRegistry[topic] = [handler];\n    return;\n  }\n\n  const identifier = handlerIdentifier(config, handler);\n\n  for (const index in webhookRegistry[topic]) {\n    if (!Object.prototype.hasOwnProperty.call(webhookRegistry[topic], index)) {\n      continue;\n    }\n\n    const existingHandler = webhookRegistry[topic][index];\n    const existingIdentifier = handlerIdentifier(config, existingHandler);\n\n    if (identifier !== existingIdentifier) {\n      continue;\n    }\n\n    if (handler.deliveryMethod === DeliveryMethod.Http) {\n      log.info(\n        `Detected multiple handlers for '${topic}', webhooks.process will call them sequentially`,\n      );\n      break;\n    } else {\n      throw new InvalidDeliveryMethodError(\n        `Can only add multiple handlers for a topic when deliveryMethod is Http. Please be sure that you used addHandler method once after creating ShopifyApi instance in your app.  Invalid handler: ${JSON.stringify(\n          handler,\n        )}`,\n      );\n    }\n  }\n\n  webhookRegistry[topic].push(handler);\n}\n", "export function queryTemplate(template: string, params: Record<string, any>) {\n  let query = template;\n\n  Object.entries(params).forEach(([key, value]) => {\n    query = query.replace(`{{${key}}}`, value);\n  });\n\n  return query;\n}\n", "import {graphqlClientClass, GraphqlClient} from '../clients/admin';\nimport {InvalidDeliveryMethodError, ShopifyError} from '../error';\nimport {logger} from '../logger';\nimport {privacyTopics} from '../types';\nimport {ConfigInterface} from '../base-types';\nimport {Session} from '../session/session';\n\nimport {addHostToCallbackUrl, getHandlers, handlerIdentifier} from './registry';\nimport {queryTemplate} from './query-template';\nimport {\n  WebhookRegistry,\n  RegisterReturn,\n  WebhookHandler,\n  WebhookCheckResponse,\n  DeliveryMethod,\n  WebhookCheckResponseNode,\n  WebhookOperation,\n  RegisterResult,\n  RegisterParams,\n} from './types';\n\ninterface RegisterTopicParams {\n  config: ConfigInterface;\n  session: Session;\n  topic: string;\n  existingHandlers: WebhookHandler[];\n  handlers: WebhookHandler[];\n}\n\ninterface RunMutationsParams {\n  config: ConfigInterface;\n  client: GraphqlClient;\n  topic: string;\n  handlers: WebhookHandler[];\n  operation: WebhookOperation;\n}\n\ninterface RunMutationParams {\n  config: ConfigInterface;\n  client: GraphqlClient;\n  topic: string;\n  handler: WebhookHandler;\n  operation: WebhookOperation;\n}\n\nexport function register(\n  config: ConfigInterface,\n  webhookRegistry: WebhookRegistry,\n) {\n  return async function register({\n    session,\n  }: RegisterParams): Promise<RegisterReturn> {\n    const log = logger(config);\n    log.info('Registering webhooks', {shop: session.shop});\n\n    const registerReturn: RegisterReturn = Object.keys(webhookRegistry).reduce(\n      (acc: RegisterReturn, topic) => {\n        acc[topic] = [];\n        return acc;\n      },\n      {},\n    );\n\n    const existingHandlers = await getExistingHandlers(config, session);\n\n    log.debug(\n      `Existing topics: [${Object.keys(existingHandlers).join(', ')}]`,\n      {shop: session.shop},\n    );\n\n    for (const topic in webhookRegistry) {\n      if (!Object.prototype.hasOwnProperty.call(webhookRegistry, topic)) {\n        continue;\n      }\n\n      if (privacyTopics.includes(topic)) {\n        continue;\n      }\n\n      registerReturn[topic] = await registerTopic({\n        config,\n        session,\n        topic,\n        existingHandlers: existingHandlers[topic] || [],\n        handlers: getHandlers(webhookRegistry)(topic),\n      });\n\n      // Remove this topic from the list of existing handlers so we have a list of leftovers\n      delete existingHandlers[topic];\n    }\n\n    // Delete any leftover handlers\n    for (const topic in existingHandlers) {\n      if (!Object.prototype.hasOwnProperty.call(existingHandlers, topic)) {\n        continue;\n      }\n\n      const GraphqlClient = graphqlClientClass({config});\n      const client = new GraphqlClient({session});\n\n      registerReturn[topic] = await runMutations({\n        config,\n        client,\n        topic,\n        handlers: existingHandlers[topic],\n        operation: WebhookOperation.Delete,\n      });\n    }\n\n    return registerReturn;\n  };\n}\n\nasync function getExistingHandlers(\n  config: ConfigInterface,\n  session: Session,\n): Promise<WebhookRegistry> {\n  const GraphqlClient = graphqlClientClass({config});\n  const client = new GraphqlClient({session});\n\n  const existingHandlers: WebhookRegistry = {};\n\n  let hasNextPage: boolean;\n  let endCursor: string | null = null;\n  do {\n    const query = buildCheckQuery(endCursor);\n\n    const response = await client.request<WebhookCheckResponse>(query);\n\n    response.data?.webhookSubscriptions?.edges.forEach(\n      (edge: WebhookCheckResponseNode) => {\n        const handler = buildHandlerFromNode(edge);\n\n        if (!existingHandlers[edge.node.topic]) {\n          existingHandlers[edge.node.topic] = [];\n        }\n\n        existingHandlers[edge.node.topic].push(handler);\n      },\n    );\n\n    endCursor = response.data?.webhookSubscriptions?.pageInfo.endCursor!;\n    hasNextPage = response.data?.webhookSubscriptions?.pageInfo.hasNextPage!;\n  } while (hasNextPage);\n\n  return existingHandlers;\n}\n\nfunction buildCheckQuery(endCursor: string | null) {\n  return queryTemplate(TEMPLATE_GET_HANDLERS, {\n    END_CURSOR: JSON.stringify(endCursor),\n  });\n}\n\nfunction buildHandlerFromNode(edge: WebhookCheckResponseNode): WebhookHandler {\n  const endpoint = edge.node.endpoint;\n\n  let handler: WebhookHandler;\n\n  switch (endpoint.__typename) {\n    case 'WebhookHttpEndpoint':\n      handler = {\n        deliveryMethod: DeliveryMethod.Http,\n        callbackUrl: endpoint.callbackUrl,\n        // This is a dummy for now because we don't really care about it\n        callback: async () => {},\n      };\n      break;\n    case 'WebhookEventBridgeEndpoint':\n      handler = {\n        deliveryMethod: DeliveryMethod.EventBridge,\n        arn: endpoint.arn,\n      };\n      break;\n    case 'WebhookPubSubEndpoint':\n      handler = {\n        deliveryMethod: DeliveryMethod.PubSub,\n        pubSubProject: endpoint.pubSubProject,\n        pubSubTopic: endpoint.pubSubTopic,\n      };\n      break;\n  }\n\n  // Set common fields\n  handler.id = edge.node.id;\n  handler.includeFields = edge.node.includeFields;\n  handler.metafieldNamespaces = edge.node.metafieldNamespaces;\n\n  // Sort the array fields to make them cheaper to compare later on\n  handler.includeFields?.sort();\n  handler.metafieldNamespaces?.sort();\n\n  return handler;\n}\n\nasync function registerTopic({\n  config,\n  session,\n  topic,\n  existingHandlers,\n  handlers,\n}: RegisterTopicParams): Promise<RegisterResult[]> {\n  let registerResults: RegisterResult[] = [];\n\n  const {toCreate, toUpdate, toDelete} = categorizeHandlers(\n    config,\n    existingHandlers,\n    handlers,\n  );\n\n  const GraphqlClient = graphqlClientClass({config});\n  const client = new GraphqlClient({session});\n\n  let operation = WebhookOperation.Create;\n  registerResults = registerResults.concat(\n    await runMutations({config, client, topic, operation, handlers: toCreate}),\n  );\n\n  operation = WebhookOperation.Update;\n  registerResults = registerResults.concat(\n    await runMutations({config, client, topic, operation, handlers: toUpdate}),\n  );\n\n  operation = WebhookOperation.Delete;\n  registerResults = registerResults.concat(\n    await runMutations({config, client, topic, operation, handlers: toDelete}),\n  );\n\n  return registerResults;\n}\n\ntype HandlersByKey = Record<string, WebhookHandler>;\n\nfunction categorizeHandlers(\n  config: ConfigInterface,\n  existingHandlers: WebhookHandler[],\n  handlers: WebhookHandler[],\n) {\n  const handlersByKey = handlers.reduce((acc: HandlersByKey, value) => {\n    acc[handlerIdentifier(config, value)] = value;\n    return acc;\n  }, {});\n  const existingHandlersByKey = existingHandlers.reduce(\n    (acc: HandlersByKey, value) => {\n      acc[handlerIdentifier(config, value)] = value;\n      return acc;\n    },\n    {},\n  );\n\n  const toCreate: HandlersByKey = {...handlersByKey};\n  const toUpdate: HandlersByKey = {};\n  const toDelete: HandlersByKey = {};\n  for (const existingKey in existingHandlersByKey) {\n    if (\n      !Object.prototype.hasOwnProperty.call(existingHandlersByKey, existingKey)\n    ) {\n      continue;\n    }\n\n    const existingHandler = existingHandlersByKey[existingKey];\n    const handler = handlersByKey[existingKey];\n\n    if (existingKey in handlersByKey) {\n      delete toCreate[existingKey];\n\n      if (!areHandlerFieldsEqual(existingHandler, handler)) {\n        toUpdate[existingKey] = handler;\n        toUpdate[existingKey].id = existingHandler.id;\n      }\n    } else {\n      toDelete[existingKey] = existingHandler;\n    }\n  }\n\n  return {\n    toCreate: Object.values(toCreate),\n    toUpdate: Object.values(toUpdate),\n    toDelete: Object.values(toDelete),\n  };\n}\nfunction areHandlerFieldsEqual(\n  arr1: WebhookHandler,\n  arr2: WebhookHandler,\n): boolean {\n  const includeFieldsEqual = arraysEqual(\n    arr1.includeFields || [],\n    arr2.includeFields || [],\n  );\n  const metafieldNamespacesEqual = arraysEqual(\n    arr1.metafieldNamespaces || [],\n    arr2.metafieldNamespaces || [],\n  );\n\n  return includeFieldsEqual && metafieldNamespacesEqual;\n}\n\nfunction arraysEqual(arr1: any[], arr2: any[]): boolean {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nasync function runMutations({\n  config,\n  client,\n  topic,\n  handlers,\n  operation,\n}: RunMutationsParams): Promise<RegisterResult[]> {\n  const registerResults: RegisterResult[] = [];\n\n  for (const handler of handlers) {\n    registerResults.push(\n      await runMutation({config, client, topic, handler, operation}),\n    );\n  }\n\n  return registerResults;\n}\n\nasync function runMutation({\n  config,\n  client,\n  topic,\n  handler,\n  operation,\n}: RunMutationParams): Promise<RegisterResult> {\n  let registerResult: RegisterResult;\n\n  logger(config).debug(`Running webhook mutation`, {topic, operation});\n\n  try {\n    const query = buildMutation(config, topic, handler, operation);\n\n    const result = await client.request(query);\n\n    registerResult = {\n      deliveryMethod: handler.deliveryMethod,\n      success: isSuccess(result, handler, operation),\n      result,\n      operation,\n    };\n  } catch (error) {\n    if (error instanceof InvalidDeliveryMethodError) {\n      registerResult = {\n        deliveryMethod: handler.deliveryMethod,\n        success: false,\n        result: {message: error.message},\n        operation,\n      };\n    } else {\n      throw error;\n    }\n  }\n\n  return registerResult;\n}\n\nfunction buildMutation(\n  config: ConfigInterface,\n  topic: string,\n  handler: WebhookHandler,\n  operation: WebhookOperation,\n): string {\n  const params: Record<string, string> = {};\n\n  let identifier: string;\n  if (handler.id) {\n    identifier = `id: \"${handler.id}\"`;\n  } else {\n    identifier = `topic: ${topic}`;\n  }\n\n  const mutationArguments = {\n    MUTATION_NAME: getMutationName(handler, operation),\n    IDENTIFIER: identifier,\n    MUTATION_PARAMS: '',\n  };\n\n  if (operation !== WebhookOperation.Delete) {\n    switch (handler.deliveryMethod) {\n      case DeliveryMethod.Http:\n        params.callbackUrl = `\"${addHostToCallbackUrl(\n          config,\n          handler.callbackUrl,\n        )}\"`;\n        break;\n      case DeliveryMethod.EventBridge:\n        params.arn = `\"${handler.arn}\"`;\n        break;\n      case DeliveryMethod.PubSub:\n        params.pubSubProject = `\"${handler.pubSubProject}\"`;\n        params.pubSubTopic = `\"${handler.pubSubTopic}\"`;\n        break;\n      default:\n        throw new InvalidDeliveryMethodError(\n          `Unrecognized delivery method '${(handler as any).deliveryMethod}'`,\n        );\n    }\n\n    if (handler.includeFields) {\n      params.includeFields = JSON.stringify(handler.includeFields);\n    }\n    if (handler.metafieldNamespaces) {\n      params.metafieldNamespaces = JSON.stringify(handler.metafieldNamespaces);\n    }\n\n    if (handler.subTopic) {\n      const subTopicString = `subTopic: \"${handler.subTopic}\",`;\n      mutationArguments.MUTATION_PARAMS = subTopicString;\n    }\n\n    const paramsString = Object.entries(params)\n      .map(([key, value]) => `${key}: ${value}`)\n      .join(', ');\n\n    mutationArguments.MUTATION_PARAMS += `webhookSubscription: {${paramsString}}`;\n  }\n\n  return queryTemplate(TEMPLATE_MUTATION, mutationArguments);\n}\n\nfunction getMutationName(\n  handler: WebhookHandler,\n  operation: WebhookOperation,\n): string {\n  switch (operation) {\n    case WebhookOperation.Create:\n      return `${getEndpoint(handler)}Create`;\n    case WebhookOperation.Update:\n      return `${getEndpoint(handler)}Update`;\n    case WebhookOperation.Delete:\n      return 'webhookSubscriptionDelete';\n    default:\n      throw new ShopifyError(`Unrecognized operation '${operation}'`);\n  }\n}\n\nfunction getEndpoint(handler: WebhookHandler): string {\n  switch (handler.deliveryMethod) {\n    case DeliveryMethod.Http:\n      return 'webhookSubscription';\n    case DeliveryMethod.EventBridge:\n      return 'eventBridgeWebhookSubscription';\n    case DeliveryMethod.PubSub:\n      return 'pubSubWebhookSubscription';\n    default:\n      throw new ShopifyError(\n        `Unrecognized delivery method '${(handler as any).deliveryMethod}'`,\n      );\n  }\n}\n\nfunction isSuccess(\n  result: any,\n  handler: WebhookHandler,\n  operation: WebhookOperation,\n): boolean {\n  const mutationName = getMutationName(handler, operation);\n\n  return Boolean(\n    result.data &&\n      result.data[mutationName] &&\n      result.data[mutationName].userErrors.length === 0,\n  );\n}\n\nexport const TEMPLATE_GET_HANDLERS = `query shopifyApiReadWebhookSubscriptions {\n  webhookSubscriptions(\n    first: 250,\n    after: {{END_CURSOR}},\n  ) {\n    edges {\n      node {\n        id\n        topic\n        includeFields\n        metafieldNamespaces\n        endpoint {\n          __typename\n          ... on WebhookHttpEndpoint {\n            callbackUrl\n          }\n          ... on WebhookEventBridgeEndpoint {\n            arn\n          }\n          ... on WebhookPubSubEndpoint {\n            pubSubProject\n            pubSubTopic\n          }\n        }\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}`;\n\nexport const TEMPLATE_MUTATION = `\n  mutation shopifyApiCreateWebhookSubscription {\n    {{MUTATION_NAME}}(\n      {{IDENTIFIER}},\n      {{MUTATION_PARAMS}}\n    ) {\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n", "import {logger} from '../logger';\nimport {validateHmacFromRequestFactory} from '../utils/hmac-validator';\nimport {HmacValidationType, ValidationErrorReason} from '../utils/types';\nimport {\n  abstractConvertRequest,\n  getHeader,\n  Headers,\n  NormalizedRequest,\n} from '../../runtime/http';\nimport {ShopifyHeader} from '../types';\nimport {ConfigInterface} from '../base-types';\n\nimport {\n  WebhookFields,\n  WebhookValidateParams,\n  WebhookValidation,\n  WebhookValidationErrorReason,\n  WebhookValidationMissingHeaders,\n  WebhookValidationValid,\n} from './types';\nimport {topicForStorage} from './registry';\n\nconst OPTIONAL_HANDLER_PROPERTIES = {\n  subTopic: ShopifyHeader.SubTopic,\n};\n\nconst HANDLER_PROPERTIES = {\n  apiVersion: ShopifyHeader.ApiVersion,\n  domain: ShopifyHeader.Domain,\n  hmac: ShopifyHeader.Hmac,\n  topic: ShopifyHeader.Topic,\n  webhookId: ShopifyHeader.WebhookId,\n  ...OPTIONAL_HANDLER_PROPERTIES,\n};\n\nexport function validateFactory(config: ConfigInterface) {\n  return async function validate({\n    rawBody,\n    ...adapterArgs\n  }: WebhookValidateParams): Promise<WebhookValidation> {\n    const request: NormalizedRequest =\n      await abstractConvertRequest(adapterArgs);\n\n    const validHmacResult = await validateHmacFromRequestFactory(config)({\n      type: HmacValidationType.Webhook,\n      rawBody,\n      ...adapterArgs,\n    });\n\n    if (!validHmacResult.valid) {\n      if (validHmacResult.reason === ValidationErrorReason.InvalidHmac) {\n        const log = logger(config);\n        await log.debug(\n          \"Webhook HMAC validation failed. Please note that events manually triggered from a store's Notifications settings will fail this validation. To test this, please use the CLI or trigger the actual event in a development store.\",\n        );\n      }\n      return validHmacResult;\n    }\n\n    return checkWebhookHeaders(request.headers);\n  };\n}\n\nfunction checkWebhookHeaders(\n  headers: Headers,\n): WebhookValidationMissingHeaders | WebhookValidationValid {\n  const missingHeaders: ShopifyHeader[] = [];\n  const entries = Object.entries(HANDLER_PROPERTIES) as [\n    keyof WebhookFields,\n    ShopifyHeader,\n  ][];\n  const headerValues = entries.reduce((acc, [property, headerName]) => {\n    const headerValue = getHeader(headers, headerName);\n    if (headerValue) {\n      acc[property] = headerValue;\n    } else if (!(property in OPTIONAL_HANDLER_PROPERTIES)) {\n      missingHeaders.push(headerName);\n    }\n\n    return acc;\n  }, {} as WebhookFields);\n\n  if (missingHeaders.length) {\n    return {\n      valid: false,\n      reason: WebhookValidationErrorReason.MissingHeaders,\n      missingHeaders,\n    };\n  } else {\n    return {\n      valid: true,\n      ...headerValues,\n      ...(headerValues.subTopic ? {subTopic: headerValues.subTopic} : {}),\n      topic: topicForStorage(headerValues.topic),\n    };\n  }\n}\n", "import {StatusCode} from '../types';\nimport {\n  abstractConvertResponse,\n  AdapterResponse,\n  isOK,\n  NormalizedResponse,\n} from '../../runtime/http';\nimport {ConfigInterface} from '../base-types';\nimport * as ShopifyErrors from '../error';\nimport {logger} from '../logger';\n\nimport {\n  DeliveryMethod,\n  HttpWebhookHandlerWithCallback,\n  WebhookProcessParams,\n  WebhookRegistry,\n  WebhookValidationErrorReason,\n  WebhookValidationInvalid,\n  WebhookValidationMissingHeaders,\n  WebhookValidationValid,\n} from './types';\nimport {validateFactory} from './validate';\n\ninterface HandlerCallResult {\n  statusCode: StatusCode;\n  errorMessage?: string;\n}\n\ninterface ErrorCallResult {\n  statusCode: StatusCode;\n  errorMessage: string;\n}\n\nconst STATUS_TEXT_LOOKUP: Record<string, string> = {\n  [StatusCode.Ok]: 'OK',\n  [StatusCode.BadRequest]: 'Bad Request',\n  [StatusCode.Unauthorized]: 'Unauthorized',\n  [StatusCode.NotFound]: 'Not Found',\n  [StatusCode.InternalServerError]: 'Internal Server Error',\n};\n\nexport function process(\n  config: ConfigInterface,\n  webhookRegistry: WebhookRegistry<HttpWebhookHandlerWithCallback>,\n) {\n  return async function process({\n    context,\n    rawBody,\n    ...adapterArgs\n  }: WebhookProcessParams): Promise<AdapterResponse> {\n    const response: NormalizedResponse = {\n      statusCode: StatusCode.Ok,\n      statusText: STATUS_TEXT_LOOKUP[StatusCode.Ok],\n      headers: {},\n    };\n\n    await logger(config).info('Receiving webhook request');\n\n    const webhookCheck = await validateFactory(config)({\n      rawBody,\n      ...adapterArgs,\n    });\n\n    let errorMessage = 'Unknown error while handling webhook';\n    if (webhookCheck.valid) {\n      const handlerResult = await callWebhookHandlers(\n        config,\n        webhookRegistry,\n        webhookCheck,\n        rawBody,\n        context,\n      );\n\n      response.statusCode = handlerResult.statusCode;\n      if (!isOK(response)) {\n        errorMessage = handlerResult.errorMessage || errorMessage;\n      }\n    } else {\n      const errorResult = await handleInvalidWebhook(config, webhookCheck);\n\n      response.statusCode = errorResult.statusCode;\n      response.statusText = STATUS_TEXT_LOOKUP[response.statusCode];\n      errorMessage = errorResult.errorMessage;\n    }\n\n    const returnResponse = await abstractConvertResponse(response, adapterArgs);\n    if (!isOK(response)) {\n      throw new ShopifyErrors.InvalidWebhookError({\n        message: errorMessage,\n        response: returnResponse,\n      });\n    }\n\n    return Promise.resolve(returnResponse);\n  };\n}\n\nasync function callWebhookHandlers(\n  config: ConfigInterface,\n  webhookRegistry: WebhookRegistry<HttpWebhookHandlerWithCallback>,\n  webhookCheck: WebhookValidationValid,\n  rawBody: string,\n  context: any,\n): Promise<HandlerCallResult> {\n  const log = logger(config);\n  const {hmac: _hmac, valid: _valid, ...loggingContext} = webhookCheck;\n\n  await log.debug(\n    'Webhook request is valid, looking for HTTP handlers to call',\n    loggingContext,\n  );\n\n  const handlers = webhookRegistry[webhookCheck.topic] || [];\n\n  const response: HandlerCallResult = {statusCode: StatusCode.Ok};\n\n  let found = false;\n  for (const handler of handlers) {\n    if (handler.deliveryMethod !== DeliveryMethod.Http) {\n      continue;\n    }\n    if (!handler.callback) {\n      response.statusCode = StatusCode.InternalServerError;\n      response.errorMessage =\n        \"Cannot call webhooks.process with a webhook handler that doesn't have a callback\";\n\n      throw new ShopifyErrors.MissingWebhookCallbackError({\n        message: response.errorMessage,\n        response,\n      });\n    }\n\n    found = true;\n\n    await log.debug('Found HTTP handler, triggering it', loggingContext);\n\n    try {\n      await handler.callback(\n        webhookCheck.topic,\n        webhookCheck.domain,\n        rawBody,\n        webhookCheck.webhookId,\n        webhookCheck.apiVersion,\n        ...(webhookCheck?.subTopic ? webhookCheck.subTopic : ''),\n        context,\n      );\n    } catch (error) {\n      response.statusCode = StatusCode.InternalServerError;\n      response.errorMessage = error.message;\n    }\n  }\n\n  if (!found) {\n    await log.debug('No HTTP handlers found', loggingContext);\n\n    response.statusCode = StatusCode.NotFound;\n    response.errorMessage = `No HTTP webhooks registered for topic ${webhookCheck.topic}`;\n  }\n\n  return response;\n}\n\nasync function handleInvalidWebhook(\n  config: ConfigInterface,\n  webhookCheck: WebhookValidationInvalid,\n): Promise<ErrorCallResult> {\n  const response: ErrorCallResult = {\n    statusCode: StatusCode.InternalServerError,\n    errorMessage: 'Unknown error while handling webhook',\n  };\n\n  switch (webhookCheck.reason) {\n    case WebhookValidationErrorReason.MissingHeaders:\n      response.statusCode = StatusCode.BadRequest;\n      response.errorMessage = `Missing one or more of the required HTTP headers to process webhooks: [${(\n        webhookCheck as WebhookValidationMissingHeaders\n      ).missingHeaders.join(', ')}]`;\n      break;\n    case WebhookValidationErrorReason.MissingBody:\n      response.statusCode = StatusCode.BadRequest;\n      response.errorMessage = 'No body was received when processing webhook';\n      break;\n    case WebhookValidationErrorReason.MissingHmac:\n      response.statusCode = StatusCode.BadRequest;\n      response.errorMessage = `Missing HMAC header in request`;\n      break;\n    case WebhookValidationErrorReason.InvalidHmac:\n      response.statusCode = StatusCode.Unauthorized;\n      response.errorMessage = `Could not validate request HMAC`;\n      break;\n  }\n\n  await logger(config).debug(\n    `Webhook request is invalid, returning ${response.statusCode}: ${response.errorMessage}`,\n  );\n\n  return response;\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {addHandlers, getTopicsAdded, getHandlers, registry} from './registry';\nimport {register} from './register';\nimport {process} from './process';\nimport {validateFactory} from './validate';\nimport {HttpWebhookHandlerWithCallback, WebhookRegistry} from './types';\n\ninterface Webhooks {\n  /**\n   * Add shop-specific webhook handlers to the library registry,\n   * allowing you to register webhooks with Shopify and process HTTP webhook requests from Shopify.\n   * In most cases, you should use app-specific webhooks:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-vs-shop-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, you do not need to use `addHandlers`.\n   *\n   */\n  addHandlers: ReturnType<typeof addHandlers>;\n\n  /**\n   * Fetches all topics that were added to the registry.\n   *\n   * In most cases, you should use app-specific webhooks:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-vs-shop-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, you do not need to use `getTopicsAdded`.\n   *\n   */\n  getTopicsAdded: ReturnType<typeof getTopicsAdded>;\n\n  /**\n   * Fetches the configured handlers for shop-specific webhooks for the given topic.\n   *\n   * In most cases, you should use app-specific webhooks:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-vs-shop-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, you do not need to use `getHandlers`.\n   *\n   */\n  getHandlers: ReturnType<typeof getHandlers>;\n\n  /**\n   * Registers a webhook handler for a given topic.\n   *\n   * In most cases, you should use app-specific webhooks:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-vs-shop-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, you do not need to use `register`.\n   *\n   */\n  register: ReturnType<typeof register>;\n\n  /**\n   * Processes a webhook request.\n   *\n   * In most cases, you should use app-specific webhooks:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-vs-shop-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, you do not need to use `process`.\n   *\n   */\n  process: ReturnType<typeof process>;\n\n  /**\n   * Validates an incoming request for `Http` handlers.\n   *\n   * If the call is invalid, it will return a `valid` field set to `false`.\n   *\n   * `validate` can be used to validate app-specific and shop-specific webhook requests.\n   *\n   */\n  validate: ReturnType<typeof validateFactory>;\n}\n\nexport function shopifyWebhooks(config: ConfigInterface): Webhooks {\n  const webhookRegistry = registry();\n\n  return {\n    addHandlers: addHandlers(config, webhookRegistry),\n    getTopicsAdded: getTopicsAdded(webhookRegistry),\n    getHandlers: getHandlers(webhookRegistry),\n    register: register(config, webhookRegistry),\n    process: process(\n      config,\n      webhookRegistry as WebhookRegistry<HttpWebhookHandlerWithCallback>,\n    ),\n    validate: validateFactory(config),\n  };\n}\n\nexport type ShopifyWebhooks = ReturnType<typeof shopifyWebhooks>;\n", "import {BillingInterval, BillingReplacementBehavior} from '../types';\nimport {Session} from '../session/session';\nimport {FeatureEnabled, FutureFlagOptions} from '../../future/flags';\n\nexport interface BillingConfigPlan {\n  /**\n   * Amount to charge for this plan.\n   */\n  amount: number;\n  /**\n   * Currency code for this plan.\n   */\n  currencyCode: string;\n}\n\nexport interface BillingConfigOneTimePlan extends BillingConfigPlan {\n  /**\n   * Interval for this plan.\n   *\n   * Must be set to `OneTime`.\n   */\n  interval: BillingInterval.OneTime;\n}\n\nexport interface BillingConfigSubscriptionPlanDiscountAmount {\n  /**\n   * The amount to discount.\n   *\n   * Cannot be set if `percentage` is set.\n   */\n  amount: number;\n  /**\n   * The percentage to discount.\n   *\n   * Cannot be set if `amount` is set.\n   */\n  percentage?: never;\n}\n\nexport interface BillingConfigSubscriptionPlanDiscountPercentage {\n  /**\n   * The amount to discount.\n   *\n   * Cannot be set if `percentage` is set.\n   */\n  amount?: never;\n  /**\n   * The percentage to discount.\n   *\n   * Cannot be set if `amount` is set.\n   */\n  percentage: number;\n}\n\nexport interface BillingConfigSubscriptionPlanDiscount {\n  /**\n   * The number of intervals to apply the discount for.\n   */\n  durationLimitInIntervals?: number;\n  /**\n   * The discount to apply.\n   */\n  value:\n    | BillingConfigSubscriptionPlanDiscountAmount\n    | BillingConfigSubscriptionPlanDiscountPercentage;\n}\n\nexport type BillingConfigItem =\n  | BillingConfigOneTimePlan\n  | BillingConfigSubscriptionLineItemPlan;\n\n// Type this as an interface to improve TSDoc support for it.\n\n/**\n * Billing configuration options, indexed by an app-specific plan name.\n */\nexport interface BillingConfig {\n  /**\n   * An individual billing plan.\n   */\n  [plan: string]: BillingConfigItem;\n}\n\nexport type RequestConfigOverrides = Partial<BillingConfigOneTimePlan>;\n\nexport interface BillingConfigLineItem {\n  /**\n   * The amount to charge for this line item.\n   */\n  amount: number;\n  /**\n   * The currency code for this line item.\n   */\n  currencyCode: string;\n}\n\nexport interface BillingConfigRecurringLineItem extends BillingConfigLineItem {\n  /**\n   * The recurring interval for this line item.\n   *\n   * Must be either `Every30Days` or `Annual`.\n   */\n  interval: BillingInterval.Every30Days | BillingInterval.Annual;\n  /**\n   * An optional discount to apply for this line item.\n   */\n  discount?: BillingConfigSubscriptionPlanDiscount;\n}\n\nexport interface BillingConfigUsageLineItem extends BillingConfigLineItem {\n  /**\n   * The usage interval for this line item.\n   *\n   * Must be set to `Usage`.\n   */\n  interval: BillingInterval.Usage;\n  /**\n   * The capped amount or the maximum amount to be charged in the interval.\n   */\n  amount: number;\n  /**\n   * Usage terms for this line item.\n   */\n  terms: string;\n}\n\nexport interface BillingConfigSubscriptionLineItemPlan {\n  /**\n   * The replacement behavior to use for this plan.\n   */\n  replacementBehavior?: BillingReplacementBehavior;\n  /**\n   * How many trial days to give before charging for this plan.\n   */\n  trialDays?: number;\n  /**\n   * The line items for this plan.\n   */\n  lineItems: (BillingConfigRecurringLineItem | BillingConfigUsageLineItem)[];\n}\n\ntype DeepPartial<T> = T extends object\n  ? {[P in keyof T]?: DeepPartial<T[P]>}\n  : T;\nexport type RequestConfigLineItemOverrides =\n  DeepPartial<BillingConfigSubscriptionLineItemPlan>;\n\ninterface BillingCheckParamsNew {\n  /**\n   * The session to use for this check.\n   */\n  session: Session;\n  /**\n   * The plans to accept for this check.\n   */\n  plans?: string[] | string;\n  /**\n   * Whether to include charges that were created on test mode. Test shops and demo shops cannot be charged.\n   */\n  isTest?: boolean;\n}\n\ninterface BillingCheckParamsOld extends BillingCheckParamsNew {\n  /**\n   * The plans to accept for this check.\n   */\n  plans: string[] | string;\n  /**\n   * Whether to return the full response object.\n   */\n  returnObject?: boolean;\n}\n\nexport type BillingCheckParams<\n  Future extends FutureFlagOptions = FutureFlagOptions,\n> =\n  FeatureEnabled<Future, 'unstable_managedPricingSupport'> extends true\n    ? BillingCheckParamsNew\n    : BillingCheckParamsOld;\n\nexport interface BillingCheckResponseObject {\n  /**\n   * Whether the user has an active payment method.\n   */\n  hasActivePayment: boolean;\n  /**\n   * The one-time purchases the shop has.\n   */\n  oneTimePurchases: OneTimePurchase[];\n  /**\n   * The active subscriptions the shop has.\n   */\n  appSubscriptions: AppSubscription[];\n}\n\nexport type BillingCheckResponse<\n  Params extends BillingCheckParams<Future>,\n  Future extends FutureFlagOptions = FutureFlagOptions,\n> =\n  FeatureEnabled<Future, 'unstable_managedPricingSupport'> extends true\n    ? BillingCheckResponseObject\n    : Params extends BillingCheckParamsOld\n      ? Params['returnObject'] extends true\n        ? BillingCheckResponseObject\n        : boolean\n      : never;\n\ntype BillingRequestOverridesType = RequestConfigOverrides &\n  RequestConfigLineItemOverrides;\n\nexport type BillingRequestParams = {\n  /**\n   * The session to use for this request.\n   */\n  session: Session;\n  /**\n   * The plan to request.\n   */\n  plan: string;\n  /**\n   * Whether this is a test purchase.\n   */\n  isTest?: boolean;\n  /**\n   * Override the return URL after the purchase is complete.\n   */\n  returnUrl?: string;\n  /**\n   * Whether to return the full response object.\n   */\n  returnObject?: boolean;\n} & BillingRequestOverridesType;\n\nexport interface BillingRequestResponseObject {\n  /**\n   * The confirmation URL for this request.\n   */\n  confirmationUrl: string;\n  /**\n   * The one-time purchase created by this request.\n   */\n  oneTimePurchase?: OneTimePurchase;\n  /**\n   * The app subscription created by this request.\n   */\n  appSubscription?: AppSubscription;\n}\n\nexport type BillingRequestResponse<Params extends BillingRequestParams> =\n  Params['returnObject'] extends true ? BillingRequestResponseObject : string;\n\nexport interface BillingCancelParams {\n  /**\n   * The session to use for this request.\n   */\n  session: Session;\n  /**\n   * The subscription ID to cancel.\n   */\n  subscriptionId: string;\n  /**\n   * Whether to prorate the cancellation.\n   */\n  prorate?: boolean;\n  /**\n   * Whether to consider test purchases.\n   */\n  isTest?: boolean;\n}\n\nexport interface BillingSubscriptionParams {\n  /**\n   * The session to use for this request.\n   */\n  session: Session;\n}\n\nexport interface AppSubscription {\n  /**\n   * The ID of the app subscription.\n   */\n  id: string;\n  /**\n   * The name of the purchased plan.\n   */\n  name: string;\n  /**\n   * Whether this is a test subscription.\n   */\n  test: boolean;\n  /**\n   * The number of trial days for this subscription.\n   */\n  trialDays: number;\n  /**\n   * The date and time when the subscription was created.\n   */\n  createdAt: string;\n  /**\n   * The date and time when the current period ends.\n   */\n  currentPeriodEnd: string;\n  /**\n   * The return URL for this subscription.\n   */\n  returnUrl: string;\n\n  /*\n   * The line items for this plan.\n   */\n  lineItems: ActiveSubscriptionLineItem[];\n\n  /*\n   * The status of the subscription. [ACTIVE, CANCELLED, PENDING, DECLINED, EXPIRED, FROZEN, ACCEPTED]\n   */\n  status:\n    | 'ACTIVE'\n    | 'CANCELLED'\n    | 'PENDING'\n    | 'DECLINED'\n    | 'EXPIRED'\n    | 'FROZEN'\n    | 'ACCEPTED';\n}\n\nexport interface ActiveSubscriptions {\n  activeSubscriptions: AppSubscription[];\n}\n\nexport interface ActiveSubscriptionLineItem {\n  /*\n   * The ID of the line item.\n   */\n  id: string;\n  /*\n   * The details of the plan.\n   */\n  plan: AppPlan;\n}\n\nexport interface RecurringAppPlan {\n  /*\n   * The interval for this plan is charged on.\n   */\n  interval: BillingInterval.Every30Days | BillingInterval.Annual;\n  /*\n   * The price of the plan.\n   */\n  price: Money;\n  /*\n   * The discount applied to the plan.\n   */\n  discount: AppPlanDiscount;\n}\n\nexport interface UsageAppPlan {\n  /*\n   * The total usage records for interval.\n   */\n  balanceUsed: Money;\n  /*\n   * The capped amount prevents the merchant from being charged for any usage over that amount during a billing period.\n   */\n  cappedAmount: Money;\n  /*\n   * The terms and conditions for app usage pricing.\n   */\n  terms: string;\n}\n\nexport interface Money {\n  amount: number;\n  currencyCode: string;\n}\n\nexport interface AppPlanDiscount {\n  /*\n   * The total number of intervals the discount applies to.\n   */\n  durationLimitInIntervals: number;\n  /*\n   * The remaining number of intervals the discount applies to.\n   */\n  remainingDurationInIntervals: number;\n  /*\n   * The price after the discount is applied.\n   */\n  priceAfterDiscount: Money;\n  /*\n   * The value of the discount applied every billing interval.\n   */\n  value: AppPlanDiscountAmount;\n}\n\nexport interface AppSubscriptionLineItemUpdatePayload {\n  userErrors: string[];\n  confirmationUrl: string;\n  appSubscription: AppSubscription;\n}\n\nexport type UpdateCappedAmountConfirmation = Omit<\n  AppSubscriptionLineItemUpdatePayload,\n  'userErrors'\n>;\n\ntype AppPlanDiscountAmount =\n  | BillingConfigSubscriptionPlanDiscountAmount\n  | BillingConfigSubscriptionPlanDiscountPercentage;\n\nexport interface AppPlan {\n  /*\n   * The pricing details of the plan.\n   */\n  pricingDetails: RecurringAppPlan | UsageAppPlan;\n}\nexport interface OneTimePurchase {\n  /**\n   * The ID of the one-time purchase.\n   */\n  id: string;\n  /**\n   * The name of the purchased plan.\n   */\n  name: string;\n  /**\n   * Whether this is a test purchase.\n   */\n  test: boolean;\n  /*\n   * The status of the subscription. [ACTIVE, CANCELLED, PENDING, DECLINED, EXPIRED, FROZEN, ACCEPTED]\n   */\n  status:\n    | 'ACTIVE'\n    | 'CANCELLED'\n    | 'PENDING'\n    | 'DECLINED'\n    | 'EXPIRED'\n    | 'FROZEN'\n    | 'ACCEPTED';\n}\n\nexport interface BillingCreateUsageRecordParams {\n  /**\n   * The session to use for this request.\n   */\n  session: Session;\n  /**\n   * The description of the usage record.\n   */\n  description: string;\n  /**\n   * The price and currency of the usage record.\n   */\n  price: {\n    /**\n     * The amount to charge for this usage record.\n     */\n    amount: number;\n    /**\n     * The currency code for this usage record.\n     */\n    currencyCode: string;\n  };\n  /**\n   * The subscription line item ID to associate the usage record with.\n   */\n  subscriptionLineItemId?: string;\n  /**\n   * The idempotency key for this request.\n   */\n  idempotencyKey?: string;\n  /**\n   * Whether this is a test charge.\n   * */\n  isTest?: boolean;\n}\n\nexport interface UsageRecord {\n  /**\n   * The ID of the usage record.\n   */\n  id: string;\n  /**\n   * The description of the usage record.\n   */\n  description: string;\n  /**\n   * The price and currency of the usage record.\n   */\n  price: {\n    /**\n     * The amount to charge for this usage record.\n     */\n    amount: number;\n    /**\n     * The currency code for this usage record.\n     */\n    currencyCode: string;\n  };\n  /**\n   * The subscription line item associated with the usage record.\n   */\n  plan: ActiveSubscriptionLineItem;\n  /**\n   * The idempotency key for this request.\n   */\n  idempotencyKey?: string;\n  /**\n   * The subscription line item associated with the usage record.\n   */\n  subscriptionLineItem: AppSubscriptionLineItem;\n}\n\nexport interface AppSubscriptionLineItem {\n  /**\n   * The ID of the subscription line item.\n   */\n  id: string;\n  /**\n   * The plan associated with the subscription line item.\n   */\n  plan: AppPlan;\n}\n\nexport interface BillingUpdateUsageCappedAmountParams {\n  /**\n   * The session to use for this request.\n   */\n  session: Session;\n  /**\n   * The subscription line item ID to update.\n   */\n  subscriptionLineItemId: string;\n  /**\n   * The maximum charge for the usage billing plan.\n   */\n  cappedAmount: {\n    /**\n     * The amount to update.\n     */\n    amount: number;\n    /**\n     * The currency code to update.\n     */\n    currencyCode: string;\n  };\n}\n\ninterface OneTimePurchases {\n  oneTimePurchases: {\n    edges: {\n      node: OneTimePurchase;\n    }[];\n    pageInfo: {\n      endCursor: string;\n      hasNextPage: boolean;\n    };\n  };\n}\n\nexport type CurrentAppInstallation = OneTimePurchases & ActiveSubscriptions;\n\nexport interface CurrentAppInstallations {\n  currentAppInstallation?: CurrentAppInstallation;\n}\n\nexport interface RequestResponse {\n  userErrors: string[];\n  confirmationUrl: string;\n}\n\ninterface AppSubscriptionCreate {\n  userErrors: string[];\n  confirmationUrl: string;\n  appSubscription: AppSubscription;\n}\n\ninterface AppPurchaseOneTimeCreate {\n  userErrors: string[];\n  confirmationUrl: string;\n  oneTimePurchase: OneTimePurchase;\n}\n\nexport interface RecurringPaymentResponse {\n  appSubscriptionCreate?: AppSubscriptionCreate;\n}\n\nexport interface SinglePaymentResponse {\n  appPurchaseOneTimeCreate?: AppPurchaseOneTimeCreate;\n}\n\nexport type RequestResponseData =\n  | AppSubscriptionCreate\n  | AppPurchaseOneTimeCreate;\n\nexport interface SubscriptionResponse {\n  currentAppInstallation?: ActiveSubscriptions;\n}\n\nexport interface CancelResponse {\n  appSubscriptionCancel?: {\n    appSubscription: AppSubscription;\n    userErrors: string[];\n  };\n}\n\nexport interface UsageRecordCreateResponse {\n  appUsageRecordCreate?: {\n    appUsageRecord: UsageRecord;\n    userErrors: string[];\n  };\n}\n\nexport interface BillingUpdateUsageCappedAmountResponse {\n  appSubscriptionLineItemUpdate?: AppSubscriptionLineItemUpdatePayload;\n}\n\nexport type BillingCheck<Future extends FutureFlagOptions> = <\n  Params extends BillingCheckParams<Future>,\n>(\n  params: Params,\n) => Promise<BillingCheckResponse<Params, Future>>;\n\nexport type BillingRequest = <Params extends BillingRequestParams>(\n  params: Params,\n) => Promise<BillingRequestResponse<Params>>;\n\nexport type BillingCancel = (\n  params: BillingCancelParams,\n) => Promise<AppSubscription>;\n\nexport type BillingSubscriptions = (\n  params: BillingSubscriptionParams,\n) => Promise<ActiveSubscriptions>;\n\nexport type BillingCreateUsageRecord = (\n  params: BillingCreateUsageRecordParams,\n) => Promise<UsageRecord>;\n\nexport type BillingUpdateUsageCappedAmount = (\n  params: BillingUpdateUsageCappedAmountParams,\n) => Promise<UpdateCappedAmountConfirmation>;\n\nexport interface ShopifyBilling<Future extends FutureFlagOptions> {\n  check: BillingCheck<Future>;\n  request: BillingRequest;\n  cancel: BillingCancel;\n  subscriptions: BillingSubscriptions;\n  createUsageRecord: BillingCreateUsageRecord;\n  updateUsageCappedAmount: BillingUpdateUsageCappedAmount;\n}\n\nexport const APP_SUBSCRIPTION_FRAGMENT = `\n  fragment AppSubscriptionFragment on AppSubscription {\n    id\n    name\n    test\n    status\n    trialDays\n    createdAt\n    currentPeriodEnd\n    returnUrl\n    lineItems {\n      id\n      plan {\n        pricingDetails {\n          ... on AppRecurringPricing {\n            price {\n              amount\n              currencyCode\n            }\n            interval\n            discount {\n              durationLimitInIntervals\n              remainingDurationInIntervals\n              priceAfterDiscount {\n                amount\n              }\n              value {\n                ... on AppSubscriptionDiscountAmount {\n                  amount {\n                    amount\n                    currencyCode\n                  }\n                }\n                ... on AppSubscriptionDiscountPercentage {\n                  percentage\n                }\n              }\n            }\n          }\n          ... on AppUsagePricing {\n            balanceUsed {\n              amount\n              currencyCode\n            }\n            cappedAmount {\n              amount\n              currencyCode\n            }\n            terms\n          }\n        }\n      }\n    }\n  }\n`;\n", "import {ActiveSubscriptionLineItem} from './types';\n\n/**\n * Converts string amounts to numbers in Money type objects\n */\nexport function convertMoneyAmount(data: any) {\n  if (!data) return data;\n\n  convertAppUsagePricingMoney(data);\n  convertAppRecurringPricingMoney(data);\n  convertAppDiscountMoney(data);\n\n  return data;\n}\n\nexport function convertAppRecurringPricingMoney(data: any): void {\n  if (!data) return;\n\n  if (data.price?.amount && typeof data.price.amount === 'string') {\n    data.price.amount = parseFloat(data.price.amount);\n  }\n}\n\nexport function convertAppDiscountMoney(data: any): void {\n  if (!data) return;\n\n  if (\n    data.discount?.priceAfterDiscount?.amount &&\n    typeof data.discount.priceAfterDiscount.amount === 'string'\n  ) {\n    data.discount.priceAfterDiscount.amount = parseFloat(\n      data.discount.priceAfterDiscount.amount,\n    );\n  }\n\n  if (\n    data.discount?.value?.amount?.amount &&\n    typeof data.discount.value.amount.amount === 'string'\n  ) {\n    data.discount.value.amount.amount = parseFloat(\n      data.discount.value.amount.amount,\n    );\n  }\n}\n\nexport function convertAppUsagePricingMoney(data: any): void {\n  if (!data) return;\n\n  if (data.balanceUsed?.amount && typeof data.balanceUsed.amount === 'string') {\n    data.balanceUsed.amount = parseFloat(data.balanceUsed.amount);\n  }\n\n  if (\n    data.cappedAmount?.amount &&\n    typeof data.cappedAmount.amount === 'string'\n  ) {\n    data.cappedAmount.amount = parseFloat(data.cappedAmount.amount);\n  }\n}\n\n/**\n * Converts Money amounts in line items\n */\nexport function convertLineItems(lineItems: ActiveSubscriptionLineItem[]) {\n  return lineItems.map((item) => {\n    if (item.plan?.pricingDetails) {\n      item.plan.pricingDetails = convertMoneyAmount(item.plan.pricingDetails);\n    }\n    return item;\n  });\n}\n", "import {FutureFlagOptions} from '../../future/flags';\nimport {ConfigInterface} from '../base-types';\nimport {graphqlClientClass, GraphqlClient} from '../clients/admin';\nimport {BillingError} from '../error';\n\nimport {\n  AppSubscription,\n  BillingCheck,\n  BillingCheckParams,\n  BillingCheckResponse,\n  BillingCheckResponseObject,\n  CurrentAppInstallation,\n  CurrentAppInstallations,\n  OneTimePurchase,\n  APP_SUBSCRIPTION_FRAGMENT,\n} from './types';\nimport {convertLineItems} from './utils';\n\ninterface SubscriptionMeetsCriteriaParams {\n  subscription: AppSubscription;\n  isTest?: boolean;\n  plans?: string | string[];\n}\n\ninterface PurchaseMeetsCriteriaParams {\n  purchase: OneTimePurchase;\n  isTest?: boolean;\n  plans?: string | string[];\n}\n\ninterface InternalParams {\n  client: GraphqlClient;\n  isTest?: boolean;\n  plans?: string | string[];\n}\n\nexport function check<\n  Config extends ConfigInterface,\n  Future extends FutureFlagOptions = Config['future'],\n>(config: Config): BillingCheck<Future> {\n  return async function check<Params extends BillingCheckParams<Future>>(\n    params: Params,\n  ): Promise<BillingCheckResponse<Params, Future>> {\n    if (!config.future?.unstable_managedPricingSupport && !config.billing) {\n      throw new BillingError({\n        message: 'Attempted to look for purchases without billing configs',\n        errorData: [],\n      });\n    }\n\n    const {session, isTest = true, plans} = params;\n    const returnObject =\n      (params as BillingCheckParams<{unstable_managedPricingSupport: false}>)\n        .returnObject ?? false;\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    const payments = await assessPayments({client, isTest, plans});\n\n    if (config.future?.unstable_managedPricingSupport || returnObject) {\n      return payments as BillingCheckResponse<Params, Future>;\n    } else {\n      return payments.hasActivePayment as BillingCheckResponse<Params, Future>;\n    }\n  };\n}\n\nexport async function assessPayments({\n  client,\n  isTest,\n  plans,\n}: InternalParams): Promise<BillingCheckResponseObject> {\n  const returnValue: BillingCheckResponseObject = {\n    hasActivePayment: false,\n    oneTimePurchases: [],\n    appSubscriptions: [],\n  };\n\n  let installation: CurrentAppInstallation;\n  let endCursor: string | null = null;\n  do {\n    const currentInstallations = await client.request<CurrentAppInstallations>(\n      HAS_PAYMENTS_QUERY,\n      {variables: {endCursor}},\n    );\n\n    installation = currentInstallations.data?.currentAppInstallation!;\n    installation.activeSubscriptions.forEach((subscription) => {\n      if (subscriptionMeetsCriteria({subscription, isTest, plans})) {\n        returnValue.hasActivePayment = true;\n        if (subscription.lineItems) {\n          subscription.lineItems = convertLineItems(subscription.lineItems);\n        }\n        returnValue.appSubscriptions.push(subscription);\n      }\n    });\n    installation.oneTimePurchases.edges.forEach(({node: purchase}) => {\n      if (purchaseMeetsCriteria({purchase, isTest, plans})) {\n        returnValue.hasActivePayment = true;\n        returnValue.oneTimePurchases.push(purchase);\n      }\n    });\n\n    endCursor = installation.oneTimePurchases.pageInfo.endCursor;\n  } while (installation?.oneTimePurchases.pageInfo.hasNextPage);\n\n  return returnValue;\n}\n\nfunction subscriptionMeetsCriteria({\n  subscription,\n  isTest,\n  plans,\n}: SubscriptionMeetsCriteriaParams): boolean {\n  return (\n    (typeof plans === 'undefined' || plans.includes(subscription.name)) &&\n    (isTest || !subscription.test)\n  );\n}\n\nfunction purchaseMeetsCriteria({\n  purchase,\n  isTest,\n  plans,\n}: PurchaseMeetsCriteriaParams): boolean {\n  return (\n    (typeof plans === 'undefined' || plans.includes(purchase.name)) &&\n    (isTest || !purchase.test) &&\n    purchase.status === 'ACTIVE'\n  );\n}\n\nconst HAS_PAYMENTS_QUERY = `\n  ${APP_SUBSCRIPTION_FRAGMENT}\n  query appSubscription($endCursor: String) {\n    currentAppInstallation {\n      activeSubscriptions {\n        ...AppSubscriptionFragment\n      }\n      oneTimePurchases(first: 250, sortKey: CREATED_AT, after: $endCursor) {\n        edges {\n          node {\n            id\n            name\n            test\n            status\n          }\n        }\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n      }\n    }\n  }\n`;\n", "import {ConfigInterface, ConfigParams} from '../base-types';\nimport {BillingInterval} from '../types';\nimport {BillingError} from '../error';\nimport {buildEmbeddedAppUrl} from '../auth/get-embedded-app-url';\nimport {GraphqlClient, graphqlClientClass} from '../clients/admin';\nimport {hashString} from '../../runtime/crypto';\nimport {HashFormat} from '../../runtime/crypto/types';\nimport {FutureFlagOptions} from '../../future/flags';\n\nimport {\n  BillingConfigOneTimePlan,\n  BillingRequestParams,\n  BillingRequestResponse,\n  RecurringPaymentResponse,\n  RequestResponseData,\n  SinglePaymentResponse,\n  BillingConfigSubscriptionLineItemPlan,\n  RequestConfigLineItemOverrides,\n  BillingRequest,\n  APP_SUBSCRIPTION_FRAGMENT,\n} from './types';\n\nconst RECURRING_PURCHASE_MUTATION = `\n  ${APP_SUBSCRIPTION_FRAGMENT}\n  mutation AppSubscriptionCreate(\n    $name: String!\n    $returnUrl: URL!\n    $test: Boolean\n    $trialDays: Int\n    $replacementBehavior: AppSubscriptionReplacementBehavior\n    $lineItems: [AppSubscriptionLineItemInput!]!\n  ) {\n    appSubscriptionCreate(\n      name: $name\n      returnUrl: $returnUrl\n      test: $test\n      trialDays: $trialDays\n      replacementBehavior: $replacementBehavior\n      lineItems: $lineItems\n    ) {\n      appSubscription {\n        ...AppSubscriptionFragment\n      }\n      confirmationUrl\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nconst ONE_TIME_PURCHASE_MUTATION = `\n  mutation test(\n    $name: String!\n    $price: MoneyInput!\n    $returnUrl: URL!\n    $test: Boolean\n  ) {\n    appPurchaseOneTimeCreate(\n      name: $name\n      price: $price\n      returnUrl: $returnUrl\n      test: $test\n    ) {\n      appPurchaseOneTime {\n        id\n        name\n        test\n      }\n      confirmationUrl\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\ninterface RequestInternalParams {\n  client: GraphqlClient;\n  plan: string;\n  returnUrl: string;\n  isTest: boolean;\n}\n\ninterface RequestOneTimePaymentInternalParams extends RequestInternalParams {\n  billingConfig: BillingConfigOneTimePlan;\n}\n\ninterface RequestSubscriptionParams extends RequestInternalParams {\n  billingConfig: BillingConfigSubscriptionLineItemPlan;\n}\n\nexport function request<\n  Config extends ConfigInterface<Params>,\n  Params extends ConfigParams<any, Future>,\n  Future extends FutureFlagOptions,\n>(config: Config): BillingRequest {\n  return async function <Params extends BillingRequestParams>({\n    session,\n    plan,\n    isTest = true,\n    returnUrl: returnUrlParam,\n    returnObject = false,\n    ...overrides\n  }: Params): Promise<BillingRequestResponse<Params>> {\n    if (!config.billing || !config.billing[plan]) {\n      throw new BillingError({\n        message: `Could not find plan ${plan} in billing settings`,\n        errorData: [],\n      });\n    }\n\n    const billingConfig = {\n      ...config.billing[plan],\n    };\n    const filteredOverrides = Object.fromEntries(\n      Object.entries(overrides).filter(([_key, value]) => value !== undefined),\n    );\n\n    const cleanShopName = session.shop.replace('.myshopify.com', '');\n    const embeddedAppUrl = buildEmbeddedAppUrl(config)(\n      hashString(`admin.shopify.com/store/${cleanShopName}`, HashFormat.Base64),\n    );\n\n    const appUrl = `${config.hostScheme}://${config.hostName}?shop=${session.shop}`;\n\n    // if provided a return URL, use it, otherwise use the embedded app URL or hosted app URL\n    const returnUrl =\n      returnUrlParam || (config.isEmbeddedApp ? embeddedAppUrl : appUrl);\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    function isLineItemPlan(\n      billingConfig: any,\n    ): billingConfig is BillingConfigSubscriptionLineItemPlan {\n      return 'lineItems' in billingConfig;\n    }\n\n    function isOneTimePlan(\n      billingConfig: any,\n    ): billingConfig is BillingConfigOneTimePlan {\n      return billingConfig.interval === BillingInterval.OneTime;\n    }\n\n    let data: RequestResponseData;\n    if (isLineItemPlan(billingConfig)) {\n      const mergedBillingConfigs = mergeBillingConfigs(\n        billingConfig,\n        filteredOverrides,\n      );\n      const mutationRecurringResponse = await requestSubscriptionPayment({\n        billingConfig: mergedBillingConfigs,\n        plan,\n        client,\n        returnUrl,\n        isTest,\n      });\n\n      data = mutationRecurringResponse.appSubscriptionCreate!;\n    } else if (isOneTimePlan(billingConfig)) {\n      const mutationOneTimeResponse = await requestSinglePayment({\n        billingConfig: {...billingConfig, ...filteredOverrides},\n        plan,\n        client,\n        returnUrl,\n        isTest,\n      });\n      data = mutationOneTimeResponse.appPurchaseOneTimeCreate!;\n    } else {\n      throw new BillingError({\n        message: `Invalid billing configuration for plan ${plan}. Must be either a one-time plan or a subscription plan with line items.`,\n        errorData: [],\n      });\n    }\n\n    if (data.userErrors?.length) {\n      throw new BillingError({\n        message: 'Error while billing the store',\n        errorData: data.userErrors,\n      });\n    }\n\n    if (returnObject) {\n      return data as Omit<\n        RequestResponseData,\n        'userErrors'\n      > as BillingRequestResponse<Params>;\n    } else {\n      return data.confirmationUrl as BillingRequestResponse<Params>;\n    }\n  };\n}\n\nasync function requestSubscriptionPayment({\n  billingConfig,\n  plan,\n  client,\n  returnUrl,\n  isTest,\n}: RequestSubscriptionParams): Promise<RecurringPaymentResponse> {\n  const lineItems = billingConfig.lineItems.map((item) => {\n    if (\n      item.interval === BillingInterval.Every30Days ||\n      item.interval === BillingInterval.Annual\n    ) {\n      const appRecurringPricingDetails: any = {\n        interval: item.interval,\n        price: {\n          amount: item.amount,\n          currencyCode: item.currencyCode,\n        },\n      };\n\n      if (item.discount) {\n        appRecurringPricingDetails.discount = {\n          durationLimitInIntervals: item.discount.durationLimitInIntervals,\n          value: {\n            amount: item.discount.value.amount,\n            percentage: item.discount.value.percentage,\n          },\n        };\n      }\n\n      return {\n        plan: {\n          appRecurringPricingDetails,\n        },\n      };\n    } else if (item.interval === BillingInterval.Usage) {\n      const appUsagePricingDetails = {\n        terms: item.terms,\n        cappedAmount: {\n          amount: item.amount,\n          currencyCode: item.currencyCode,\n        },\n      };\n\n      return {\n        plan: {\n          appUsagePricingDetails,\n        },\n      };\n    } else {\n      throw new BillingError({\n        message: 'Invalid interval provided',\n        errorData: [item],\n      });\n    }\n  });\n\n  const mutationResponse = await client.request<RecurringPaymentResponse>(\n    RECURRING_PURCHASE_MUTATION,\n    {\n      variables: {\n        name: plan,\n        trialDays: billingConfig.trialDays,\n        replacementBehavior: billingConfig.replacementBehavior,\n        returnUrl,\n        test: isTest,\n        lineItems,\n      },\n    },\n  );\n\n  if (mutationResponse.errors) {\n    throw new BillingError({\n      message: 'Error while billing the store',\n      errorData: mutationResponse.errors,\n    });\n  }\n\n  return mutationResponse.data!;\n}\n\nasync function requestSinglePayment({\n  billingConfig,\n  plan,\n  client,\n  returnUrl,\n  isTest,\n}: RequestOneTimePaymentInternalParams): Promise<SinglePaymentResponse> {\n  const mutationResponse = await client.request<SinglePaymentResponse>(\n    ONE_TIME_PURCHASE_MUTATION,\n    {\n      variables: {\n        name: plan,\n        returnUrl,\n        test: isTest,\n        price: {\n          amount: billingConfig.amount,\n          currencyCode: billingConfig.currencyCode,\n        },\n      },\n    },\n  );\n\n  if (mutationResponse.errors) {\n    throw new BillingError({\n      message: 'Error while billing the store',\n      errorData: mutationResponse.errors,\n    });\n  }\n\n  return mutationResponse.data!;\n}\n\nfunction mergeBillingConfigs(\n  billingConfig: BillingConfigSubscriptionLineItemPlan,\n  overrides: RequestConfigLineItemOverrides,\n): BillingConfigSubscriptionLineItemPlan {\n  const mergedConfig = {...billingConfig, ...overrides};\n  const mergedLineItems = [];\n\n  if (billingConfig.lineItems && overrides.lineItems) {\n    for (const i of billingConfig.lineItems) {\n      let found = false;\n\n      for (const j of overrides.lineItems) {\n        if (i.interval === j!.interval) {\n          mergedLineItems.push({...i, ...j});\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        mergedLineItems.push(i);\n      }\n    }\n\n    mergedConfig.lineItems = mergedLineItems;\n  }\n\n  return mergedConfig as BillingConfigSubscriptionLineItemPlan;\n}\n", "import {ConfigInterface} from '../base-types';\nimport {graphqlClientClass} from '../clients/admin';\nimport {BillingError, GraphqlQueryError} from '../error';\n\nimport {\n  AppSubscription,\n  BillingCancel,\n  BillingCancelParams,\n  CancelResponse,\n  APP_SUBSCRIPTION_FRAGMENT,\n} from './types';\n\nconst CANCEL_MUTATION = `\n  ${APP_SUBSCRIPTION_FRAGMENT}\n  mutation appSubscriptionCancel($id: ID!, $prorate: Boolean) {\n    appSubscriptionCancel(id: $id, prorate: $prorate) {\n      appSubscription {\n        ...AppSubscriptionFragment\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nexport function cancel(config: ConfigInterface): BillingCancel {\n  return async function (\n    subscriptionInfo: BillingCancelParams,\n  ): Promise<AppSubscription> {\n    const {session, subscriptionId, prorate = true} = subscriptionInfo;\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    try {\n      const response = await client.request<CancelResponse>(CANCEL_MUTATION, {\n        variables: {id: subscriptionId, prorate},\n      });\n\n      if (response.data?.appSubscriptionCancel?.userErrors.length) {\n        throw new BillingError({\n          message: 'Error while canceling a subscription',\n          errorData: response.data?.appSubscriptionCancel?.userErrors,\n        });\n      }\n\n      return response.data?.appSubscriptionCancel?.appSubscription!;\n    } catch (error) {\n      if (error instanceof GraphqlQueryError) {\n        throw new BillingError({\n          message: error.message,\n          errorData: error.response?.errors,\n        });\n      } else {\n        throw error;\n      }\n    }\n  };\n}\n", "import {BillingError} from '../error';\nimport {ConfigInterface} from '../base-types';\nimport {graphqlClientClass} from '../clients/admin';\n\nimport {\n  ActiveSubscriptions,\n  BillingSubscriptionParams,\n  BillingSubscriptions,\n  SubscriptionResponse,\n  APP_SUBSCRIPTION_FRAGMENT,\n} from './types';\nimport {convertLineItems} from './utils';\n\nconst SUBSCRIPTION_QUERY = `\n${APP_SUBSCRIPTION_FRAGMENT}\nquery appSubscription {\n  currentAppInstallation {\n    activeSubscriptions {\n      ...AppSubscriptionFragment\n    }\n  }\n}\n`;\n\nexport function subscriptions(config: ConfigInterface): BillingSubscriptions {\n  return async function ({\n    session,\n  }: BillingSubscriptionParams): Promise<ActiveSubscriptions> {\n    if (!config.future?.unstable_managedPricingSupport && !config.billing) {\n      throw new BillingError({\n        message: 'Attempted to look for purchases without billing configs',\n        errorData: [],\n      });\n    }\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    const response =\n      await client.request<SubscriptionResponse>(SUBSCRIPTION_QUERY);\n\n    if (!response.data?.currentAppInstallation?.activeSubscriptions) {\n      return {activeSubscriptions: []};\n    }\n\n    const activeSubscriptions =\n      response.data.currentAppInstallation.activeSubscriptions;\n    activeSubscriptions.forEach((subscription) => {\n      if (subscription.lineItems) {\n        subscription.lineItems = convertLineItems(subscription.lineItems);\n      }\n    });\n\n    return {\n      activeSubscriptions,\n    };\n  };\n}\n", "import {ConfigInterface} from '../base-types';\nimport {BillingError, GraphqlQueryError} from '../error';\nimport {GraphqlClient, graphqlClientClass} from '../clients/admin';\n\nimport {\n  AppSubscription,\n  BillingCreateUsageRecord,\n  BillingCreateUsageRecordParams,\n  UsageRecord,\n  UsageRecordCreateResponse,\n  Money,\n} from './types';\nimport {assessPayments} from './check';\nimport {convertAppRecurringPricingMoney, convertAppUsagePricingMoney} from './utils';\ninterface InternalParams {\n  client: GraphqlClient;\n  isTest?: boolean;\n}\n\ninterface CreateUsageRecordVariables {\n  description: string;\n  price: Money;\n  subscriptionLineItemId: string;\n  idempotencyKey?: string;\n}\n\nconst CREATE_USAGE_RECORD_MUTATION = `\nmutation appUsageRecordCreate($description: String!, $price: MoneyInput!, $subscriptionLineItemId: ID!) {\n  appUsageRecordCreate(description: $description, price: $price, subscriptionLineItemId: $subscriptionLineItemId) {\n    userErrors {\n      field\n      message\n    }\n    appUsageRecord {\n      id\n      description\n      idempotencyKey\n      price {\n        amount\n        currencyCode\n      }\n      subscriptionLineItem {\n        id\n        plan {\n          pricingDetails {\n            ... on AppUsagePricing {\n              balanceUsed {\n                amount\n                currencyCode\n              }\n              cappedAmount {\n                amount\n                currencyCode\n              }\n              terms\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport function createUsageRecord(\n  config: ConfigInterface,\n): BillingCreateUsageRecord {\n  return async function createUsageRecord(\n    usageRecordInfo: BillingCreateUsageRecordParams,\n  ): Promise<UsageRecord> {\n    const {\n      session,\n      subscriptionLineItemId,\n      description,\n      price,\n      idempotencyKey,\n      isTest = true,\n    } = usageRecordInfo;\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    // If a subscription line item ID is not passed, we will query Shopify\n    // for an active usage subscription line item ID\n    const usageSubscriptionLineItemId = subscriptionLineItemId\n      ? subscriptionLineItemId\n      : await getUsageRecordSubscriptionLineItemId({client, isTest});\n\n    const variables: CreateUsageRecordVariables = {\n      description,\n      price,\n      subscriptionLineItemId: usageSubscriptionLineItemId,\n    };\n    if (idempotencyKey) {\n      variables.idempotencyKey = idempotencyKey;\n    }\n\n    try {\n      const response = await client.request<UsageRecordCreateResponse>(\n        CREATE_USAGE_RECORD_MUTATION,\n        {\n          variables,\n        },\n      );\n      if (response.data?.appUsageRecordCreate?.userErrors.length) {\n        throw new BillingError({\n          message: 'Error while creating a usage record',\n          errorData: response.data?.appUsageRecordCreate?.userErrors,\n        });\n      }\n\n      const appUsageRecord = response.data?.appUsageRecordCreate?.appUsageRecord!;\n      convertAppRecurringPricingMoney(appUsageRecord.price);\n      convertAppUsagePricingMoney(appUsageRecord.subscriptionLineItem.plan.pricingDetails);\n\n      return appUsageRecord;\n    } catch (error) {\n      if (error instanceof GraphqlQueryError) {\n        throw new BillingError({\n          message: error.message,\n          errorData: error.response?.errors,\n        });\n      } else {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function getUsageRecordSubscriptionLineItemId({\n  client,\n  isTest,\n}: InternalParams): Promise<string> {\n  const payments = await assessPayments({client, isTest});\n\n  if (!payments.hasActivePayment) {\n    throw new BillingError({\n      message: 'No active payment found',\n      errorData: [],\n    });\n  }\n  if (!payments.appSubscriptions.length) {\n    throw new BillingError({\n      message: 'No active subscriptions found',\n      errorData: [],\n    });\n  }\n  if (payments.appSubscriptions) {\n    const usageSubscriptionLineItemId = getUsageLineItemId(\n      payments.appSubscriptions,\n    );\n    return usageSubscriptionLineItemId;\n  }\n  throw new BillingError({\n    message: 'Unable to find active subscription line item',\n    errorData: [],\n  });\n}\n\nfunction getUsageLineItemId(subscriptions: AppSubscription[]): string {\n  for (const subscription of subscriptions) {\n    // An app can have only one active subscription\n    if (subscription.status === 'ACTIVE' && subscription.lineItems) {\n      // An app can have only one usage subscription line item\n      for (const lineItem of subscription.lineItems) {\n        if ('balanceUsed' in lineItem.plan.pricingDetails) {\n          return lineItem.id;\n        }\n      }\n    }\n  }\n\n  throw new BillingError({\n    message: 'No active usage subscription found',\n    errorData: [],\n  });\n}\n", "import {BillingError, GraphqlQueryError} from '../error';\nimport {ConfigInterface} from '../base-types';\nimport {graphqlClientClass} from '../clients/admin';\n\nimport {\n  BillingUpdateUsageCappedAmount,\n  BillingUpdateUsageCappedAmountParams,\n  BillingUpdateUsageCappedAmountResponse,\n  UpdateCappedAmountConfirmation,\n  APP_SUBSCRIPTION_FRAGMENT,\n} from './types';\nimport {convertLineItems} from './utils';\n\nconst UPDATE_USAGE_CAPPED_AMOUNT_MUTATION = `\n${APP_SUBSCRIPTION_FRAGMENT}\nmutation appSubscriptionLineItemUpdate($cappedAmount: MoneyInput!, $id: ID!) {\n  appSubscriptionLineItemUpdate(cappedAmount: $cappedAmount, id: $id) {\n    userErrors {\n      field\n      message\n    }\n    confirmationUrl\n    appSubscription {\n      ...AppSubscriptionFragment\n    }\n  }\n}\n`;\n\nexport function updateUsageCappedAmount(\n  config: ConfigInterface,\n): BillingUpdateUsageCappedAmount {\n  return async function updateUsageCappedAmount(\n    params: BillingUpdateUsageCappedAmountParams,\n  ): Promise<UpdateCappedAmountConfirmation> {\n    if (!config.billing) {\n      throw new BillingError({\n        message: 'Attempted to update line item without billing configs',\n        errorData: [],\n      });\n    }\n\n    const {\n      session,\n      subscriptionLineItemId,\n      cappedAmount: {amount, currencyCode},\n    } = params;\n\n    const GraphqlClient = graphqlClientClass({config});\n    const client = new GraphqlClient({session});\n\n    try {\n      const response =\n        await client.request<BillingUpdateUsageCappedAmountResponse>(\n          UPDATE_USAGE_CAPPED_AMOUNT_MUTATION,\n          {\n            variables: {\n              id: subscriptionLineItemId,\n              cappedAmount: {\n                amount,\n                currencyCode,\n              },\n            },\n          },\n        );\n\n      if (response.data?.appSubscriptionLineItemUpdate?.userErrors.length) {\n        throw new BillingError({\n          message: 'Error while updating usage subscription capped amount',\n          errorData: response.data?.appSubscriptionLineItemUpdate?.userErrors,\n        });\n      }\n\n      const appSubscription =\n        response.data?.appSubscriptionLineItemUpdate?.appSubscription!;\n      if (appSubscription && appSubscription.lineItems) {\n        appSubscription.lineItems = convertLineItems(appSubscription.lineItems);\n      }\n\n      return {\n        confirmationUrl:\n          response.data?.appSubscriptionLineItemUpdate?.confirmationUrl!,\n        appSubscription,\n      };\n    } catch (error) {\n      if (error instanceof GraphqlQueryError) {\n        throw new BillingError({\n          message: error.message,\n          errorData: error.response?.errors,\n        });\n      }\n\n      throw error;\n    }\n  };\n}\n", "import {ConfigInterface} from '../base-types';\nimport {FutureFlagOptions} from '../../future/flags';\n\nimport {check} from './check';\nimport {request} from './request';\nimport {cancel} from './cancel';\nimport {subscriptions} from './subscriptions';\nimport {createUsageRecord} from './create-usage-record';\nimport {updateUsageCappedAmount} from './update-usage-subscription-capped-amount';\nimport {ShopifyBilling} from './types';\n\nexport type {ShopifyBilling} from './types';\n\nexport function shopifyBilling<Future extends FutureFlagOptions>(\n  config: ConfigInterface,\n): ShopifyBilling<Future> {\n  return {\n    check: check(config),\n    request: request(config),\n    cancel: cancel(config),\n    subscriptions: subscriptions(config),\n    createUsageRecord: createUsageRecord(config),\n    updateUsageCappedAmount: updateUsageCappedAmount(config),\n  };\n}\n", "import {\n  HmacValidationType,\n  ValidationInvalid,\n  ValidationValid,\n  ValidateParams,\n} from '../utils/types';\nimport {validateHmacFromRequestFactory} from '../utils/hmac-validator';\nimport {ConfigInterface} from '../base-types';\n\nexport function validateFactory(config: ConfigInterface) {\n  return async function validate({\n    rawBody,\n    ...adapterArgs\n  }: ValidateParams): Promise<ValidationInvalid | ValidationValid> {\n    return validateHmacFromRequestFactory(config)({\n      type: HmacValidationType.Flow,\n      rawBody,\n      ...adapterArgs,\n    });\n  };\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {validateFactory} from './validate';\n\nexport function shopifyFlow(config: ConfigInterface) {\n  return {\n    validate: validateFactory(config),\n  };\n}\n\nexport type ShopifyFlow = ReturnType<typeof shopifyFlow>;\n", "import {ConfigInterface} from '../base-types';\nimport {validateHmacFromRequestFactory} from '../utils/hmac-validator';\nimport {\n  HmacValidationType,\n  ValidateParams,\n  ValidationInvalid,\n  ValidationValid,\n} from '../utils/types';\n\nexport function validateFactory(config: ConfigInterface) {\n  return async function validate({\n    rawBody,\n    ...adapterArgs\n  }: ValidateParams): Promise<ValidationInvalid | ValidationValid> {\n    return validateHmacFromRequestFactory(config)({\n      type: HmacValidationType.FulfillmentService,\n      rawBody,\n      ...adapterArgs,\n    });\n  };\n}\n", "import {ConfigInterface} from '../base-types';\n\nimport {validateFactory} from './validate';\n\nexport function fulfillmentService(config: ConfigInterface) {\n  return {\n    validate: validateFactory(config),\n  };\n}\n\nexport type FulfillmentService = ReturnType<typeof fulfillmentService>;\n", "import {loadRestResources} from '../rest/load-rest-resources';\nimport {ShopifyRestResources} from '../rest/types';\nimport {abstractRuntimeString} from '../runtime/platform';\nimport {FutureFlagOptions, logDisabledFutureFlags} from '../future/flags';\n\nimport {ConfigParams, ConfigInterface} from './base-types';\nimport {validateConfig} from './config';\nimport {clientClasses, ShopifyClients} from './clients';\nimport {shopifyAuth, ShopifyAuth} from './auth';\nimport {shopifySession, ShopifySession} from './session';\nimport {shopifyUtils, ShopifyUtils} from './utils';\nimport {shopifyWebhooks, ShopifyWebhooks} from './webhooks';\nimport {shopifyBilling, ShopifyBilling} from './billing';\nimport {logger, ShopifyLogger} from './logger';\nimport {SHOPIFY_API_LIBRARY_VERSION} from './version';\nimport {restClientClass} from './clients/admin/rest/client';\nimport {ShopifyFlow, shopifyFlow} from './flow';\nimport {FulfillmentService, fulfillmentService} from './fulfillment-service';\n\nexport * from './error';\nexport * from './session/classes';\n\nexport * from '../rest/types';\nexport * from './types';\nexport * from './base-types';\nexport * from './auth/types';\nexport * from './billing/types';\nexport * from './clients/types';\nexport * from './session/types';\nexport * from './webhooks/types';\nexport * from './utils/types';\n\nexport interface Shopify<\n  Params extends ConfigParams = ConfigParams,\n  Resources extends ShopifyRestResources = ShopifyRestResources,\n  Future extends FutureFlagOptions = FutureFlagOptions,\n> {\n  config: ConfigInterface<Params>;\n  clients: ShopifyClients;\n  auth: ShopifyAuth;\n  session: ShopifySession;\n  utils: ShopifyUtils;\n\n  /**\n   * Functions for working with webhooks.\n   *\n   * Most of these functions are used for interacting with shop-specific webhooks.\n   * Unless your app needs different webhooks for different shops, we recommend using app-specific webhooks instead:\n   *\n   * {@link https://shopify.dev/docs/apps/build/webhooks/subscribe#app-specific-subscriptions}\n   *\n   * If you use only app-specific webhooks, the only function you will need is `shopify.webhooks.validate`.\n   */\n  webhooks: ShopifyWebhooks;\n  billing: ShopifyBilling<Future>;\n  logger: ShopifyLogger;\n  rest: Resources;\n  flow: ShopifyFlow;\n  fulfillmentService: FulfillmentService;\n}\n\nexport function shopifyApi<\n  Params extends ConfigParams<Resources, Future>,\n  Resources extends ShopifyRestResources,\n  Future extends FutureFlagOptions,\n>({\n  future,\n  restResources,\n  ...config\n}: {future?: Future; restResources?: Resources} & Params): Shopify<\n  Params,\n  Resources,\n  Future\n> {\n  const libConfig = {...config, future, restResources};\n  const validatedConfig = validateConfig(libConfig);\n\n  const shopify = {\n    config: validatedConfig,\n    clients: clientClasses(validatedConfig),\n    auth: shopifyAuth(validatedConfig),\n    session: shopifySession(validatedConfig),\n    utils: shopifyUtils(validatedConfig),\n    webhooks: shopifyWebhooks(validatedConfig),\n    billing: shopifyBilling(validatedConfig),\n    flow: shopifyFlow(validatedConfig),\n    fulfillmentService: fulfillmentService(validatedConfig),\n    logger: logger(validatedConfig),\n    rest: {} as Resources,\n  };\n\n  if (restResources) {\n    shopify.rest = loadRestResources({\n      resources: restResources,\n      config: validatedConfig,\n      RestClient: restClientClass({config: validatedConfig}),\n    });\n  }\n\n  shopify.logger\n    .info(\n      `version ${SHOPIFY_API_LIBRARY_VERSION}, environment ${abstractRuntimeString()}`,\n    )\n    .catch((err) => console.log(err));\n\n  logDisabledFutureFlags(validatedConfig, shopify.logger);\n\n  return shopify as Shopify<Params, Resources, Future>;\n}\n"],
  "mappings": "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",
  "names": ["LogSeverity", "ApiVersion", "ShopifyHeader", "ClientType", "BillingInterval", "BillingReplacementBehavior", "StatusCode", "Method", "_a", "_b", "HmacValidationType", "DeliveryMethod", "WebhookOperation", "config", "message", "config", "message", "config", "RestClient", "config", "logger", "_a", "_b", "message", "config", "_a", "logger", "createLogger", "message", "message", "logger", "config", "request", "headers", "decoder", "data", "errors", "_a", "_b", "logger", "year", "config", "DEFAULT_CLIENT_VERSION", "CLIENT", "RETRIABLE_STATUS_CODES", "CLIENT", "logger", "CLIENT", "config", "DEFAULT_CLIENT_VERSION", "Method", "logger", "CLIENT", "generateApiUrlFormatter", "generateClientLogger", "RETRIABLE_STATUS_CODES", "request", "apiVersion", "DEFAULT_CLIENT_VERSION", "Method", "params", "normalizedHeaders", "config", "message", "_a", "ShopifyErrors.HttpRequestError", "ShopifyErrors.GraphqlQueryError", "_b", "ShopifyErrors.HttpMaxRetriesError", "ShopifyErrors.HttpThrottlingError", "ShopifyErrors.HttpInternalError", "ShopifyErrors.HttpResponseError", "config", "ShopifyErrors.MissingRequiredArgument", "message", "isInteger", "value", "INTEGER_REGEX", "test", "isNumber", "NUMBER_REGEX", "isSafeNumber", "config", "Number", "isSafeInteger", "parseInt", "num", "parseFloat", "parsed", "String", "valueDigits", "extractSignificantDigits", "parsedDigits", "approx", "requiredDigits", "length", "startsWith", "substring", "UnsafeNumberReason", "getUnsafeNumberReason", "undefined", "truncate_integer", "isFinite", "overflow", "underflow", "truncate_float", "extractSignificantDigits", "value", "start", "end", "getSignificantDigitRange", "digits", "substring", "dot", "indexOf", "lastIndexOf", "length", "LosslessNumber", "constructor", "value", "isLosslessNumber", "isNumber", "Error", "valueOf", "unsafeReason", "getUnsafeNumberReason", "undefined", "UnsafeNumberReason", "truncate_float", "Number", "parseFloat", "isInteger", "BigInt", "toString", "parseLosslessNumber", "value", "LosslessNumber", "revive", "json", "reviver", "reviveValue", "context", "key", "value", "Array", "isArray", "call", "reviveArray", "isLosslessNumber", "reviveObject", "object", "Object", "keys", "undefined", "array", "i", "length", "String", "parse", "text", "reviver", "options", "optionsObj", "parseNumber", "parseLosslessNumber", "onDuplicateKey", "throwDuplicateKey", "i", "value", "parseValue", "expectValue", "expectEndOfInput", "revive", "parseObject", "charCodeAt", "codeOpeningBrace", "skipWhitespace", "object", "initial", "length", "codeClosingBrace", "eatComma", "start", "key", "parseString", "undefined", "throwObjectKeyExpected", "eatColon", "throwObjectValueExpected", "Object", "prototype", "hasOwnProperty", "call", "isDeepEqual", "returnedValue", "position", "oldValue", "newValue", "throwObjectKeyOrEndExpected", "parseArray", "codeOpeningBracket", "array", "codeClosingBracket", "expectArrayItem", "push", "throwArrayItemOrEndExpected", "parseNumeric", "parseKeyword", "name", "slice", "isWhitespace", "codeDoubleQuote", "result", "codeBackslash", "char", "escapeChar", "escapeCharacters", "isHex", "String", "fromCharCode", "Number", "parseInt", "throwInvalidUnicodeCharacter", "throwInvalidEscapeCharacter", "isValidStringCharacter", "throwInvalidCharacter", "expectEndOfString", "codeMinus", "expectDigit", "codeZero", "isNonZeroDigit", "isDigit", "codeDot", "codeLowercaseE", "codeUppercaseE", "codePlus", "codeComma", "SyntaxError", "gotAt", "codeColon", "numSoFar", "_ref", "pos", "chars", "got", "code", "codeSpace", "codeNewline", "codeTab", "codeReturn", "codeNine", "codeUppercaseA", "codeUppercaseF", "codeLowercaseA", "codeLowercaseF", "codeOne", "a", "b", "Array", "isArray", "every", "item", "index", "isObject", "keys", "Set", "f", "n", "r", "t", "config", "ShopifyErrors.MissingRequiredArgument", "message", "ShopifyErrors.InvalidRequestError", "_a", "_b", "link", "request", "DEFAULT_CONTENT_TYPE", "DEFAULT_SDK_VARIANT", "DEFAULT_CLIENT_VERSION", "SDK_VARIANT_HEADER", "SDK_VERSION_HEADER", "CLIENT", "CLIENT", "logger", "CLIENT", "generateApiUrlFormatter", "config", "DEFAULT_CONTENT_TYPE", "SDK_VARIANT_HEADER", "DEFAULT_SDK_VARIANT", "SDK_VERSION_HEADER", "DEFAULT_CLIENT_VERSION", "generateGetApiUrl", "config", "ShopifyErrors.MissingRequiredArgument", "message", "config", "ShopifyErrors.InvalidSession", "GraphqlClient", "ShopifyErrors.MissingRequiredArgument", "config", "ShopifyErrors.SafeCompareError", "config", "ShopifyErrors.InvalidHmacError", "request", "log", "config", "DataType", "config", "log", "nonce", "message", "_a", "message", "types", "_a", "isObject", "isObject", "parse", "isObject", "_a", "_b", "isObject", "isObject", "_a", "base64url_exports", "decode", "encode", "encode", "decode", "config", "ShopifyErrors.InvalidJwtError", "config", "getCurrentSessionId", "request", "log", "ShopifyErrors.MissingJwtTokenError", "config", "request", "log", "config", "callback", "ShopifyErrors.BotActivityDetected", "ShopifyErrors.CookieNotFound", "ShopifyErrors.InvalidOAuthError", "message", "ShopifyErrors.PrivateAppError", "config", "request", "ShopifyErrors.MissingRequiredArgument", "ShopifyErrors.InvalidRequestError", "RequestedTokenType", "config", "config", "config", "config", "config", "config", "config", "addHandlers", "getTopicsAdded", "getHandlers", "log", "_a", "_b", "config", "register", "log", "GraphqlClient", "_b", "_a", "config", "validate", "request", "log", "config", "process", "ShopifyErrors.InvalidWebhookError", "log", "ShopifyErrors.MissingWebhookCallbackError", "config", "_a", "_b", "config", "check", "_a", "GraphqlClient", "_b", "config", "GraphqlClient", "billingConfig", "_a", "config", "GraphqlClient", "_b", "_a", "config", "_a", "GraphqlClient", "_b", "config", "createUsageRecord", "GraphqlClient", "_b", "_a", "subscriptions", "config", "updateUsageCappedAmount", "GraphqlClient", "_b", "_a", "config", "validateFactory", "config", "validate", "config", "validateFactory", "validateFactory", "config", "validate", "config", "validateFactory", "config"]
}
